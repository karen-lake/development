/*global jQuery*/
/**
 * monash-2016-mango
 * Global JS
 *
 * version: 1.0.0
 * file:    global.js
 * author:  Squiz Australia
 * updated: Wed Aug 07 2019 12:56:43 GMT+1000 (AEST)
 *
 * Table of Contents
 * ----
 * Global
 * Modules
    
 */
'use strict';
/*
--------------------
Global
--------------------
*/
//  Declare JS Enabled.

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

$('body').removeClass('no-js').addClass('js-enabled');

/*
--------------------
Modules
--------------------
*/

/*global gADataLayerPushEvents */
var DEFAULT_ACCORDION_HEADER_CLASS = 'accTitle',
    DEFAULT_ACCORDION_PANEL_CLASS = 'panel',
    DEFAULT_ACCORDION_TARGET_CLASS = 'accContent',
    LEGACY_ACCORDION_HEADER_CLASS = 'accordion__link',
    LEGACY_ACCORDION_PANEL_CLASS = 'accordion__item',
    LEGACY_ACCORDION_TARGET_CLASS = 'accordion__target',
    initAccordions = function initAccordions($el, headerClass, panelClass) {
    headerClass = headerClass === undefined ? DEFAULT_ACCORDION_HEADER_CLASS : headerClass;
    panelClass = panelClass === undefined ? DEFAULT_ACCORDION_PANEL_CLASS : panelClass;

    $el.UberAccordion({ // eslint-disable-line new-cap
        buttonClass: headerClass,
        toggle: true,
        multiple: true,
        expandOnFocus: false,
        preventDefaultButton: true,
        hashChange: false,
        autoExpand: function autoExpand() {
            var $accordion = this.$elem,
                urlFragment = window.location.hash,
                firstHeader = $accordion.find('.' + DEFAULT_ACCORDION_HEADER_CLASS).eq(0),
                isNested = false;
            // Accordion is nested inside another tab or accordion
            if ($accordion.parents('.tabs__tab-content').length || $accordion.parents('.' + DEFAULT_ACCORDION_TARGET_CLASS).length) {
                isNested = true;
            }
            // This accordion has an id matching the URL fragment and is not nested:
            // open matching panel
            if (urlFragment && $accordion.find(urlFragment).length && !isNested) {
                return urlFragment;
            }
            // Check if the first panel should be contracted
            if (firstHeader.data('expanded-by-default') === false) {
                return '';
            }
            // Fallback: open the first panel
            return '#' + firstHeader.attr('id');
        },
        // GA helper for dataLayer push accordion open/close events
        onSelect: function onSelect($button) {
            var btnClassList = $button[0].className,
                accordionItemHeaderText = $button[0].innerText,
                pluginActiveClass = this._defaults.appliedClasses.activeButton,
                gaData = {},

            //Test if the accordion has been opened or closed
            accordionOpen = RegExp('\\b' + pluginActiveClass + '\\b').test(btnClassList),
                accordionState = accordionOpen ? 'open' : 'closed';

            gaData = {
                'event': 'Accordion ' + accordionState,
                'title': accordionItemHeaderText
            };

            gADataLayerPushEvents(gaData);
        }
    });
},
    handleLegacyAccordions = {
    init: function init($accordionEl) {
        var regEx = new RegExp('=', 'g'),
            thisObj = this;

        $accordionEl.attr({
            multiselectable: true,
            role: 'tablist'
        });

        //Iterate through the accordion panels
        $accordionEl.find('.' + LEGACY_ACCORDION_PANEL_CLASS).each(function () {
            var $thisPanel = $(this),
                href = $thisPanel.find('.' + LEGACY_ACCORDION_HEADER_CLASS).attr('href'),
                newID = window.btoa(href).replace(regEx, ''); //Avoid having duplicated ids

            //Format Accordion header
            thisObj.formatHeader($thisPanel, newID);
            //Format Accordion content
            thisObj.formatContent($thisPanel, newID);
        });

        //Init the accordion
        initAccordions($accordionEl, DEFAULT_ACCORDION_HEADER_CLASS, LEGACY_ACCORDION_PANEL_CLASS);
    },
    formatHeader: function formatHeader(panel, referenceID) {
        /**
            Modify the accordion header:
                - Remove the legacy class from the <a>
                - Apply the default class to the parent
                - Apply required ARIA attributes to make the plugin work
        **/
        panel.find('.' + LEGACY_ACCORDION_HEADER_CLASS).removeClass(LEGACY_ACCORDION_HEADER_CLASS).parent().addClass(DEFAULT_ACCORDION_HEADER_CLASS);

        panel.find('.' + DEFAULT_ACCORDION_HEADER_CLASS).attr({
            id: referenceID,
            'aria-controls': referenceID,
            role: 'tab',
            'aria-expanded': false
        });
    },
    formatContent: function formatContent(panel, referenceID) {
        /**
            Modify the accordion target content wrapper
                - Toggle legacy class with the default one
                - Aply required ARIA attributes to make the plugin work
        **/
        panel.find('.' + LEGACY_ACCORDION_TARGET_CLASS).removeClass(LEGACY_ACCORDION_TARGET_CLASS).addClass(DEFAULT_ACCORDION_TARGET_CLASS).attr({
            'aria-labelledby': referenceID,
            'aria-hidden': true,
            role: 'tabpanel'
        });
    }
};

/**
    We have to wait for the load event because we're calling the global function 'gADataLayerPushEvents'.
    This function has been defined in modules/global/js and is out of the document ready or window.load,
    so it exists globally. However, when it gets called in the squiz-module-accordion, it is in fact getting
    called in the plugins.js file (after compiling), which is loaded in the DOM before the global.js
    (where the function exists).
**/
function hashToExpand($, hash, $el) {
    var parentHash, atThisLevel;
    if ($el.find(hash).length > 0) {
        atThisLevel = Boolean($el.find('.tabs__tab-content').first().find('> .tabs__target' + hash).length);
        if (atThisLevel) {
            return hash;
        }
        parentHash = '#' + ($(hash).parents('.tabs__target').attr('id') || hash.replace(/^#/, ''));
        return parentHash;
    }
    return $el.find('.tabs__link').first().attr('href') || ''; //Or case handles tab boxes with no tabs
}

$(window).load(function () {
    var tabsSettings = {
        buttonClass: 'tabs__link',
        autoExpand: function autoExpand() {
            return hashToExpand(jQuery, window.location.hash, this.$elem);
        },
        toggle: false,
        multiple: false,
        //preventDefaultButton: false, // this is overriden with the setting below
        useHistoryReplaceState: true,
        //GA helper for dataLayer push tab open event
        onSelect: function onSelect($button) {
            gADataLayerPushEvents({
                'event': 'Tab open',
                'title': $button[0].innerText
            });

            //Auto expand nested tabs when a parent tab is selected
            if (window.location.hash.indexOf(',') === -1) {
                // <-- Related to MS-52 - check ticket for more details
                var $tabEl = $button;
                setTimeout(function () {
                    if ($($tabEl.attr('href')).find('.tabs__target:visible').length === 0) {
                        $($tabEl.attr('href')).find('.tabs__link').eq(0).click();
                    }
                }, 1);
            }
        }
    };

    // Init tabs
    $('.tabs').not('.tabs--nested').UberAccordion(tabsSettings); // eslint-disable-line new-cap
    $('.tabs--nested').UberAccordion(tabsSettings); // eslint-disable-line new-cap

    // Init accordions
    $('.accordion').each(function () {
        var $thisAccordion = $(this);

        if (!$thisAccordion.find('.' + DEFAULT_ACCORDION_HEADER_CLASS).length || !$thisAccordion.find('.' + DEFAULT_ACCORDION_PANEL_CLASS).length) {
            //Legacy accordion markup fallback
            handleLegacyAccordions.init($thisAccordion);
        } else {
            //Regular accordion markup structure
            initAccordions($thisAccordion, DEFAULT_ACCORDION_HEADER_CLASS, DEFAULT_ACCORDION_PANEL_CLASS);
        }
    });
});

/*global gADataLayerPushEvents */

var boxVideoLinksSelector = '.box-featured__video-thumb-link, .box-listing-element__video-thumb-link',
    breakpointWidePX = breakpointWideEM * bodyFontSize,
    defaultVideoTitle = 'Monash University video',
    mqWide = '(min-width: 60em)',
    mqListener = window.matchMedia(mqWide),
    popupRemovalDelay = 160,
    bodyFontSize = Number(getComputedStyle(document.body, '').fontSize.match(/(\d*(\.\d*)?)px/)[1]),
    breakpointWideEM = 60;

/* Inject embedded Vimeo or YouTube iframe for box listing videos
     * at mobile size only.
     */
function handleBoxVideos(mql) {
    var videoLinks = $(boxVideoLinksSelector),
        videoWrapperSelector = '.video-container';
    if (mql.matches) {
        videoLinks.each(function (i, el) {
            // Show video thumbnail (for modal) at wide screen size and above.
            $(el).show();
            // Hide existing embedded video iframe.
            $(el).next(videoWrapperSelector).hide();
        });
        videoLinks.show();
    } else {
        videoLinks.each(function (i, el) {
            // eslint-disable-line consistent-return
            var $el = $(el),
                videoID = $el.data('video-id'),
                videoURL = $el.prop("href"),
                videoEmbedHTML = '';
            // Hide video thumbnail (for modal) at mobile screen size.
            $el.hide();
            // Show existing embedded video iframe.
            $el.next(videoWrapperSelector).show();
            /* Don't create embedded iframe video if:
             * - There is no video ID; or
             * - An iframe already exists
             */
            if (typeof videoID === 'undefined' || !videoID || $el.next(videoWrapperSelector).length) {
                return true;
            }
            if (videoURL.toLowerCase().indexOf("vimeo") >= 0) {
                videoEmbedHTML = '<div class="video-container"><iframe src="https://player.vimeo.com/video/' + videoID + '" frameborder="0" allowfullscreen></iframe></div>';
            } else {
                videoEmbedHTML = '<div class="video-container"><iframe src="https://www.youtube.com/embed/' + videoID + '?showinfo=0" frameborder="0" allowfullscreen></iframe></div>';
            }
            // Inject Vimeo or YouTube video iframe if videoURL exists
            $(videoEmbedHTML).insertAfter($(el)).show();
        });
    }
}

var boxVideosInit = function boxVideosInit() {
    var iframeOptions = {
        patterns: {
            youtube_short: { // eslint-disable-line camelcase
                index: 'youtube.com/',
                id: function id(src) {
                    // link pattern
                    var mt = src.match(/v=([^&]+)(&(.*))?/);

                    if (mt) {
                        return mt[1] + '?' + mt[3];
                    }

                    // embed pattern
                    mt = src.match(/embed\/([^\?\/]+)(\?(.*))?/);
                    if (mt) {
                        return mt[1] + '?' + mt[3];
                    }
                },
                src: '//www.youtube.com/embed/%id%&autoplay=1&rel=0'
            },
            youtube: {
                index: 'youtu.be/',
                id: 'youtu.be/',
                src: '//www.youtube.com/embed/%id%?autoplay=1'
            }
        }
    };

    // Handle feature box and listing box video behaviour on page load and screen resize
    mqListener.addListener(handleBoxVideos);
    handleBoxVideos(mqListener);

    /* Display video in modal at ≥ wide size only. */
    $(boxVideoLinksSelector).magnificPopup({
        type: 'iframe',
        disableOn: breakpointWidePX,
        removalDelay: popupRemovalDelay,
        preloader: false,
        fixedContentPos: false,
        iframe: iframeOptions,
        callbacks: {
            markupParse: function markupParse(template, values, item) {
                var videoTitle = item.el.eq(0).attr('title') || defaultVideoTitle,
                    videoFrame = template.find('iframe');
                videoFrame.attr('title', videoTitle);
            }
        }
    });
};

(function ($) {

    /* The following modules have video variants which play a video in a modal:
     *
     * - box-featured
     * - box-listing-element
     *
     * Behaviour is as follows:
     *
     * - Mobile: hide video thumbnail, inject embedded iframe
     * - ≥ Wide: open video inside modal
     */

    /* Toggle carousel pause when a modal is opened/closed:
     *
     * - When a modal is opened, pause all animating carousels on the page.
     * - When a modal is closed, resume all animating carousels on the page.
     */
    function toggleAutoplayCarousels(pause) {
        var carousels = $('.banner__carousel');
        carousels.each(function (i, el) {
            var togglePause = $(el).find('.slick-toggle-pause').eq(0);
            // Carousel has been manually paused by user - do nothing
            if (togglePause.length && togglePause.attr('aria-pressed') === 'true') {
                return true;
            }
            // Pause all carousels before opening modal
            if (pause) {
                $(el).slick('slickPause');
            }
            // Unpause all carousels after modal is closed
            else {
                    $(el).slick('slickPlay');
                }
            return false;
        });
    }

    boxVideosInit();

    /* Banners always display a modal because the imagery and
     * the Monash "M" branding is important, so the banner image
     * must always be displayed at all screen sizes.
     *
     * This means the user will have to tap twice to play the video:
     * - First tap: launch modal with embedded video
     * - Second tap: play the embedded video
     *
     * Autoplay of the video in the modal is not possible, as most
     * OSes prohibit this behaviour to save on bandwidth:
     *
     * https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/Device-SpecificConsiderations/Device-SpecificConsiderations.html
     */
    $('.banner__carousel-video-link, .banner__video-link').magnificPopup({
        type: 'iframe',
        removalDelay: popupRemovalDelay,
        preloader: false,
        fixedContentPos: false,
        callbacks: {
            beforeOpen: function beforeOpen() {
                toggleAutoplayCarousels(true);
            },
            afterClose: function afterClose() {
                toggleAutoplayCarousels(false);
            }
        }
    });

    //Fire dataLayer.push() when the video lightbox is open
    $('.js-listing-box-video-link').on('mfpOpen', function () {
        var $playButton = $(this),
            $parentBox = $playButton.closest('.box-listing-element'),
            eventTitle = $parentBox.find('h3').text() + ' - ' + $parentBox.find('.box-listing-element__description').text();
        gADataLayerPushEvents({
            'event': 'Lightbox open',
            'title': eventTitle
        });
    });
})(jQuery);

/*eslint no-console: 0, new-cap: 0*/
(function ($) {
    // Match this with the breakpoint at which the screen transforms
    // from smaller size to medium size
    var minMq = '(min-width: 60em)',
        $nav = $('.navbar__dropdown');

    // Check if a jQuery Object is empty
    function isEmptyWrapper($wrapperItem) {
        if ($wrapperItem.text().trim().length > 0) {
            return false;
        }
        var $children = $wrapperItem.children();

        for (var i = 0; i < $children.length; i += 1) {
            if ($($children[i]).text().trim().length > 0) {
                return false;
            }
        }
        return true;
    };

    // remove empty sub-nav wrapper
    $('.sub-nav__wrapper').each(function () {
        var $this = $(this),
            $children = $this.children('.wrapper__item');

        for (var i = 0; i < $children.length; i += 1) {
            // no more processing if there's a non-empty children
            if (!isEmptyWrapper($($children[i]))) {
                return;
            }
        }

        // remove the container if everything inside is empty
        $this.parent('.sub-mega-nav').remove();
    });

    // Load the menu
    function loadMenu() {
        // var isCurrent = $nav.find('.navbar__item--current .sub-nav').length !== 0;
        $('.navbar__dropdown').NavBar();
    }
    window.matchMedia(minMq).addListener(function (mql) {
        if (mql.matches) {
            loadMenu();
            $nav.NavBar('init');
        } else {
            $nav.NavBar('destroy');
        }
    });

    if (window.matchMedia(minMq).matches) {
        loadMenu();
    }
})(jQuery);

(function ($) {

    /*
     * No parallax animations to init - bail out to prevent page
     * from slowing down.
     */
    if (!$('.parallax').length) {
        return;
    }

    var ua = window.navigator.userAgent,
        appName = window.navigator.appName,
        isIE = false;

    if (appName === 'Microsoft Internet Explorer' && ua.indexOf('MSIE ') || /Trident/.test(ua) && appName === 'Netscape') {
        isIE = true;
    }

    // Parallax behavior is generally undesirable on
    // mobile devices or ie8 and older due to performance issues
    // and screen real-estate. If you want parallax behavior to
    // init and destroy on screen resize consider a listener on a
    // window.matchMedia media query list object and call:
    // parallax.destroy()
    var mqWide = '(min-width: 60em)',
        mqListener = window.matchMedia(mqWide);

    /* Apply parallax animation at ≥ wide screen size. */
    function handleBannerParallax(mql) {
        var debounceSpeed = 5;
        if (mql.matches) {
            // Init parallax
            $('.parallax').SquizParallax({ // eslint-disable-line new-cap
                smoothScroll: false,
                debounceScroll: isIE ? debounceSpeed : 0
            });
        } else {
            // Destroy parallax
            if (typeof $('.parallax').data('plugin_SquizParallax') !== 'undefined' && $('.parallax').data('plugin_SquizParallax')) {
                $('.parallax').data('plugin_SquizParallax').destroy();
            }
        }
    }

    mqListener.addListener(handleBannerParallax);
    handleBannerParallax(mqListener);
})(jQuery);

/*global gADataLayerPushEvents */

(function ($) {

    var bannerCarousel = $('.banner__carousel');

    // Inject play/pause control on carousel init.
    bannerCarousel.on('init', function (ev, slick) {
        var carouselTogglePause;
        // Inject toggle pause button
        carouselTogglePause = $('<button type="button" class="slick-toggle-pause">Toggle Pause</button>').appendTo(slick.$slider);
        // Set initial state of play/pause button based on carousel's current play/pause state
        carouselTogglePause.attr('aria-pressed', slick.paused);
        // When pause toggle is clicked, toggle the carousel state correspondingly
        carouselTogglePause.on('click.togglePause', slick, function () {
            if (slick.paused) {
                slick.$slider.slick('slickPlay');
            } else {
                slick.$slider.slick('slickPause');
            }
            // Change button state to match carousel state
            carouselTogglePause.attr('aria-pressed', slick.paused);
        });
        // Push carousel control activated event to Google Analytics
        $(slick.$slider).on('click', '.slick-dots > li, .slick-arrow, .slick-toggle-pause', {
            targetCarousel: slick
        }, function (gaEvent) {
            var carouselControl = gaEvent.currentTarget,
                analyticsData = {
                'event': 'carouselControl',
                'eventAction': 'navigate-key'
            },
                currentSlide = gaEvent.data.targetCarousel.currentSlide,
                paused = gaEvent.data.targetCarousel.paused,
                actionMap = [{
                matchClass: 'slick-prev',
                eventAction: 'navigate-previous'
            }, {
                matchClass: 'slick-next',
                eventAction: 'navigate-next'
            }, {
                matchClass: 'slick-toggle-pause',
                eventAction: 'navigate-pause'
            }];
            // Which control was activated?
            // (Will fallback to "slick dot" carousel indicator as default carousel control)
            actionMap.forEach(function (item) {
                var currentClass = item.matchClass,
                    currentAction = item.eventAction;
                // Match event action to carousel control class name
                if ($(carouselControl).hasClass(currentClass)) {
                    analyticsData.eventAction = currentAction;
                    // Special case: check if pause button was toggled off
                    // (ie. current state is now play instead of pause)
                    if (currentAction === 'navigate-pause' && !paused) {
                        analyticsData.eventAction = 'navigate-play';
                    }
                }
            });
            // Always capture current slide (after slide change)
            analyticsData.eventValue = currentSlide;
            // Push data to Google Analytics
            gADataLayerPushEvents(analyticsData);
        });
    });

    // Push banner change event to Google Analytics
    var bannerSlideChangeGAhelper = function bannerSlideChangeGAhelper(event, heading, slideNr) {
        // eslint-disable-line no-unused-vars
        var bannerDisplayedGAObj = {
            'event': event,
            'bannerTitle': heading,
            'bannerPosition': slideNr
        };
        gADataLayerPushEvents(bannerDisplayedGAObj);
    };

    bannerCarousel.on('init', function (slick) {
        var firstSlideHeading = $(slick.currentTarget).find('.slick-slide').eq(0).find('.banner__heading').html();
        function waitForDataLayer() {
            if (typeof gADataLayerPushEvents !== 'undefined' && $.isFunction(gADataLayerPushEvents)) {
                bannerSlideChangeGAhelper('Banner Impression', firstSlideHeading, 1);
            } else {
                setTimeout(waitForDataLayer, 100);
            }
        };
        waitForDataLayer();
    });

    bannerCarousel.on('beforeChange', function (event, slick, currentSlide, nextSlide) {
        var nextSlideHeading = $(slick.$list[0]).find('.slick-slide').eq(nextSlide).find('.banner__heading').html();
        bannerSlideChangeGAhelper('Banner Impression', nextSlideHeading, nextSlide + 1);
    });

    // Init banner carousel
    bannerCarousel.slick({
        dots: true,
        arrows: true,
        slide: '.banner__carousel-slide',
        autoplay: true,
        fade: true,
        pauseOnHover: false,
        waitForAnimate: false
    });
})(jQuery);

/*(function($){
    'use strict';*/

// Production steps of ECMA-262, Edition 6, 22.1.2.1
if (!Array.from) {
    Array.from = function () {
        var toStr = Object.prototype.toString;
        var isCallable = function isCallable(fn) {
            return typeof fn === 'function' || toStr.call(fn) === '[object Function]';
        };
        var toInteger = function toInteger(value) {
            var number = Number(value);
            if (isNaN(number)) {
                return 0;
            }
            if (number === 0 || !isFinite(number)) {
                return number;
            }
            return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));
        };
        var maxSafeInteger = Math.pow(2, 53) - 1;
        var toLength = function toLength(value) {
            var len = toInteger(value);
            return Math.min(Math.max(len, 0), maxSafeInteger);
        };

        // The length property of the from method is 1.
        return function from(arrayLike /*, mapFn, thisArg */) {
            // 1. Let C be the this value.
            var C = this;

            // 2. Let items be ToObject(arrayLike).
            var items = Object(arrayLike);

            // 3. ReturnIfAbrupt(items).
            if (arrayLike == null) {
                throw new TypeError("Array.from requires an array-like object - not null or undefined");
            }

            // 4. If mapfn is undefined, then let mapping be false.
            var mapFn = arguments.length > 1 ? arguments[1] : void undefined;
            var T;
            if (typeof mapFn !== 'undefined') {
                // 5. else
                // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.
                if (!isCallable(mapFn)) {
                    throw new TypeError('Array.from: when provided, the second argument must be a function');
                }

                // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.
                if (arguments.length > 2) {
                    T = arguments[2];
                }
            }

            // 10. Let lenValue be Get(items, "length").
            // 11. Let len be ToLength(lenValue).
            var len = toLength(items.length);

            // 13. If IsConstructor(C) is true, then
            // 13. a. Let A be the result of calling the [[Construct]] internal method 
            // of C with an argument list containing the single item len.
            // 14. a. Else, Let A be ArrayCreate(len).
            var A = isCallable(C) ? Object(new C(len)) : new Array(len);

            // 16. Let k be 0.
            var k = 0;
            // 17. Repeat, while k < len… (also steps a - h)
            var kValue;
            while (k < len) {
                kValue = items[k];
                if (mapFn) {
                    A[k] = typeof T === 'undefined' ? mapFn(kValue, k) : mapFn.call(T, kValue, k);
                } else {
                    A[k] = kValue;
                }
                k += 1;
            }
            // 18. Let putStatus be Put(A, "length", len, true).
            A.length = len;
            // 20. Return A.
            return A;
        };
    }();
}
//}(jQuery));
(function ($) {
    // Fix for checkboxes/radio buttons causing the page to scroll up when selected/unselected
    // Note: only noticeable in chrome
    $('form[id*="page_asset_builder_"] div[id*="_calendar_event_single"] label[for]').on('click', function (e) {
        if (this.getAttribute('for').indexOf('calendar_event') === -1) {
            var target = window[this.htmlFor];
            target.checked = !target.checked;
            e.preventDefault();
        }
    });
})(jQuery);

(function ($) {
    var isIE11 = !!navigator.userAgent.match(/Trident.*rv\:11\./);
    var thumbLinks = $('.box-featured__thumb-link, .box-featured__video-thumb-link, .box-featured__thumb-wrapper');
    if (isIE11 == true) {
        $(window).on('resize', function () {
            thumbLinks.imagesLoaded(function () {
                // IE11 doesn't calculate image height correctly when deeply nested in flex column
                thumbLinks.each(function (i, el) {
                    var thumbnail = $(el).find('.box-featured__thumb-image, .box-featured__video-thumb-image').eq(0),
                        linkHeight = $(el).height(),
                        imageHeight = thumbnail.height();
                    $(el).height(imageHeight);
                });
            });
        });
    }
})(jQuery);

/*global boxVideosInit*/

var $rhsEvents = $('.box-listing-element--events'),
    viewMoreBtnClass = 'js-rhs-events__view-more',

//To be removed from the markup once the Events search page gets impplemented
showAllEventsTmpClass = 'js-show-all-events-on-mobile',
    viewMoreHiddenClass = 'rhs-events__view-more--hidden',
    rhsEventsCtrl = {
    init: function init() {
        if ($rhsEvents.length) {
            this.handleMobileViewMore();
        }
    },
    handleMobileViewMore: function handleMobileViewMore() {
        //Handle View More button click
        $rhsEvents.on('click', '.' + viewMoreBtnClass, function (e) {
            /**
                The functionality of showing all the events on mobile through the btn click has been added
                as a temporary measure while the Events search page is not yet implemented. Removing the
                class 'js-show-all-events-on-mobile' in the markup will make the button to have the regular
                behaviour.
            **/
            if ($rhsEvents.hasClass(showAllEventsTmpClass)) {
                e.preventDefault();
                //Hide the View More button
                $(this).slideUp('fast');
                //Keep standard padding to the footer
                $rhsEvents.addClass(viewMoreHiddenClass);
                //Iterate over the events and make them visible
                $rhsEvents.find('.box-listing-element__events-item').each(function (key, val) {
                    //Only worth to manipulate the n+5 elements
                    if (key > 3) {
                        $(val).slideDown('fast');
                    }
                });
            }
        });
    }
},
    rhsLegacyBoxesCtrl = {
    init: function init() {
        var legVideoBoxes = $('.js-legacy-sidebar-box .video.mediaLightbox').parents('.js-legacy-sidebar-box');

        //Handle standard youtube videos, i.e. regular links, not iFrames
        this.youtubeHandlerStandard(legVideoBoxes);

        //Init Magnific popup handler for the new DOM manipulated elements
        boxVideosInit();

        //Reposition hardcoded iFrames markup in the DOM
        $('.js-legacy-sidebar-box iframe').each(function () {
            $(this).prependTo($(this).parents('.js-legacy-sidebar-box'));
        });

        //Reposition Thumbnails for non video boxes
        this.repositionThumbnails();
    },
    youtubeHandlerStandard: function youtubeHandlerStandard(videoBoxes) {
        var controler = this;
        videoBoxes.each(function () {
            var $thisBox = $(this),
                $videoEl = $thisBox.find('.video.mediaLightbox');
            $videoEl.prependTo($thisBox).addClass('js-listing-box-video-link box-listing-element__video-thumb-link').data('video-id', controler.getYoutubeID($videoEl.attr('href'))).find('img').addClass('box-listing-element__video-thumb-image');
        });
    },
    getYoutubeID: function getYoutubeID(url) {
        var regExp = /^.*((youtu.be\/)|(v\/)|(\/u\/\w\/)|(embed\/)|(watch\?))\??v?=?([^#\&\?]*).*/,
            match = url.match(regExp);
        return match && match[7].length === 11 ? match[7] : false;
    },
    repositionThumbnails: function repositionThumbnails() {
        $('.js-legacy-sidebar-box .panel-summary img').each(function () {
            var $thisEl = $(this),
                $thisElParent = $thisEl.closest('.js-legacy-sidebar-box'),
                linkURL;

            $thisEl.addClass('box-listing-element__thumb-image').prependTo($thisElParent);

            if ($thisElParent.find('a').length) {
                linkURL = $thisElParent.find('a').attr('href');
                $thisEl.wrapAll('<a class="box-listing-element__thumb-link" href="' + linkURL + '"></a>');
            }
        });
    }
};

(function () {
    rhsEventsCtrl.init();
    rhsLegacyBoxesCtrl.init();
})(jQuery);

/*global $, showMoreInit, initTooltips, vars, initPopupVideos*/

/*
 *   Table of contents:
 *
 *       1. CourseSlider constructor
 *       2. CourseSlider assign
 */

// 1. CourseSlider constructor
var CourseSlider = function CourseSlider(options) {
    'use strict';

    this.options = options;
    this.loaded = false;
    this.xhr = undefined;

    // Init - check
    this.init = function () {
        if (this.options.parent.length && this.options.target.length && this.options.trigger.length) {
            this.bind();

            // Create the loader
            var loaderString = vars.spinnerHTML;
            this.options.parent.before('<div class="detail-slider-preloader">' + loaderString + '</div>');
        }
    };

    // Bind clicks that trigger the slider
    this.bind = function () {
        var _this = this,
            minMq = '(min-width: 60em)',
            mobileReplaceString = '';

        // Bind trigger
        options.trigger.on('click', function (e) {
            e.preventDefault();

            /**
                      On mobile, the tabs-to-accordions module adds the '-mobile' to the IDs after cloning
                      them into the accordion. That has to be considered - i.e. not replaced by '' in the condition guard
                      below that checks if target's contents are already loaded. Otherwise, it will load them twice causing a
                      duplication issue.
                       Note: '!window.matchMedia(minMq).matches' means we're in a mobile breakpoint
                  **/
            mobileReplaceString = !window.matchMedia(minMq).matches ? '' : '-mobile';

            if (_this.options.target.find('div[rel="' + $(this).attr('id').replace(mobileReplaceString, '') + '"]').length) {
                _this.showLoadedSlide($(this).attr('id').replace(mobileReplaceString, ''));
            } else {
                _this.ajaxCall($(this));
            }
        });

        // Bind back button
        $('body').on('click', '.slide-back', function () {
            _this.hideSlide($(this));
        });

        /**
                Hide the active loaded slides when a breakpoint change is detected, to avoid having two slides
                displayed at a time once the viewport comes back again to the initial state
            **/
        window.matchMedia(minMq).addListener(function () {
            $('.slide-back').each(function () {
                _this.hideSlide($(this));
            });
        });
    };

    // Show loader
    this.loader = function (status) {
        if (status) {
            this.options.parent.prev().addClass('loading');
        } else {
            this.options.parent.prev().removeClass('loading');
        }
    };

    // Make ajax call
    this.ajaxCall = function (triggerItem) {
        var _this = this;

        // abort last ajax call
        if (this.xhr && this.xhr.readyState !== 4) {
            this.xhr.abort();
        }

        // Set target height
        this.options.target.css('height', this.options.parent.height());

        // Hide parent
        this.options.parent.fadeOut('fast');

        // Show target
        this.options.target.fadeIn('fast', function () {
            // Show loader
            _this.loader(true);

            // Fetch slider html
            var triggerItemHref = triggerItem.attr('data-href') !== '' && triggerItem.attr('data-href') !== undefined ? triggerItem.attr('data-href') : triggerItem.attr('href');
            _this.xhr = $.ajax({
                url: triggerItemHref
            }).success(function (data) {
                _this.loader(false);
                _this.createSlide(data, triggerItem.attr('id'));
            }).error(function () {
                _this.loader(false);
                _this.options.parent.fadeIn('fast');
            });
        });
    };

    // Create new slide
    this.createSlide = function (data, rel) {
        // Create new slide
        var newItem = $('<div class="slideItem out" rel="' + rel + '" />');
        newItem.append($(data).html());

        // Append new slide
        this.options.target.append(newItem);

        showMoreInit(); // source/modules/lhs-content/js
        initTooltips(); // Study.Monash repo: source/modules/at-a-glance/js
        initPopupVideos(newItem.find('.popup__video')); // source/modules/image-video-gallery
        newItem.find('.accordion').UberAccordion({
            // eslint-disable-line new-cap
            buttonClass: 'accTitle',
            toggle: true,
            multiple: true,
            expandOnFocus: false,
            preventDefaultButton: true,
            hashChange: true
        });

        // Show slide
        this.showSlide(rel);
    };

    // Show loaded slide
    this.showLoadedSlide = function (rel) {
        var _this = this;

        // Set target height
        this.options.target.css('height', this.options.parent.height());

        this.options.parent.fadeOut('fast', function () {
            _this.options.target.fadeIn('fast', function () {
                _this.showSlide(rel);
            });
        });
    };

    // Show slide
    this.showSlide = function (rel) {
        var _this = this;

        this.options.target.find('div[rel="' + rel + '"]').show();

        setTimeout(function () {
            _this.options.target.find('div[rel="' + rel + '"]').removeClass('out');
        }, 500);

        // Remove set height
        this.options.target.attr('style', '');

        // Scroll to top
        setTimeout(function () {
            $('html, body').animate({
                scrollTop: _this.options.target.offset().top
            }, 100);
        }, 500);
    };

    // Hide slide
    this.hideSlide = function (backButton) {
        var currentSlide = backButton.parents('.slideItem:first'),
            _this = this;

        currentSlide.addClass('out');

        setTimeout(function () {
            currentSlide.hide();
            _this.options.parent.fadeIn('fast');
            _this.options.target.fadeOut('fast');
        }, 700);
    };
};

// 2. CourseSlider assign
$(document).ready(function () {
    'use strict';

    // Overview

    if ($('#overview-tab-content').length) {
        var overviewSlide = new CourseSlider({
            parent: $('#overview-tab-content'),
            target: $('#overview-slider-content'),
            trigger: $('#overview-tab-content a.slideRightBtn')
        });
        overviewSlide.init();
    }

    if ($('#course-structure-tab-content').length) {
        var courseStructureSlide = new CourseSlider({
            parent: $('#course-structure-tab-content'),
            target: $('#course-structure-slider-content'),
            trigger: $('#course-structure-tab-content a.slideRightBtn')
        });
        courseStructureSlide.init();
    }
});

var custWYSIWYGBuilder = {
    init: function init(el) {
        custWYSIWYGBuilder.loadEditor(el);
    },
    loadEditor: function loadEditor(el) {
        var svgPath = el.attr('data-icons-url'); //path for the toolbar icons svg
        var $el = $(el);
        //Init the plugin
        $el.trumbowyg({
            svgPath: svgPath,
            removeformatPasted: true
        }).on('tbwchange', function () {
            $el.text($el.val());
        });
    }
};

(function () {
    $('textarea.js-cust-wysiwyg').each(function (el) {
        custWYSIWYGBuilder.init($(this));
    });
})(jQuery);

/* global Handlebars, expertlineGatewayURL */

/*
*   Table of contents:
*   
*       1. Expertline JS
*           1.1 Define vars
*           1.2 Helpers
*           1.3 Initiate
*           1.4 Error message
*           1.5 Loader
*           1.6 Process search query
*           1.7 Build page
*           1.8 Switch page
*           1.9 Manage Query
*           1.10 Init onPopState
*           1.11 Prefill the form based on query
*
*       2. Initiate
*
*/
(function ($) {

    /*
    * 1. Expertline JS
    */
    var FBGatewayURL = ''; // default 
    if (typeof expertlineGatewayURL !== 'undefined') {
        FBGatewayURL = expertlineGatewayURL;
    }

    var expertline = {

        // 1.1 Define vars
        variables: {
            xhr: undefined,
            gatewayURL: FBGatewayURL
        },

        // 1.2 Helpers
        helpers: {
            buildHandlebars: function buildHandlebars(templateSrc, json) {
                //var template = templateSrc.html().replace(/\[\[/g,'\{\{').replace(/\]\]/g,'\}\}'), // Remove replace on prod
                var template = templateSrc.html(),
                    compiled = Handlebars.compile(template),
                    html = compiled(json);

                return html;
            },
            centerOn: function centerOn(obj) {
                var $this = obj,
                    posY = $this.offset().top,
                    $thisHeight = $this.outerHeight(),
                    windowHeight = $(window).height(),
                    scrollPos = posY - windowHeight / 2 + $thisHeight / 2;

                $('html, body').animate({ scrollTop: scrollPos }, 200);
            },
            registerHandlebarsHelpers: function registerHandlebarsHelpers() {

                // If
                Handlebars.registerHelper('if_eq', function (a, b, opts) {
                    if (a === b) {
                        return opts.fn(this);
                    } else {
                        return opts.inverse(this);
                    }
                });

                // If not
                Handlebars.registerHelper('if_neq', function (a, b, opts) {
                    if (a === b) {
                        return opts.inverse(this);
                    } else {
                        return opts.fn(this);
                    }
                });

                // If less then or equal
                Handlebars.registerHelper('if_less_eq', function (a, b, opts) {
                    if (a <= b) {
                        return opts.fn(this);
                    } else {
                        return opts.inverse(this);
                    }
                });

                // Slice by delimiter
                Handlebars.registerHelper('sliceBy', function (a, b, opts) {
                    var returnObj = { 'items': a.split(b) };
                    return opts.fn(returnObj);
                });

                // Remove spaces
                Handlebars.registerHelper('removeSpaces', function (context, options) {
                    return options.fn(context.replace(/ /g, ''));
                });

                // show JSON - for debug 
                Handlebars.registerHelper('json', function (context) {
                    return JSON.stringify(context);
                });

                // Pagination
                Handlebars.registerHelper('pagination', function (resultsSummary, QueryString, num, returnPrevHref, returnNextHref, opts) {

                    // Inner helpers
                    function removeFromQuery(query, removeArray) {
                        var queryArray = query.split('&'),
                            queryObj = {},
                            returnArray = [];

                        // Create object from query
                        for (var i = 0; i < queryArray.length; i += 1) {
                            queryObj[queryArray[i].split('=')[0]] = queryArray[i].split('=')[1];
                        }

                        // Remove from object elements from removeArray
                        for (var j = 0; j < removeArray.length; j += 1) {
                            delete queryObj[removeArray[j]];
                        }

                        // Create output array
                        for (var prop in queryObj) {
                            if (queryObj.hasOwnProperty(prop)) {
                                returnArray.push(prop + '=' + queryObj[prop]);
                            }
                        }

                        // Return output as string
                        return returnArray.join('&');
                    }

                    // Return num ranks
                    function returnStartRank(resultsSummaryData, page) {
                        return 1 + resultsSummary.numRanks * (page - 1);
                    }

                    // Sort array
                    function sortResultsArray(a, b) {
                        if (a.val < b.val) {
                            return -1;
                        } else if (a.val > b.val) {
                            return 1;
                        } else {
                            return 0;
                        }
                    }

                    // Set variables
                    var pageCount = Math.ceil(resultsSummary.totalMatching / resultsSummary.numRanks),
                        currentPage = Math.ceil(resultsSummary.currStart / resultsSummary.numRanks),
                        results = [],
                        removeArray = ['start_rank', 'collection'],
                        i = 0,
                        up = 0,
                        down = 0,
                        num = num <= pageCount ? num : pageCount;

                    // Return prev page href
                    if (returnPrevHref) {
                        return removeFromQuery(QueryString, removeArray) + '&start_rank=' + resultsSummary.prevStart;
                    }

                    // Return next page href
                    if (returnNextHref) {
                        return removeFromQuery(QueryString, removeArray) + '&start_rank=' + resultsSummary.nextStart;
                    }

                    // Push current page
                    results.push({ 'url': '', 'val': currentPage });

                    // Create the pagination array of $num elements
                    while (i < num - 1) {
                        up += 1;
                        down -= 1;

                        // Generate next page element
                        if (currentPage + up <= pageCount) {
                            results.push({ 'url': removeFromQuery(QueryString, removeArray) + '&start_rank=' + returnStartRank(resultsSummary, currentPage + up), 'val': currentPage + up });
                            i += 1;
                        }

                        // Generate prev page link
                        if (currentPage + down > 0) {
                            results.push({ 'url': removeFromQuery(QueryString, removeArray) + '&start_rank=' + returnStartRank(resultsSummary, currentPage + down), 'val': currentPage + down });
                            i += 1;
                        }
                    }

                    // Sort the array
                    results.sort(sortResultsArray);

                    // Return array of obejcts containing pagination items
                    return opts.fn(results);
                });
            }

        },

        // 1.3 Initiate
        init: function init() {
            var context = this;

            // Prevent default form submit
            $('.js-expertline__form').on('submit', function () {
                return false;
            });

            // Bind search submit action
            $('.js-expertline__form-submit').on('click', function (e) {
                e.preventDefault();

                context.loader(true);
                context.processQuery($('.js-expertline__form').serialize());
            });

            // Bind pagination links
            $('body').on('click', '.js-expertline__results-pagination-link', function (e) {
                e.preventDefault();

                context.loader(true);
                context.processQuery($(this).attr('href'));
            });

            // Expand the tile
            $('body').on('click', '.js-expertline__results-item-name-link, .js-expertline__results-item-expand', function (e) {
                //eslint-disable-line max-len
                e.preventDefault();
                $(this).parents('.expertline__results-item').addClass('expertline__results-item--expanded');
            });

            // Collapse the tile
            $('body').on('click', '.js-expertline__results-item-collapse', function (e) {
                e.preventDefault();
                $(this).parents('.expertline__results-item').removeClass('expertline__results-item--expanded');
            });

            // Create the loader
            var loaderString = '<div class = "clearfix">&nbsp;</div><div class="spinner view-more"><div class="rect1"></div><div class="rect2"></div><div class="rect3"></div><div class="rect4"></div><div class="rect5"></div></div>'; //eslint-disable-line max-len
            $('.js-expertline__loader').prepend(loaderString);

            // Register Handlebars Helpers 
            this.helpers.registerHandlebarsHelpers();

            // Check query on init
            if (context.manageQuery(null, true)) {
                context.loader(true);
                context.fillTheForm(context.manageQuery(null, true), $('.js-expertline__form'));
                context.processQuery(context.manageQuery(null, true));
            }

            // Handle popState
            context.initOnpopstate();
        },

        // 1.4 Error message
        errorMsg: function errorMsg(status) {
            var context = this;

            if (status === true) {
                // show error msg
                $('.js-expertline__form-no-results').stop(true, true).fadeOut('fast');
                $('.js-expertline__form-no-results').attr('aria-hidden', 'true');

                $('.js-expertline__form-error').stop(true, true).fadeIn('fast', function () {
                    context.helpers.centerOn($('.js-expertline__form-error'));
                });
                $('.js-expertline__form-error').attr('aria-hidden', 'false');
            } else if (!status) {
                // hide all errors
                $('.js-expertline__form-error').stop(true, true).fadeOut('fast');
                $('.js-expertline__form-error').attr('aria-hidden', 'true');
                $('.js-expertline__form-no-results').stop(true, true).fadeOut('fast');
                $('.js-expertline__form-no-results').attr('aria-hidden', 'true');
            } else if (status === 'no-results') {
                // show no results msg
                $('.js-expertline__form-error').stop(true, true).fadeOut('fast');
                $('.js-expertline__form-error').attr('aria-hidden', 'true');

                $('.js-expertline__form-no-results').stop(true, true).fadeIn('fast', function () {
                    context.helpers.centerOn($('.js-expertline__form-no-results'));
                });
                $('.js-expertline__form-no-results').attr('aria-hidden', 'false');
            }
        },

        // 1.5 Loader
        loader: function loader(status) {
            var context = this;

            if (status) {
                $('.js-expertline__loader').attr('aria-live', 'polite');
                $('.js-expertline__loader').stop(true, true).fadeIn('fast', function () {
                    context.helpers.centerOn($('.js-expertline__loader'));
                });
            } else {
                $('.js-expertline__loader').attr('aria-live', 'off');
                $('.js-expertline__loader').stop(true, true).fadeOut('fast');
            }
        },

        // 1.6 Process search query
        processQuery: function processQuery(attr, pushHistory) {
            var context = this;

            // Set default
            if (undefined === pushHistory) {
                pushHistory = true;
            }

            // Hide search results
            $('.js-expertline__results').fadeOut('fast');

            // Hide error
            context.errorMsg(false);

            // Cancel prev call
            if (context.variables.xhr && context.variables.xhr.readyState !== 4) {
                context.variables.xhr.abort();
            }

            // Make the ajax call to FB REST asset
            context.variables.xhr = $.ajax({
                url: context.variables.gatewayURL + '?' + attr,
                dataType: 'json'
            }).success(function (json) {
                context.manageQuery(attr, false, pushHistory);
                context.pageBuild.searchResults(json, context);
            }).error(function (e) {
                context.loader(false);
                if (e.status !== 0) {
                    context.errorMsg(true);
                }
            });
        },

        // 1.7 Build page
        pageBuild: {

            // Search
            searchResults: function searchResults(json, context) {
                var html = '';

                // Hide the loader
                context.loader(false);

                // Check are there results
                if (!json.response.resultPacket) {
                    // resultsSummary = null
                    context.errorMsg('no-results');
                } else if (json.response.resultPacket.hasOwnProperty('resultsSummary')) {
                    // resultsSummary !== null
                    if (json.response.resultPacket.resultsSummary.totalMatching === 0) {
                        // but got no results
                        context.errorMsg('no-results');
                    } else {
                        // has results
                        html = context.helpers.buildHandlebars($('#js-expertline__templates-search-results'), json);
                        $('.js-expertline__results').html(html);
                        context.pageSwitch.searchResults(context);
                    }
                } else {
                    // some other error
                    context.errorMsg(true);
                }
            }

        },

        // 1.8 Switch page
        pageSwitch: {

            // Search
            searchResults: function searchResults(context) {

                // Hide loader
                context.loader(false);

                // Switch from search                
                $('.js-expertline__results').slideDown('fast');
            }

        },

        // 1.9 Manage Query
        manageQuery: function manageQuery(query, get, pushHistory) {

            // Check support 
            if (!history.pushState) {
                return false;
            }

            // Set default
            if (undefined === pushHistory) {
                pushHistory = true;
            }

            // Get hash
            if (undefined !== query && !get && pushHistory) {
                var pathname = window.location.pathname;
                history.pushState(null, 'Search results', pathname + '?' + query);
            }

            // Set hash
            if (get) {
                var queryString = window.location.search.replace('?', '');

                if (queryString === '') {
                    return false;
                } else {
                    return queryString;
                }
            }
        },

        // 1.10 Init onPopState
        initOnpopstate: function initOnpopstate() {
            var context = this;

            if (undefined !== window.onpopstate) {
                window.onpopstate = function () {
                    var queryString = document.location.search.replace('?', '');

                    if (undefined !== queryString && queryString !== '') {
                        context.loader(true);
                        context.processQuery(queryString, false);
                    }
                };
            }
        },

        // 1.11 Prefill the form based on query
        fillTheForm: function fillTheForm(query, form) {
            var queryArray = query.split('&'),
                queryObj = {};

            // Create object from query
            for (var i = 0; i < queryArray.length; i += 1) {
                queryObj[queryArray[i].split('=')[0]] = decodeURIComponent(queryArray[i].split('=')[1].replace(/\+/g, ' '));
            }

            // Set values
            for (var prop in queryObj) {
                if (queryObj.hasOwnProperty(prop)) {
                    var element = form.find('*[name="' + prop + '"]');
                    element.val(queryObj[prop]);
                }
            }
        }

    };

    /*
    * 2. Initiate
    */
    if ($('.js-expertline').length) {
        expertline.init();
    }
})(jQuery);
var featureLinksBox = {
    init: function init() {
        this.setFlex();
    },
    setFlex: function setFlex() {
        var $featureLinks = $('.feature-links');

        for (var i = 0; i < $featureLinks.length; i += 1) {
            var $featureLinksBoxes = $featureLinks.eq(i).find('.feature-links-box');

            for (var j = 0; j < $featureLinksBoxes.length; j += 2) {
                var $newDiv = $('<div class="flex-wrapper"></div>').insertBefore($featureLinksBoxes.eq(j));
                $featureLinksBoxes.eq(j).appendTo($newDiv);

                if (j + 1 < $featureLinksBoxes.length) {
                    // eslint-disable-line max-depth
                    $featureLinksBoxes.eq(j + 1).appendTo($newDiv);
                }
            }
        }
    }
};

(function () {
    featureLinksBox.init();
})(jQuery);

// Handle validation
var formElementsObj = {
    init: function init() {
        this.buildCustomMessages();
    },
    buildCustomMessages: function buildCustomMessages() {

        var validationMessages = $('[data-validation-msg]').toArray().reduce(function (obj, inpt) {
            var $inpt = $(inpt);
            obj[$inpt.attr('name')] = $inpt.attr('data-validation-msg');
            return obj;
        }, {});

        //Init the validation plugin with our custom messages
        this.initValidationPlugin(validationMessages);
    },
    initValidationPlugin: function initValidationPlugin(messagesObj) {
        var getContainerForInput = function getContainerForInput(elem) {
            var $container = $(elem).parents('.sq-form-question');
            return $container;
        };
        var options = {
            errorClass: 'sq-form-error',
            errorPlacement: function errorPlacement(error, element) {
                var $container = $(element).parents('.sq-form-question-answer');
                if ($(element).attr('id') === 'recaptcha_response_field') {
                    error.insertBefore(element);
                } else {
                    $container.prepend(error);
                }
            },

            // fn((element, errorClass, validClass))
            highlight: function highlight(element) {
                getContainerForInput(element).addClass('sq-form-question-error');
            },

            // fn element, errorClass, validClass)
            unhighlight: function unhighlight(element) {
                getContainerForInput(element).removeClass('sq-form-question-error');
            },
            messages: messagesObj
        };

        $('.sq-form').validate(options);
    }
};

/* ========================================================
 * Custom file input styles
 * ========================================================
 *
 * Applies a custom style to file input elements by hiding
 * the native element and injecting a styled façade element
 * above the original file input.
 * ======================================================== */
var customFileInputs = function () {

    return {

        init: function init() {

            var fileInputs, placeholderText, facade;

            // Original file input elements
            fileInputs = $('input[type="file"]');

            // Placeholder text that appears when empty input is initially loaded
            placeholderText = 'Choose file…';

            // Façade overlay element that will have custom styles applied
            facade = '<span title="" class="sq-form-question-facade is-empty">' + placeholderText + '</span>';

            fileInputs.each(function (i, el) {
                var fileInputID = el.id,
                    facadeOverlay;

                // Generate empty façade element with custom styles applied
                facadeOverlay = $(facade).insertAfter(el);

                // Has ID - add aria markup
                if (typeof fileInputID !== 'undefined' && fileInputID) {
                    facadeOverlay.attr('aria-controls', fileInputID);
                }

                // Façade element activates corresponding file input
                facadeOverlay.on('touchstart click', function (ev) {
                    $(ev.currentTarget).prev('input[type="file"]').trigger('click');
                });

                // When value of selected file changes, print the value to the façade element
                $(el).on('change', function (ev) {
                    var fileInput = $(ev.currentTarget),
                        filePath = fileInput.val(),
                        facade = fileInput.next('.sq-form-question-facade');

                    // File path is not empty
                    if (filePath.trim()) {
                        facade.removeClass('is-empty');
                        facade.text(filePath);
                    }
                    // File path is empty
                    else {
                            facade.addClass('is-empty');
                            facade.text(placeholderText);
                        }

                    // Apply title (to display full path and file name as tooltip)
                    facade.attr('title', fileInput.val());

                    // Grab focus to apply appropriate styles
                    fileInput.focus();
                });
            });
        }

    };
}();

(function ($) {
    // Form validation
    formElementsObj.init();

    // Custom file input styling
    customFileInputs.init();

    // Custom select field styling
    $('select:not(.selectric-disabled)').selectric();
    // Fix for accessibility on Selectric
    $('.selectric-input').attr('title', 'Select a value');
})(jQuery);

/*eslint no-console: 0, new-cap: 0*/
var topNavMobileHandlers = {
    classlist: {
        active: 'js-navbar__dropdown--active',
        mobile: 'navbar__dropdown--mobile',
        mobileHidden: 'navbar__dropdown--mobile-hidden',
        slideLeft: 'navbar__dropdown--slide-left',
        slideRight: 'navbar__dropdown--slide-right',
        toggle: 'navbar__toggle',
        toggleCloned: 'navbar__toggle-cloned',
        navbar: 'navbar',
        dropdown: 'navbar__dropdown',
        itemslvl2: 'navbar__list-sub--level2',
        arrow: 'navbar__item-cta',
        arrowExpanded: 'navbar__item-cta--expanded'
    },
    entities: {
        expandableArrow: '<button title="Expand/Collapse Menu" class="navbar__item-cta desktop-hidden"></button>'
    },
    init: function init() {
        var _this = this;
        // Mobile button toggler
        $('.navbar').UberAccordion({
            buttonClass: _this.classlist.toggle
        });
        _this.addExpandArrows(); //Add expandable arrows
        _this.handleClicks(); //Click listeners
        _this.handleMobileSwitch();
        _this.enableKeyboardAccessibility();
    },
    addExpandArrows: function addExpandArrows() {
        var _this = this;

        $('.' + _this.classlist.navbar).find('.navbar__item, .navbar__item-sub').each(function () {
            var $thisNavbarItem = $(this),
                $thisNavbarItemList = $thisNavbarItem.find('.navbar__list-sub'),
                $thisNavbarItemLbl = $thisNavbarItem.children('.navbar__item-lbl, .navbar__item-sub-lbl');

            if ($thisNavbarItemList.length) {
                $thisNavbarItemLbl.find('.' + _this.classlist.arrow).remove();
                $thisNavbarItemLbl.addClass('lbl--expandable').append(_this.entities.expandableArrow);

                if ($thisNavbarItem.hasClass('navbar__item')) {
                    $thisNavbarItem.addClass('navbar__item--w-children');
                } else {
                    $thisNavbarItem.addClass('navbar__item-sub--w-children');
                }
            }
        });
    },
    handleClicks: function handleClicks() {
        var _this = this,
            $toggle = $('.' + _this.classlist.toggle),
            $navbar = $('.' + _this.classlist.navbar),
            $dropDown = $('.' + _this.classlist.dropdown);
        //Expand or Collapse the sub levels
        $navbar.on('click', '.' + _this.classlist.arrow, function (e) {
            e.preventDefault();
            var $listItemParent = $(this).closest('.navbar__item, .navbar__item-sub'),
                $childPanel = $listItemParent.find('.navbar__list-sub').eq(0);

            $childPanel.slideToggle('fast');
            $(this).toggleClass(_this.classlist.arrowExpanded);
        });

        //Handle the Open/Close of the nav
        $toggle.not('.' + _this.classlist.toggleCloned).on('click', function () {
            //Mobile menu is expanded?
            if ($dropDown.hasClass(_this.classlist.active)) {
                //Make it slide left
                $dropDown.removeClass(_this.classlist.slideRight).addClass(_this.classlist.slideLeft);
                //Hide it. Timeout required due to the CSS transition, otherwise it would get skipped
                setTimeout(function () {
                    $dropDown.removeClass(_this.classlist.active).addClass(_this.classlist.mobileHidden);
                    //Remove the cloned toggle 'X' that closes the nav
                    $('.' + _this.classlist.toggleCloned).remove();
                }, 1000);
            } else {
                //Clone the navbar toggle into the expanded nav
                $('.navbar__list').eq(0).find('li').eq(0).append($toggle.clone().addClass(_this.classlist.toggleCloned));

                //Collapse all the sections
                $('.navbar__list-sub').slideUp(1);

                //show the current page
                _this.showCurrentPage();
                //Make the mobile menu displayable
                $dropDown.removeClass(_this.classlist.mobileHidden).addClass(_this.classlist.active).removeClass(_this.classlist.slideLeft);

                //Slide right the mobile menu to be visible
                setTimeout(function () {
                    $dropDown.addClass(_this.classlist.slideRight);
                }, 100);
            }
        });

        //Trigger the click of the real hamburger when the cloned one is clicked
        $navbar.on('click', '.' + _this.classlist.toggleCloned, function () {
            $toggle.not('.' + _this.classlist.toggleCloned).click();
        });
    },
    handleMobileSwitch: function handleMobileSwitch() {
        var minMq = '(min-width: 60em)',
            _this = this,
            $navbarDropdown = $('.' + _this.classlist.dropdown),
            $navbarToggle = $('.' + _this.classlist.toggle);

        window.matchMedia(minMq).addListener(function (mql) {

            if (mql.matches) {
                //Close the mobile nav if the window is being resized with the nav open
                if ($navbarToggle.hasClass('uber-accordion__button-active')) {
                    $navbarToggle.click();
                }
                //Remove the JS hook call that controls the nav mobile
                $navbarDropdown.removeClass(_this.classlist.mobile);
                //Reset the navbar position on desktop
                $navbarDropdown.addClass(_this.classlist.active);

                $('.' + _this.classlist.itemslvl2).slideDown();

                //Close all the expanded sublevels to don't show up in desktop
                $('.navbar__list-sub').not('.' + _this.classlist.itemslvl2).slideUp();
            } else {
                //Load the arrows once again because the navigation is refreshed when reaching mobile
                _this.addExpandArrows();

                //Add a JS hook class to control the nav on mobile
                $navbarDropdown.addClass(_this.classlist.mobile);

                //Remove the class that styles the navbar on desktop
                $navbarDropdown.removeClass(_this.classlist.active);

                setTimeout(function () {
                    $('.' + _this.classlist.toggleCloned).remove();
                }, 1000);
            }
        });

        if (window.matchMedia(minMq).matches) {
            $navbarDropdown.removeClass(_this.classlist.mobile);
        } else {
            $navbarDropdown.addClass(_this.classlist.mobile).addClass(_this.classlist.mobileHidden);
        }
    },
    showCurrentPage: function showCurrentPage() {
        var _this = this;

        $('.navbar__item--current-parent').each(function () {
            $(this).find('.' + _this.classlist.arrow).eq(0).click();
        });
    },
    enableKeyboardAccessibility: function enableKeyboardAccessibility() {
        $('.navbar__item a').on('focus', function () {
            $(this).trigger('mouseenter');
        });
    }

};

(function () {
    topNavMobileHandlers.init();
})(jQuery);

/*global dataLayer */

var vars = {
    mqWide: '(min-width: 60em)',
    viewMoreBtnSelector: '.js-view-more',
    viewMoreDestinationSelector: '.js-view-more-dest',
    masonrySelector: '.js-masonry-enabled',
    historyHTMLSelector: '.js-history-enabled',
    spinnerHTML: '<div class = "clearfix">&nbsp;</div><div class="spinner view-more"><div class="rect1"></div><div class="rect2"></div><div class="rect3"></div><div class="rect4"></div><div class="rect5"></div></div>' //eslint-disable-line max-len
};

// View more function
// including Spinner http://tobiasahlin.com/spinkit/ (3rd one) and imagesloaded + masonry for desktop only
// this also utilises browser History API to retain the markup when user hit 'Back button'
// To initialise, these elements are required
//  - a button with class 'js-view-more' which will have the viewMoreAction execute on click
//  - js-view-more button needs to have 'data-src' attribute set to the HTML source of the additional content
//  - the destination of the additional contents will be decided by:
//      - 'data-dest' on 'js-view-more' button which is a selector, OTHERWISE (if there's no data-dest)
//      - an element with class 'js-view-more-dest'
var viewMoreHandlers = {
    init: function init() {
        var _this = this;
        $(vars.viewMoreBtnSelector).each(function () {
            var $btn = $(this),
                src = $btn.data('src'),
                $dest;

            // get destination location from data-dest attribute, otherwise, just get the div before the button
            $dest = $($btn.data('dest')) || $btn.prev(vars.viewMoreDestinationSelector);

            // if loadmore event hasn't been init yet
            if (!$btn.data('loadmore-init') && src && $dest) {
                $btn.click(function () {
                    _this.viewMoreAction($btn, src, $dest);
                });
                // prevent loadmore event to be added more than once
                $btn.data('loadmore-init', true);
            }
        });
    },

    // replace the button with spinner
    loadSpinner: function loadSpinner($btn) {
        $(vars.spinnerHTML).insertAfter($btn);
        $btn.remove();
    },

    // load more
    // $btn (jQuery object) - 'Load more' button to be replaced by spinner
    // src (string) - URL to load the markup from, usually found in 'data-src' attribute of the button
    // $location (jQuery object) - block to append the new markup to
    viewMoreAction: function viewMoreAction($btn, src, $location) {
        var _this = this;
        $.ajax({
            url: src,
            beforeSend: function beforeSend() {
                _this.loadSpinner($btn);
            }
        }).done(function (data) {

            // extract view more button from the data
            var $temp = $('<div />').html(data),
                $viewMore = $temp.find(vars.viewMoreBtnSelector).remove(),
                $data = $($temp.html());

            // if it's desktop view, append the HTML and init masonry
            // otherwise, just append HTML only
            if (window.matchMedia(vars.mqWide).matches) {
                $location.masonry().append($data).imagesLoaded({}, function () {
                    // Add view more button && init listener
                    $viewMore.insertAfter($location);
                    _this.init();

                    // remove the spinner
                    $location.nextAll('.clearfix, .spinner.view-more').remove();

                    // execute append animation of masonry
                    $location.masonry('appended', $data).on('layoutComplete', function () {
                        // push to history
                        history.pushState($(vars.historyHTMLSelector).html(), 'htmlLoaded');
                    }).masonry('layout');
                });
            } else {
                $location.append($data);
                $viewMore.insertAfter($location);
                _this.init();
                $location.nextAll('.clearfix, .spinner.view-more').remove();
                history.pushState($(vars.historyHTMLSelector).html(), 'htmlLoaded');
            }
        });
    }
};

// init masonry (desktop only), masonry would be destroyed on mobile
// the init function will execute masonry on elements that have class 'js-masonry-enabled'
var masonryHandlers = {
    init: function init(mql) {
        var $masonry = $(vars.masonrySelector);
        if ($masonry) {
            if (mql.matches) {
                $masonry.each(function () {
                    var $this = $(this);
                    $this.imagesLoaded({}, function () {
                        $this.masonry();
                    });
                });
            } else {
                $masonry.each(function () {
                    $(this).masonry().masonry('destroy');
                });
            }
        }
        return true;
    }
};

//GA Data Layer push events helper
var gADataLayerPushEvents = function gADataLayerPushEvents(object) {
    // eslint-disable-line no-unused-vars
    if (typeof object !== 'undefined' && typeof dataLayer !== 'undefined') {
        //console.log('dataLayer push event: ' + object.event); //For Debugging
        dataLayer.push(object);
    }
};

(function ($) {
    // load content of history.state to a history container element
    // a history container element needs to have 'js-history-enabled' class applied
    // init masonry & viewMore after loading
    var $historyElem = $(vars.historyHTMLSelector),
        mqListener = window.matchMedia(vars.mqWide),
        initFunctions = function initFunctions() {
        mqListener.addListener(masonryHandlers.init);
        masonryHandlers.init(mqListener);
        viewMoreHandlers.init();
    };
    if ($historyElem && history.state) {
        $historyElem.html(history.state);
        initFunctions();
    } else {
        initFunctions();
    }
})(jQuery);

function initPopupVideos(els) {
    els.magnificPopup({
        delegate: 'a:not(.edit-btn)',
        type: 'iframe',
        iframe: {
            patterns: {
                youtube_short: { // eslint-disable-line camelcase
                    index: 'youtube.com/',
                    id: function id(src) {
                        // link pattern
                        var mt = src.match(/v=([^&]+)(&(.*))?/);

                        if (mt) {
                            return mt[1] + '?' + mt[3];
                        }

                        // embed pattern
                        mt = src.match(/embed\/([^\?\/]+)(\?(.*))?/);
                        if (mt) {
                            return mt[1] + '?' + mt[3];
                        }
                    },
                    src: '//www.youtube.com/embed/%id%&autoplay=1&rel=0'
                },
                youtube: {
                    index: 'youtu.be/',
                    id: 'youtu.be/',
                    src: '//www.youtube.com/embed/%id%?autoplay=1'
                }
            }
        },
        disableOn: function disableOn() {
            if ($(window).width() < 768) {
                return false;
            }
            return true;
        },
        callbacks: {
            open: function open() {
                $('html').css('margin-right', '0');
            }
        }
    });
}

(function ($) {
    'use strict';

    var $slideshowGallery = $('.gallery-slick-slideshow');

    if ($slideshowGallery.length) {
        $slideshowGallery.slick({
            dots: false,
            arrows: true,
            speed: 400,
            slide: '.gallery-slick-slideshow__slide',
            slidesToScroll: 1,
            slidesToShow: 2,
            prevArrow: '<button type="button" class="slick-prev"><span>Prev</span></button>',
            nextArrow: '<button type="button" class="slick-next"><span>Next</span></button>',
            infinite: false,
            responsive: [{
                breakpoint: 768,
                settings: {
                    adaptiveHeight: true,
                    slidesToShow: 1,
                    slidesToScroll: 1
                }
            }]
        });
    }

    $('.popup__gallery').magnificPopup({
        delegate: 'a',
        type: 'image',
        closeMarkup: '<button title="%title%" type="button" class="mfp-close" aria-label="close">&times;</button>',
        gallery: {
            enabled: true
        },
        image: {
            titleSrc: 'title'
        },
        callbacks: {
            open: function open() {
                $('html').css('margin-right', '0');
            }
        }
    });

    initPopupVideos($('.popup__video'));
})(jQuery);

var $lhsNav = $('.lhs-nav');

var lhsNavObj = {
    init: function init() {
        var thisObj = this;
        thisObj.addExpandArrows();
        thisObj.setEventHandlers();
        thisObj.autoExpandCurrent();
    },
    addExpandArrows: function addExpandArrows() {
        var toggleButtonSource = '<button type="button" title="Expand/Collapse" class="lhs-nav-list__item-cta"></button>';
        $lhsNav.find('.js-site-section-nav-item').each(function (i, el) {
            var navItem = $(el),
                navLink = navItem.children('.js-site-section-nav-link');
            if (navItem.children('.lhs-nav-list').length) {
                navLink.find('.lhs-nav-list__item-cta').remove();
                navLink.append(toggleButtonSource);
            }
        });
    },
    setEventHandlers: function setEventHandlers() {
        var thisObj = this;
        $lhsNav.on('click', '.lhs-nav-list__item-cta', thisObj.handleListItemExpand);
    },
    handleListItemExpand: function handleListItemExpand(event) {
        var toggleButton = $(event.currentTarget),
            childLists = toggleButton.parents('.js-site-section-nav-item').eq(0).children('.lhs-nav-list');
        event.preventDefault();
        childLists.each(function (i, el) {
            var expandedState = $(el).attr('aria-expanded'),
                newState = 'true';
            if (typeof expandedState !== 'undefined' && expandedState === 'true') {
                newState = 'false';
            }
            $(el).slideToggle('fast').attr('aria-expanded', newState);
        });
        toggleButton.toggleClass('lhs-nav-list__item-cta--expanded');
    },
    autoExpandCurrent: function autoExpandCurrent() {
        var $arrowsToExpand = $lhsNav.find('.lhs-nav-list__item-link--active .lhs-nav-list__item-cta, .lhs-nav-list__item-link--current .lhs-nav-list__item-cta'); /** looking for the
                                                                                                                                                                   active, since the active state is always the parent of a current state. Unless we're talking about the level 3
                                                                                                                                                                   being the current one (the level 2 is the heading of the nav and doesn't have the class active)
                                                                                                                                                                   **/

        if ($arrowsToExpand.length) {
            //The current is at the level 4 or 5. Lets expand the parents.
            $arrowsToExpand.trigger('click');
        } else {
            //The current is at the level 3. Lets look for it and expand it.
            $lhsNav.find('.lhs-nav-list__item--current').addClass('lhs-nav-list__item--active').find('.lhs-nav-list__item-cta').eq(0).trigger('click');
        }
    }
};

(function () {
    lhsNavObj.init();
})(jQuery);

/* LinkBandit: hijack link appearance and behaviour to flag external links */

(function ($) {

    var linkSelector = '.utility-navigation-list a, ' + '.content-wrapper > a, ' + '.content-wrapper > p a, ' + '.content-inner__main a:not(.area-blocks__link):not(.study-info-extra__link)' + ':not(.box-featured__thumb-link):not(.box-featured__video-thumb-link):not(.box-featured__heading-link):not(.section-cards .panels)',
        internalLocationsField = $('meta[name="site\\.internal\\.domains"]');
    /* Compare target links against user-defined domains in metadata field */
    if (internalLocationsField.length) {
        LinkBandit.init(linkSelector, internalLocationsField.attr('content').split('; '), 'link--external', $); // eslint-disable-line no-undef, max-len
    }
})(jQuery);

function afterSelectbox(thisObj) {
    var getEntryMetadata = $(thisObj).data('get-entry-metadata') + '/_nocache?id=' + $(thisObj).find(':selected').data('entry-requirements-source');

    $.get(getEntryMetadata, function (dataBlob) {
        $(thisObj).parents('.dropdown-container-wrapper').find('.section6__loader').html(dataBlob);
    });
}

$('.dropdown-select').each(function () {
    $(this).selectric().on('change', function () {
        afterSelectbox($(this));
    });
});

(function ($) {
    'use strict';
})(jQuery);
$('.typeahead').each(function () {
    var stocks = new Bloodhound({
        datumTokenizer: Bloodhound.tokenizers.obj.whitespace('assetname'),
        queryTokenizer: Bloodhound.tokenizers.whitespace,
        //prefetch: 'http://mon-dev.clients.squiz.net/monash/search-panels/search-panel-json-w-assetid/_nocache'
        prefetch: $(this).data('json-asset-listing') + '/_nocache?id=' + $(this).data('search-panel-source')
    });

    $(this).typeahead(null, {
        name: 'stocks',
        displayKey: 'assetname',
        highlight: 'true',
        minLength: 0,
        source: stocks
    }).on({
        'typeahead:autocomplete': function typeaheadAutocomplete(event, data) {
            afterTypeahead(data, $(this));
        },
        'typeahead:select': function typeaheadSelect(event, data) {
            afterTypeahead(data, $(this));
        }
    });
});

function afterTypeahead(data, thisObj) {
    // $.get('http://mon-dev.clients.squiz.net/monash/search-panels/get-asset-meta-entry-requirements/_nocache?id=' + data.assetid, function( data ) {

    $.get($(thisObj).data('entry-requirements-source') + '/_nocache?id=' + data.assetid, function (dataBlob) {
        $(thisObj).parents('.monash-search-panel').find('.section6__loader').html(dataBlob);
    });
}

/* global YT */
(function ($) {
    if (document.querySelector('iframe[data-youkuid-related], iframe[data-youkuid]')) {

        //API YouTube
        var loadYouTubeAPI = function loadYouTubeAPI() {
            var tag = document.createElement('script');
            var firstScriptTag = document.getElementsByTagName('script')[0];
            tag.src = 'https://www.youtube.com/iframe_api';
            firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
        };

        //Fallback to Youku, replaces video with Youku alternative
        var fallbackToYouku = function fallbackToYouku(els) {
            Array.from(els).forEach(function (el) {
                var fallbackHref = el.getAttribute('data-fallback-href');
                if (fallbackHref && fallbackHref !== '') {
                    // <a> links that open popups, just replace the href
                    el.setAttribute('data-original-href', el.href);
                    el.href = fallbackHref;
                } else {
                    // Video container template prints out all to start with, so remove the unnecessary ones
                    var tempRelatedYoukuID = el.getAttribute('data-youkuid-related');
                    var tempRelatedYouku = document.querySelector('[data-youkuid=\'' + tempRelatedYoukuID + '\']');
                    if (el.getAttribute('data-youkuid-related') !== '') {
                        config.removeContainer(el);
                        config.createContainer(tempRelatedYouku);
                        config.show(tempRelatedYouku);
                    } else {
                        config.removeContainer(el);
                        console.log('YouTube iframe id="' + el.getAttribute('id') + ' Please add Youku id.');
                    }
                }
            });
        };
        //Load the favicon and run the callback


        var checkIfBlocked = function checkIfBlocked(icoURL, blocked, notBlocked) {
            //Waiting until the DOMContentReady event has fired will improve performance when YouTube isn't available
            $(document).ready(function () {
                var icon = new Image();
                icon.addEventListener('load', notBlocked);
                icon.addEventListener('error', blocked);
                icon.src = icoURL;
            });
        };

        //Init YouTube Players


        var onYouTubeIframeAPIReady = function onYouTubeIframeAPIReady() {
            Array.from(yts).forEach(function (el) {
                ytPlayers.push(new YT.Player(el.getAttribute('id'), {
                    events: {
                        'onError': onPlayerError
                    }
                }));
            });
        };

        //YouTube Error event
        var onPlayerError = function onPlayerError(event) {
            var errorStatus = event.data,
                errorTarget = event.target;
            var thisPlayerYT = document.querySelectorAll('#' + errorTarget.a.id);
            if (thisPlayerYT !== null) {
                if (errorStatus === 2) {
                    fallbackToYouku(thisPlayerYT);
                    console.log('YouTube iframe id="' + errorTarget.a.id + '". The request contains an invalid parameter value. For example, this error occurs if you specify a video ID that does not have 11 characters, or if the video ID contains invalid characters, such as exclamation points or asterisks. Error Status = ' + errorStatus);
                } else if (errorStatus === 5) {
                    fallbackToYouku(thisPlayerYT);
                    console.log('YouTube iframe id="' + errorTarget.a.id + '". The requested content cannot be played in an HTML5 player or another error related to the HTML5 player has occurred. Error Status = ' + errorStatus);
                } else if (errorStatus === 100) {
                    fallbackToYouku(thisPlayerYT);
                    console.log('YouTube iframe id="' + errorTarget.a.id + '". The video requested was not found. This error occurs when a video has been removed (for any reason) or has been marked as private. Error Status = ' + errorStatus);
                } else if (errorStatus === 101) {
                    fallbackToYouku(thisPlayerYT);
                    console.log('YouTube iframe id="' + errorTarget.a.id + '". The owner of the requested video does not allow it to be played in embedded players. Error Status = ' + errorStatus);
                }
            }
        };

        var config = {
            settings: {
                youtube: 'iframe[src*="youtube.com"], a[href*="youtube.com"][data-fallback-href]',
                vimeo: 'iframe[src*="vimeo.com"], a[href*="vimeo.com"][data-fallback-href]',
                youku: 'iframe[src*="youku.com"], embed[src*="youku.com"]',
                ytID: 'yt',
                viID: 'vi',
                yoID: 'yo',
                containerVideo: 'video-container'
            },
            //Add uniq ID to iframe
            addID: function addID(source, attr) {
                if (source.length > 0) {
                    Array.from(source).forEach(function (el, i) {
                        var count = i + 1;
                        el.setAttribute('id', attr + '-' + count);
                    });
                }
            },
            //Create div container outside iframe
            createContainer: function createContainer(source) {
                $(document).ready(function () {
                    var _this = config;
                    $(source).filter(function () {
                        // Make sure video container does not already exist
                        return !$(this).parents('.' + _this.settings.containerVideo).length;
                    }).wrap('<div class="' + _this.settings.containerVideo + '"></div>');
                    var aTagsWrapped = $(".box-featured .video-container a");
                    var iframeTagsWrapped = $(".box-featured .video-container iframe");
                    if (aTagsWrapped.parent().is($(".box-featured .video-container")) || iframeTagsWrapped.parent().is($(".box-featured .video-container"))) {
                        aTagsWrapped.unwrap();
                        iframeTagsWrapped.unwrap();
                    }
                });
            },
            //Remove video container with iframe tag
            removeContainer: function removeContainer(source) {
                source.parentElement.removeChild(source);
            },
            //Hide player (iframe)
            hide: function hide(element) {
                if (element.length > 0) {
                    Array.from(element).forEach(function (el) {
                        el.style.display = 'none';
                    });
                }
            },
            //Show player (iframe)
            show: function show(element) {
                element.style.display = '';
            },
            //Add ?enablejsapi=1 to the and of YouTube URL
            appendYTjsAPI: function appendYTjsAPI(element) {
                if (element.length > 0) {
                    Array.from(element).forEach(function (el) {
                        var tempAtrr = el.getAttribute('src');
                        tempAtrr = tempAtrr + '?enablejsapi=1';
                        el.setAttribute('src', tempAtrr);
                    });
                }
            },
            //Check if Youku ID exists required add in matrix to youtube in iframe data-youkuid
            isYoukuID: function isYoukuID(element) {
                if (element.length > 0) {
                    Array.from(element).forEach(function (el) {
                        return el.getAttribute('data-youkuid');
                    });
                }
            },
            //check if exist the same data-youkuid and data-youkuid-related
            check: function check(element, data) {
                var temp = void 0;
                Array.from(element).forEach(function (el) {
                    if (el.getAttribute(data) === temp) {
                        var tempatrr = el.getAttribute(data);
                        el.setAttribute(data, tempatrr + '1');
                    }
                    temp = el.getAttribute(data);
                });
            }
        };

        var yts = document.querySelectorAll('' + config.settings.youtube);
        var vis = document.querySelectorAll('' + config.settings.vimeo);
        var yos = document.querySelectorAll('' + config.settings.youku);
        var ytImage = new Image();
        var ytPlayers = [];;;;

        //Add ID to YouTube, Vimeo, Youku links
        config.addID(yts, config.settings.ytID);
        config.addID(vis, config.settings.viID);
        config.addID(yos, config.settings.yoID);
        config.check(yts, 'data-youkuid-related');
        config.check(vis, 'data-youkuid-related');
        config.check(yos, 'data-youkuid');
        //Hide Youku player
        config.hide(yos);

        //If YouTube videos exist
        if (yts.length > 0) {
            var blocked = function blocked() {
                fallbackToYouku(yts);
            };
            var notBlocked = function notBlocked() {
                //Add api scripts to head
                loadYouTubeAPI();
                //Create container outside youtube iframe tag
                config.createContainer(yts);
                //Add YouTube jsapi to the end of scr link
                config.appendYTjsAPI(yts);
            };
            checkIfBlocked('https://youtube.com/favicon.ico', blocked, notBlocked);
        }
        //If Vimeo videos exist
        if (vis.length > 0) {
            var blocked = function blocked() {
                fallbackToYouku(vis);
            };
            var notBlocked = function notBlocked() {
                //Create container outside Vimeo iframe tag
                config.createContainer(vis);
            };
            checkIfBlocked('https://vimeo.com/favicon.ico', blocked, notBlocked);
        }
    }
})(jQuery);
(function () {
    'use strict';

    var $list = $('.js-search-box--browse__list'),
        $label = $('.js-search-box--browse__label'),
        $browseButton = $('.js-search-box__submit--browse'),
        $searchButton = $('.js-search-box__submit--search'),
        classOpened = 'search-box--browse__list--opened',
        classWrapper = 'search-box--browse__wrapper';

    // Open the list of categories on label click
    $label.on('click', function (e) {
        e.preventDefault();
        $list.toggleClass(classOpened);
    });

    // Close the list of categories if clicked anywhere outside the form
    $(document).on('click', function (e) {
        var $clicked = $(e.target);
        if (!$clicked.parents().hasClass(classWrapper)) {
            $list.removeClass(classOpened);
        }
    });

    function handleCategorySelection() {
        var $checkboxes = $list.find('input[type="checkbox"]'),

        // a list of <span> populated with checked inputs' labels
        checkedList = $.map($checkboxes.filter(':checked'), function (element) {
            var text = $(element).next('label').text();
            return '<span title="' + text + '">' + text + '</span>';
        });

        // remove all currently displayed categories
        if ($label.length > 0) {
            $label.find('span').remove();
        };

        // if everything or nothing is selected, print 'All categories'
        if (checkedList.length === 0 || checkedList.length === $checkboxes.length) {
            $label.append('<span title="All categories">All categories</span>');
        } else {
            // otherwise, list selected categories
            $label.append(checkedList.join('<span>, </span>'));
        }
    }

    if ($list.length > 0) {
        handleCategorySelection();
        $list.find('input').on('change', function () {
            handleCategorySelection();
        });
    }

    // Browse Category
    // On click, everything from the current input from Search panel will be removed/reset
    // Then querystring will be added to the current URL to filter listing results
    // Requirements: input need to have data-facetparamname set to the facet's param Name
    // e.g.
    // <input type="checkbox" class="sq-form-field" id="information+technology"
    //     data-facetparamname="f.News+Categories%7C2" value="information+technology" />
    $browseButton.on('click', function (e) {
        e.stopPropagation();e.preventDefault();
        var $checkboxes = $list.find('input[type="checkbox"]'),
            checkedList = $.map($checkboxes.filter(':checked'), function (element) {
            var $element = $(element),
                text = $element.data('facetparamname') + '=' + $element.val();
            return text;
        });
        // console.log($checkboxes, checkedList);
        if ($checkboxes.length === checkedList.length) {
            location.href = location.href.split('?')[0];
        } else {
            var query = checkedList.join('&');
            location.href = location.href.split('?')[0] + '?' + query;
        }
    });

    /* eslint-disable max-statements */
    // Search News
    // On click, 'Search' button will reset all the Categories values
    // Then submit current search form, including 'query', 'year' and 'month'
    // Date range will also be calculated based on 'year' and 'month' values
    // and put into hidden fields 'meta_d3' & 'meta_d4'
    $searchButton.on('click', function (e) {
        e.stopPropagation();e.preventDefault();
        var $this = $(this),
            $dateMin = $('#search-news-date-min'),
            $dateMax = $('#search-news-date-max'),
            months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
            metaMonth = $('#search-news-month').val(),
            metaYear = $('#search-news-year').val(),
            $form = $this.parents('.search-box--news__form');

        if (metaMonth.length === 0) {
            // if only 'year' is set, date range is for the whole year
            if (metaYear.length !== 0) {
                $dateMin.val('1Jan' + metaYear);$dateMax.val('31Dec' + metaYear);
            } else {
                // if nothing set, remove date range
                $dateMin.val('');$dateMax.val('');
            }
        } else {
            var monthInt = parseInt(metaMonth, 10),
                lastDay;

            // if both 'month' and 'year' is set, date range is the whole month
            if (metaYear.length !== 0) {
                lastDay = new Date(parseInt(metaYear, 10), monthInt + 1, 0).getDate();
                $dateMin.val('1' + months[monthInt] + metaYear);
                $dateMax.val('' + lastDay + months[monthInt] + metaYear);
            } else {
                // if only 'month' is set, use current year
                var year = new Date().getFullYear();
                lastDay = new Date(year, monthInt + 1, 0).getDate();
                $dateMin.val('1' + months[monthInt] + year);
                $dateMax.val('' + lastDay + months[monthInt] + year);
            }
        }

        $form.submit();
    });
    /* eslint-enable max-statements */

    // Populate select inputs have attribute data-val set
    var $selectsWithVal = $('select[data-val!=""]');
    $selectsWithVal.each(function () {
        var $this = $(this),
            $options = $this.find('option'),
            selectedValue = '' + $this.data('val');

        for (var i = 0; i < $options.length; i += 1) {
            if ('' + $($options[i]).attr('value') === selectedValue) {
                $this.prop('selectedIndex', i).selectric('refresh');
                return;
            }
        }
    });

    //  Browse Category Control
    var $checkboxes = $list.find('input[type="checkbox"]');
    // Clear all
    var $clearAll = $list.find('.js-clear-all');
    $clearAll.on('click', function () {
        $checkboxes.prop('checked', false);
        handleCategorySelection();
    });

    // Select all
    var $selectAll = $list.find('.js-select-all');
    $selectAll.on('click', function () {
        $checkboxes.prop('checked', true);
        handleCategorySelection();
    });
})(jQuery);

var searchGlobal = {
    selector: '#page-wrapper',
    classInput: '.search-global__banner .tt-input',
    addClass: 'overlay',
    searchInput: $('#main-query'),
    dropdownButton: '.dropdown-toggle',

    init: function init() {
        var self = this;

        this.autofocus();
        self.bind();
    },

    bind: function bind() {
        var self = this;

        // add class for overlay
        $(self.classInput).on('focus', function () {

            $(self.selector).addClass(self.addClass);
        });

        // delete class for overlay
        $(self.classInput).on('blur', function () {

            $(self.selector).removeClass(self.addClass);
        });

        // set width button dropdown from width dropdown menu
        // $(self.dropdownButton).each(function() {
        //     $(this).innerWidth($(this).next().innerWidth());
        // });
    },

    autofocus: function autofocus() {
        if (this.searchInput.val() == '') {
            this.searchInput[0].focus();
        }
    }

};

$(document).ready(function () {
    'use strict';

    searchGlobal.init();
});
var $headerSearchWrapper = $('.header-row__search'),
    $headerSearchToggle = $headerSearchWrapper.find('.header-row__search-icon');

var headerSearch = {
    init: function init() {
        var thisObj = this;
        thisObj.setListeners();
        thisObj.handleSubmission();
        thisObj.handleMobileDesktopSwitch(); //Switch the DOM position of the search for mobile/destop
    },
    setListeners: function setListeners() {
        var headerSearchObj = this;
        $headerSearchToggle.on('click', headerSearchObj.handleSearchFormExpand);
        $headerSearchWrapper.find('input').bind('focus blur', headerSearchObj.disableAutoZoom); //Disable auto zoom in iOS
    },
    handleSearchFormExpand: function handleSearchFormExpand(e) {
        var $slidingPanel = $('.header-row__search-form'),
            $searchInput = $slidingPanel.find('#quick-search__query, #query');
        e.preventDefault();

        //Handle opening/closing the search form
        $slidingPanel.toggleClass('header-row__search-form--expanded');
        $headerSearchWrapper.toggleClass('header-row__search--active');

        //Clear input and focus
        setTimeout(function () {
            $searchInput.val('');
            $searchInput.focus();
        }, 500);

        // if ($slidingPanel.hasClass('header-row__search-form--expanded')) {
        //     $slidingPanel.slideDown('fast');
        // } else {
        //     $slidingPanel.slideUp('fast');
        // }
    },
    handleMobileDesktopSwitch: function handleMobileDesktopSwitch() {
        var minMq = '(min-width: 60em)',
            $searchForm = $('.header-row__search-form');

        window.matchMedia(minMq).addListener(function (mql) {
            if (mql.matches) {
                $searchForm.appendTo($('.header-row__search'));
            } else {
                $searchForm.insertAfter($('.header-row__search').parent());
            }
        });

        if (!window.matchMedia(minMq).matches) {
            $searchForm.insertAfter($('.header-row__search').parent());
        }
    },
    disableAutoZoom: function disableAutoZoom(event) {
        var $viewportMeta = $('meta[name="viewport"]');
        $viewportMeta.attr('content', 'width=device-width,initial-scale=1,maximum-scale=' + (event.type === 'blur' ? 10 : 1));
    },
    handleSubmission: function handleSubmission() {
        //TBC
    }
};

(function () {
    if ($headerSearchWrapper.find('form').length !== 0) {
        headerSearch.init();
    }
})(jQuery);

$('.skip-links__link').keydown(function (e) {
    var $obj = $(this);

    if (e.which === 13) {
        e.preventDefault();

        // wait until skip link hides itself to prevent offset
        setTimeout(function () {
            $('html, body').animate({
                scrollTop: $($obj.attr('href')).offset().top
            }, 0);
        }, 10);

        $($obj.attr('href')).find('a:visible:first').focus();
    }
});

// handle skip-links aria-hidden attribute
$('.skip-links__link').focusin(function () {
    $(this).parents('.skip-links').attr('aria-hidden', 'false');
}).focusout(function () {
    $(this).parents('.skip-links').attr('aria-hidden', 'true');
});
// (function($) {

//     var mqWide = '(min-width: 60em)',
//         mqListener = window.matchMedia(mqWide);

//     /* Apply masonry at ≥ wide screen size. */
//     function handleSocialFeedListing(mql) {
//         var $listing = $('.social-media-feed-listing');
//         if (mql.matches) {
//             // Init masonry (after images loaded)
//             $listing.imagesLoaded({}, function() {
//                 $listing.masonry({
//                     itemSelector: '.social-media-feed-box__wrapper'
//                 });
//             });
//         }
//         else {
//             // Destroy masonry
//             $listing.masonry().masonry('destroy');
//         }
//     }

//     mqListener.addListener(handleSocialFeedListing);
//     handleSocialFeedListing(mqListener);

// }(jQuery));

// Enable click to expand the sharethis menu to bypass keyboard trap
var addthis_config = addthis_config || {};
addthis_config.ui_click = true;

(function () {

    // Make sharethis menu go away on desktop
    $('.social-media-share').on('mouseout', '.addthis_button_compact', function () {
        $('#at_hover').mouseover().mouseout();
    });
})(jQuery);

/*global $, jQuery, CourseSlider, initAccordions, initTooltips*/

var tabEl = {
    init: function init() {
        this.mobileCtrl();
    },
    mobileCtrl: function mobileCtrl() {
        var mobileFlag = false,
            minMq = '(min-width: 60em)',
            tabObj = this;
        window.matchMedia(minMq).addListener(function (mql) {
            if (!mql.matches) {
                if (!mobileFlag) {
                    tabObj.initAccordionMutator();
                    mobileFlag = true;
                }
            }
        });
        if (!window.matchMedia(minMq).matches) {
            if (!mobileFlag) {
                tabObj.initAccordionMutator();
                mobileFlag = true;
            }
        }
    },

    addMobileIds: function addMobileIds(html) {
        var $obj = $(html),
            $modified = $('<div />'),
            mobileAppendString = '-mobile',
            thisObj = this;

        $modified.append($obj);

        thisObj.mobileAttrReplacer($modified.find('*[id]'), 'id', mobileAppendString);
        thisObj.mobileAttrReplacer($modified.find('*[headers]'), 'headers', mobileAppendString);
        thisObj.mobileAttrReplacer($modified.find('[data-rel-to-mobile]'), 'rel', mobileAppendString);

        return $modified.html();
    },
    mobileAttrReplacer: function mobileAttrReplacer(elements, attrToReplace, stringToAppend) {
        elements.each(function () {
            var _this = $(this);
            _this.attr(attrToReplace, _this.attr(attrToReplace) + stringToAppend);
        });
    },
    initAccordionMutator: function initAccordionMutator() {
        var arrayEls = [],
            sliders = [],
            context = this;

        //Mutate Standard Tabs to accordions
        $('.tabs').not('.no-mobile-accordion').not('.tabs--nested').each(function () {
            context.createAccordion($(this), arrayEls, sliders, context);
        });

        //Mutate Nested Tabs to accordions
        $('.tabs.tabs--nested').each(function () {
            context.createAccordion($(this), arrayEls, sliders, context);
        });

        // Change id's for course slider and fire the slider for mobile
        $('#bottom-tabs > .accordion.desktop-hidden section').each(function (i, item) {
            // eslint-disable-line no-unused-vars
            if ($(this).find('> .accContent').find('.slider-tab-content').length) {
                var tabID = $(this).find('> .accContent').find('.slider-tab-content').attr('id'),
                    loadedID = $(this).find('> .accContent').find('.slider-loaded-content').attr('id');

                $(this).find('> .accContent').find('.slider-tab-content').attr('id', tabID);
                $(this).find('> .accContent').find('.slider-loaded-content').attr('id', loadedID);

                sliders[i] = new CourseSlider({
                    parent: $('#' + tabID),
                    target: $('#' + loadedID),
                    trigger: $('#' + tabID + ' a.slideRightBtn')
                });

                sliders[i].init();
            }
        });
    },
    createAccordion: function createAccordion($tabsgroup, arrayEls, sliders, context) {
        arrayEls = [];
        sliders = [];

        $tabsgroup.find('.tabs__tab-list').eq(0).find('.tabs__link').each(function () {
            var tabHeader,
                tabContent,
                tabItemObj,
                regEx = new RegExp('=', 'g');

            tabHeader = $(this).html();
            tabContent = $($(this).attr('href')).html();

            tabItemObj = {
                'header': tabHeader,
                'content': tabContent,
                'id': 'accordion-' + window.btoa($(this).attr('href')).replace(regEx, '') //Avoid having duplicated ids
            };
            //Fill an array with all the tab headers and contents
            arrayEls.push(tabItemObj);
        });

        //Build the accordion structure
        var accordionContents = '';

        accordionContents += '<div multiselectable="true" role="tablist" class="accordion desktop-hidden">';

        $.each(arrayEls, function (key, tabElement) {
            accordionContents += '<section class="panel">' + '<h3 class="accTitle" id="' + tabElement.id + '" aria-controls="' + tabElement.id + '" role="tab" aria-expanded="false"><a href="#accordion__target-' + tabElement.id + '">' + tabElement.header + '</a></h3>' + '<div id="accordion__target-' + tabElement.id + '"class="accContent" aria-labelledby="' + tabElement.id + '" aria-hidden="true" role="tabpanel" style="display: none;">' + context.addMobileIds(tabElement.content) + '</div>' + '</section>';
        });
        accordionContents += '</div>';

        $tabsgroup.after($(accordionContents));

        try {
            //Init tooltips
            initTooltips(); //Only used for study.Monash. Function provided in 'at-a-glance' module in there.
        } catch (err) {
            console.log('init tooltips');
        }

        //Init accordions
        initAccordions($tabsgroup.next('.accordion'));
    }

};

(function ($) {
    // eslint-disable-line no-unused-vars
    tabEl.init();
})(jQuery);

function detectIE() {
    var ua = window.navigator.userAgent;

    var msie = ua.indexOf('MSIE ');
    if (msie > 0) {
        // IE 10 or older => return version number
        return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);
    }

    var trident = ua.indexOf('Trident/');
    if (trident > 0) {
        // IE 11 => return version number
        var rv = ua.indexOf('rv:');
        return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);
    }

    var edge = ua.indexOf('Edge/');
    if (edge > 0) {
        // Edge (IE 12+) => return version number
        return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);
    }

    // other browser
    return false;
}

var objectFit = function objectFit(selector, settings) {
    if ($(selector).length && !Modernizr.objectfit) {

        var $this = $(selector),
            objs = [],
            // eslint-disable-line no-unused-vars
        settings = {
            display: undefined === settings.display ? 'block' : settings.display,
            position: undefined === settings.position ? 'center center' : settings.position,
            adjustHeight: undefined === settings.adjustHeight ? false : settings.adjustHeight
        };

        // Init
        objs = $this.toArray().map(function (el, i) {
            // eslint-disable-line no-unused-vars

            // adjust height if required
            if (settings.adjustHeight) {
                $(selector).hide();
                $(el).parent().css('height', '');
                $(el).parent().css('height', $(el).height());
                $(selector).show();
            }

            // set the bg image
            $(el).css('opacity', 0);
            $(el).parent().css({
                'background-image': 'url(' + $(el).attr('src') + ')',
                'background-size': 'cover',
                'background-position': settings.position,
                'display': settings.display
            });
        });
    }
};

var cardsOrganiser = {
    settings: {
        desktopBP: '60em',
        selectors: '.timeline-card__background--50, .timeline-card__background--75, .js-timeline-card__video'
    },
    arrange: function arrange() {
        cardsOrganiser.initBreakpoints();
    },
    initBreakpoints: function initBreakpoints() {
        var _this = cardsOrganiser;
        var bp = '(min-width: ' + _this.settings.desktopBP + ')';
        var isSafari = navigator.vendor && navigator.vendor.indexOf('Apple') > -1 && navigator.userAgent && !navigator.userAgent.match('CriOS');
        var count = 0; // Used as workaround of a Safari bug firing the code below twice when resizing from mobile to desktop

        window.matchMedia(bp).addListener(function (mql) {
            // Validate safari user agent. Safari has a bug that needs to be handled as a snowflake
            if (isSafari) {
                count += 1;
                if (count > 1) {
                    // Safari bug. Event being fired for the 2nd time. Let's not execute anything. Resetting the counter.
                    count = 0;
                    if (!mql.matches) {
                        _this.moveEls(!mql.matches);
                    }
                } else {
                    // 1st time the event was fired. Let's execute the function
                    _this.moveEls(!mql.matches);
                }
            } else {
                _this.moveEls(!mql.matches);
            }
        });

        if (!window.matchMedia(bp).matches) {
            _this.moveEls(true);
        }
    },
    moveEls: function moveEls(mobileFlag) {
        var _this = cardsOrganiser;
        var arrEls = Array.from(document.querySelectorAll(_this.settings.selectors));
        var mappedOrigsDests = _this.mapOrigsNDests(arrEls, mobileFlag);

        arrEls.forEach(function (el) {
            el.parentNode.classList.toggle('timeline-card--arranged');
        });
        mappedOrigsDests.forEach(function (el) {
            el.forEach(function (obj) {
                // Replace the target's HTML with the source's HTML
                obj.dest.innerHTML = obj.origin.innerHTML;
                // Clear the source's HTML
                obj.origin.innerHTML = '';
                // Copy the classes applied on the source to the target, ensuring cell specific styles to still be applied
                obj.dest.setAttribute('class', obj.destClasses);
                // Remove inline styles so it doesn't override the classes
                obj.dest.setAttribute('style', '');
                // Set a transparent background colour in the source so the background is visible
                if (!(obj.videoFlag && !mobileFlag)) {
                    $(obj.origin).css('background-color', 'transparent');
                }

                if (obj.bckgndEl) {
                    // toggle a modifier class to the banner
                    if (obj.bckgndEl.classList.contains(obj.classToApply)) {
                        obj.bckgndEl.classList.remove(obj.classToApply);
                    } else {
                        obj.bckgndEl.classList.add(obj.classToApply);
                    }
                }
            });
        });
    },
    mapOrigsNDests: function mapOrigsNDests(arrEls, mobileFlag) {
        var _this = cardsOrganiser;
        // Iterate over the banners array
        return arrEls.map(function (el) {
            var wrapper = el.classList.contains('js-timeline-card__video') ? el : el.nextElementSibling;
            var videoFlag = el.classList.contains('js-timeline-card__video') ? true : false;
            // [X, Y, Z]: X = source; Y = Target; Z = Element from where to copy classes to apply on the target
            // Array with coordinates for the 1st element to be affected.
            var arrArgs1 = mobileFlag ? videoFlag ? [21, 12, 21] : [21, 22, 21] : videoFlag ? [21, 11, 21] : [21, 11, 21];
            // Array with coordinates for the 2nd element to be affected.
            var arrArgs2 = mobileFlag ? videoFlag ? [11, 21, 11] : [11, 21, 11] : videoFlag ? [12, 21, 12] : [22, 21, 22];
            // Return an array of objects, each containing a mapping between source and target so we can move the cells around
            return _this.getMappedObsArr(arrArgs1, arrArgs2, wrapper, el, videoFlag);
        });
    },
    getMappedObsArr: function getMappedObsArr(arrArgs1, arrArgs2, wrapper, bckgndEl, videoFlag) {
        return [{
            origin: wrapper.querySelector('[data-col="' + arrArgs1[0] + '"]'),
            dest: wrapper.querySelector('[data-col="' + arrArgs1[1] + '"]'),
            destClasses: wrapper.querySelector('[data-col="' + arrArgs1[2] + '"]').getAttribute('class'),
            bckgndEl: bckgndEl,
            classToApply: 'timeline-card__background--arranged',
            videoFlag: videoFlag
        }, {
            origin: wrapper.querySelector('[data-col="' + arrArgs2[0] + '"]'),
            dest: wrapper.querySelector('[data-col="' + arrArgs2[1] + '"]'),
            destClasses: wrapper.querySelector('[data-col="' + arrArgs2[2] + '"]').getAttribute('class'),
            videoFlag: videoFlag
        }];
    }
};

/* global yearsArray, yearPreloaded, startYear, endYear, excludedYear  */
var yearsLoaded = [];

// Handle preloading cards
var yearPreloaded = {
    nextYear: 0,
    goingForward: true,
    xhr: new XMLHttpRequest(),
    years: [],
    status: 0, // 0 - initial, 1 - loading, 2 - loaded
    yearsHTML: '',
    init: function init() {
        var _this = this;
        _this.xhr.onreadystatechange = function () {
            if (_this.xhr.readyState === 4) {
                if (_this.xhr.status === 200) {
                    _this.yearsHTML = $.parseHTML(_this.xhr.responseText);
                    _this.status = 2;

                    // Got to next year 
                    _this.takeFromPreloaded(_this.nextYear);
                }
            }
        };
    },
    checkPreloadingStatus: function checkPreloadingStatus(currentSlide, nextSlide) {
        var _this = this,
            currentSlide = currentSlide,
            nextSlide = nextSlide,
            currentYear = parseInt($('.timeline__slider-item[data-slick-index="' + currentSlide + '"]').attr('data-year'), 10),
            nextYear = parseInt($('.timeline__slider-item[data-slick-index="' + nextSlide + '"]').attr('data-year'), 10),
            yearSwap = currentYear !== nextYear ? true : false,
            isOnFirstYear = nextYear === yearsLoaded[0] ? true : false,
            isOnLastYear = nextYear === yearsLoaded[yearsLoaded.length - 1] ? true : false;

        // Years have changed
        // 1a) if next year is smaller then the past one (you are going left) preload current year and -4 years
        // 1b) if next year is greated then the past one (you are going right) preload current year and +4 years
        // 2) and then jump to "next" year 
        if (yearSwap) {

            // Jump to this year after loading slides
            yearPreloaded.nextYear = nextYear;

            // Going left
            if (isOnFirstYear) {
                yearPreloaded.goingForward = false;
                _this.preloadCards(currentYear - 4, currentYear);
            }

            // Going right
            if (isOnLastYear) {
                yearPreloaded.goingForward = true;
                _this.preloadCards(currentYear, currentYear + 4);
            }
        }
    },
    preloadCards: function preloadCards(startYear, endYear) {
        if (this.status !== 1) {
            if (this.years[0] !== startYear || this.years[1] !== endYear) {

                // Show loader
                isLoading(true);

                var url = document.querySelector('.js-timeline-landing-ajax').getAttribute('data-ajax-url'),

                //getParams = '?queries_year_query_fromvalue[d]=1&queries_year_query_fromvalue[m]=1&queries_year_query_fromvalue[y]='+startYear+'&queries_year_query_toshow=ymd&queries_year_query_tovalue[d]=31&queries_year_query_tovalue[m]=12&queries_year_query_tovalue[y]='+endYear;
                getParams = '?years=' + buildYearsRange(startYear, endYear);

                this.status = 1;
                this.years = [startYear, endYear];

                this.xhr.open('GET', url + getParams);
                this.xhr.send();
            }
        }
    },
    takeFromPreloaded: function takeFromPreloaded(year) {
        var _this = this,
            targetClass = document.querySelector('.js-timeline-landing-ajax').getAttribute('data-ajax-content-target'),
            targetEl = document.querySelector(targetClass);

        // Unslick
        $('.js-timeline-slick').slick('unslick');

        // Remove all slides
        $(targetEl).html('');

        // Push new slides
        $(targetEl).append(yearPreloaded.yearsHTML);

        // Reinit
        slickReinit();

        // Get years that are loaded
        getYearsLoaded();

        // Go to year
        goToYear(year);

        // Set colours
        slick.setColours();

        // Reload addthis
        reloadAddthis();

        // If going backwards start from last slide
        if (!this.goingForward) {
            setTimeout(function () {
                var lastSlideFromYear = parseInt($('.timeline__slider-item:not(.slick-cloned)[data-year="' + _this.nextYear + '"]:last').attr('data-slick-index'), 10);
                $('.timeline__slider').slick('slickGoTo', lastSlideFromYear);

                // Hide loader
                isLoading(false);
            }, 2000);
        } else {

            // Hide loader
            isLoading(false);
        }
    }
};

function reloadAddthis() {
    addthis.toolbox('.social-media-share');
};

function yearArrayBuilder() {
    for (var y = startYear; y <= endYear; y += 1) {
        if (excludedYear.indexOf(y) === -1) {
            yearsArray.push(y);
        }
    }
};

function initTimelineLanding(initYear, initSlide) {
    // Init timeline slider
    slick.init($('.js-timeline-slick'));

    // Init cards desktop-mobile arranging mechanism
    cardsOrganiser.arrange();

    // Got to slide based on hash
    if (initYear) {

        // Show loader
        isLoading(true);

        goToYear(initYear);
    }

    // Go to specific slide based on hash
    if (initSlide) {
        setTimeout(function () {

            var initSlideIndex = parseInt($('.timeline__slider-item:not(.slick-cloned)[data-id="' + initSlide + '"]').attr('data-slick-index'), 10);
            $('.timeline__slider').slick('slickGoTo', initSlideIndex);

            // Hide loader
            isLoading(false);
        }, 2000);
    } else {

        // Hide loader
        isLoading(false);
    }

    // Workaround for IE issues with object-fit css property
    if (detectIE()) {
        objectFit('.timeline-card--video:not(.timeline-card--video-full) .box-listing-element__video-thumb-image', {
            'display': 'flex',
            'adjustHeight': true
        });
    }
}

function getCards(url, target, addThisMarkup, initYear, initSlide) {
    'use strict';

    var xhr = new XMLHttpRequest();
    xhr.onreadystatechange = function () {
        if (xhr.readyState === 4) {
            if (xhr.status === 200) {
                var parsedHTML = $.parseHTML(xhr.responseText);
                $(target).append(parsedHTML);
                initTimelineLanding(initYear, initSlide);
                // Check if addThis script is supposed to be added
                if (addThisMarkup) {
                    $('body').append(addThisMarkup);
                }

                // Set current years
                getYearsLoaded();
            }
        }
    };
    xhr.open('GET', url);
    xhr.send();
}

function getYearsLoaded() {
    yearsLoaded = [];
    $('.timeline__slider-item').each(function (i, item) {
        var year = parseInt($(item).attr('data-year'), 10);
        if (yearsLoaded.indexOf(year) === -1) {
            yearsLoaded.push(year);
        }
    });
    yearsLoaded.sort();
};

function goToYear(year) {
    var goTo = $('.timeline__slider .timeline__slider-item[data-year="' + year + '"]:not(.slick-cloned)').attr('data-slick-index'),
        goTo = parseInt(goTo, 10);
    $('.timeline__slider').slick('slickGoTo', goTo);
};

function isLoading(status) {
    if (status) {
        $('.timeline').addClass('timeline--loading');
    } else {
        $('.timeline').removeClass('timeline--loading');
    }
}

function regetCards(startYear, endYear, slideToYear) {
    'use strict';

    // Show loader

    isLoading(true);

    var xhr = new XMLHttpRequest(),
        targetClass = document.querySelector('.js-timeline-landing-ajax').getAttribute('data-ajax-content-target'),
        targetEl = document.querySelector(targetClass),
        url = document.querySelector('.js-timeline-landing-ajax').getAttribute('data-ajax-url'),

    //getParams = '?queries_year_query_fromvalue[d]=1&queries_year_query_fromvalue[m]=1&queries_year_query_fromvalue[y]='+startYear+'&queries_year_query_toshow=ymd&queries_year_query_tovalue[d]=31&queries_year_query_tovalue[m]=12&queries_year_query_tovalue[y]='+endYear;
    getParams = '?years=' + buildYearsRange(startYear, endYear);

    xhr.onreadystatechange = function () {
        if (xhr.readyState === 4) {
            if (xhr.status === 200) {

                // Unslick
                $('.js-timeline-slick').slick('unslick');

                // Remove all slides
                $(targetEl).html('');

                // Append new slides
                var parsedHTML = $.parseHTML(xhr.responseText);
                $(targetEl).append(parsedHTML);

                // Reinit
                slickReinit();

                // Get years that are loaded
                getYearsLoaded();

                // Go to year
                goToYear(slideToYear);

                // Set colours
                slick.setColours();

                // Reload addthis
                reloadAddthis();

                // Hide loader
                isLoading(false);
            }
        }
    };

    xhr.open('GET', url + getParams);
    xhr.send();
}

// Handle hash for card navigation
var hashHandler = {

    set: function set(year, id) {
        var baseUrl = window.location.href.split('#')[0];
        window.location.replace(baseUrl + '#' + year + '-' + id);
    },

    get: function get() {
        if (window.location.hash.length !== 0) {
            var startSlide = window.location.hash.replace('#', '').split('-'),
                startSlideDate = {
                'year': yearsArray.indexOf(parseInt(startSlide[0], 10)) !== -1 ? parseInt(startSlide[0], 10) : false,
                'id': !isNaN(parseInt(startSlide[1], 10)) ? parseInt(startSlide[1], 10) : false
            };

            return startSlideDate;
        } else {
            return false;
        }
    }

};

// Build years list range as csv
var buildYearsRange = function buildYearsRange(fromYear, toYear) {
    var fromYear = parseInt(fromYear, 10),
        toYear = parseInt(toYear, 10),
        returnArray = [];

    for (var i = fromYear; i <= toYear; i += 1) {
        returnArray.push(i);
    }

    returnArray = returnArray.join(',');

    return returnArray;
};

// Init
(function () {
    if (document.querySelector('.timeline')) {
        // Init additional plugin required for a proper swiping of the cards on mobile
        yearArrayBuilder();
        initExtraPlugins();
        yearPreloaded.init();

        var ajaxWrapper = document.querySelector('.js-timeline-landing-ajax');

        // Check hash on page load
        var startDate = hashHandler.get(),
            startYear = 1957,
            endYear = 1959,
            initYear = false,
            initSlide = false;

        if (startDate !== false) {
            if (yearsArray.indexOf(startDate.year) !== -1) {
                startYear = startDate.year - 1;
                endYear = startDate.year + 1;
                initYear = startDate.year;
                initSlide = startDate.id;
            }
        }

        if (ajaxWrapper) {
            var targetClass = ajaxWrapper.getAttribute('data-ajax-content-target');
            var targetEl = document.querySelector(targetClass);
            var url = ajaxWrapper.getAttribute('data-ajax-url');
            //const initialParams = '?queries_year_query_fromvalue[d]=1&queries_year_query_fromvalue[m]=1&queries_year_query_fromvalue[y]='+startYear+'&queries_year_query_toshow=ymd&queries_year_query_tovalue[d]=31&queries_year_query_tovalue[m]=12&queries_year_query_tovalue[y]='+endYear;
            var initialParams = '?years=' + buildYearsRange(startYear, endYear);
            getCards(url + initialParams, targetEl, ajaxWrapper.getAttribute('data-addthis-markup'), initYear, initSlide);
        } else {
            window.onload = function () {
                initTimelineLanding();
            };
        }

        document.getElementById('page-wrapper').classList.add('page-timeline-landing');
    }
})();

(function () {
    var landingSearchBoxDest = document.querySelector('.js-timeline-landing-search-ajax');

    if (landingSearchBoxDest) {
        var searchBoxContentURL = landingSearchBoxDest.getAttribute('data-ajax-landing-search-url');

        $.ajax({
            url: searchBoxContentURL,
            type: 'get',
            data: {
                searchboxonly: true,
                query: '!null'
            },
            success: function success(response) {
                var searchBrowseForm = $(response).find('#search-news');
                // Inject the search/browse into the DOM
                $(landingSearchBoxDest).append(searchBrowseForm.html());
                // Init the browse categories builder mechanism
                initTimelineBrowseCategories();
            }
        });
    }
})();

function initTimelineBrowseCategories() {
    var $listCats = $('.js-timeline-search-box--browse__list'),
        $labelCats = $('.js-timeline-search-box--browse__label'),
        $browseBtn = $('.js-timeline-search-box__submit--browse'),
        classOpen = 'search-box--browse__list--opened',
        classWrap = 'search-box--browse__wrapper';

    // Open the list of categories on label click
    $labelCats.on('click', function (e) {
        e.preventDefault();
        $listCats.toggleClass(classOpen);
    });

    // Close the list of categories if clicked anywhere outside the form
    $(document).on('click', function (e) {
        var $clicked = $(e.target);
        if (!$clicked.parents().hasClass(classWrap)) {
            $listCats.removeClass(classOpen);
        }
    });

    function handleCategSelection() {
        var $checkboxes = $listCats.find('input[type="checkbox"]'),

        // a list of <span> populated with checked inputs' labels
        checkedList = $.map($checkboxes.filter(':checked'), function (element) {
            var text = $(element).next('label').text();
            return '<span title="' + text + '">' + text + '</span>';
        });

        // remove all currently displayed categories
        if ($labelCats.length > 0) {
            $labelCats.find('span').remove();
        };

        // if everything or nothing is selected, print 'All categories'
        if (checkedList.length === 0 || checkedList.length === $checkboxes.length) {
            $labelCats.append('<span title="All categories">All categories</span>');
        } else {
            // otherwise, list selected categories
            $labelCats.append(checkedList.join('<span>, </span>'));
        }
    }

    if ($listCats.length > 0) {
        handleCategSelection();
        $listCats.find('input').on('change', function () {
            handleCategSelection();
        });
    }

    // Browse Category
    // On click, everything from the current input from Search panel will be removed/reset
    // Then querystring will be added to the current URL to filter listing results
    // Requirements: input need to have data-facetparamname set to the facet's param Name
    // e.g.
    // <input type="checkbox" class="sq-form-field" id="information+technology"
    //     data-facetparamname="f.News+Categories%7C2" value="information+technology" />
    $browseBtn.on('click', function (e) {
        e.stopPropagation();e.preventDefault();
        var $checkboxes = $listCats.find('input[type="checkbox"]'),
            checkedList = $.map($checkboxes.filter(':checked'), function (element) {
            var $element = $(element),
                text = $element.data('facetparamname') + '=' + $element.val();
            return text;
        });

        var query = checkedList.join('&');

        var redirectTo = $browseBtn.attr('data-redirect-to');
        // If this attribute exists, it means that the browse/search fields were loaded through ajax
        // in the timeline landing page. So we don't want to just append the QS parameters to the current URL.
        // We want to redirect to the search page and append the QS parameters.
        if (redirectTo) {
            location.href = redirectTo + '?' + query;
        } else {
            if ($checkboxes.length === checkedList.length) {
                location.href = location.href.split('?')[0];
            } else {
                location.href = location.href.split('?')[0] + '?' + query;
            }
        }
    });

    // Populate select inputs have attribute data-val set
    var $selectsWithVal = $('select[data-val!=""]');
    $selectsWithVal.each(function () {
        var $this = $(this),
            $options = $this.find('option'),
            selectedValue = '' + $this.data('val');

        for (var i = 0; i < $options.length; i += 1) {
            if ('' + $($options[i]).attr('value') === selectedValue) {
                $this.prop('selectedIndex', i).selectric('refresh');
                return;
            }
        }
    });

    //  Browse Category Control
    var $checkboxes = $listCats.find('input[type="checkbox"]');
    // Clear all
    var $clearAll = $listCats.find('.js-clear-all');
    $clearAll.on('click', function () {
        $checkboxes.prop('checked', false);
        handleCategSelection();
    });

    // Select all
    var $selectAll = $listCats.find('.js-select-all');
    $selectAll.on('click', function () {
        $checkboxes.prop('checked', true);
        handleCategSelection();
    });
}

(function () {
    'use strict';

    initTimelineBrowseCategories();
})(jQuery);

var runPolyfillsFlag = false;
function runPolyfills() {
    (function e(t, n, r) {
        function s(o, u) {
            if (!n[o]) {
                if (!t[o]) {
                    var a = typeof require == "function" && require;if (!u && a) return a(o, !0);if (i) return i(o, !0);var f = new Error("Cannot find module '" + o + "'");throw f.code = "MODULE_NOT_FOUND", f;
                }var l = n[o] = { exports: {} };t[o][0].call(l.exports, function (e) {
                    var n = t[o][1][e];return s(n ? n : e);
                }, l, l.exports, e, t, n, r);
            }return n[o].exports;
        }var i = typeof require == "function" && require;for (var o = 0; o < r.length; o++) {
            s(r[o]);
        }return s;
    })({ 1: [function (require, module, exports) {
            (function (global) {
                "use strict";
                var _toolsProtectJs2 = require("./tools/protect.js");var _toolsProtectJs3 = _interopRequireDefault(_toolsProtectJs2);require("core-js/shim");require("regenerator/runtime");_toolsProtectJs3["default"](module);function _interopRequireDefault(obj) {
                    return obj && obj.__esModule ? obj : { "default": obj };
                }if (global._babelPolyfill) {
                    throw new Error("only one instance of babel/polyfill is allowed");
                }global._babelPolyfill = true;
            }).call(this, typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {});
        }, { "./tools/protect.js": 2, "core-js/shim": 93, "regenerator/runtime": 94 }], 2: [function (require, module, exports) {
            (function (__dirname) {
                "use strict";
                exports.__esModule = true;function _interopRequireDefault(obj) {
                    return obj && obj.__esModule ? obj : { "default": obj };
                }var _path = require("path");var _path2 = _interopRequireDefault(_path);var root = _path2["default"].resolve(__dirname, "../../../");exports["default"] = function (module) {
                    if (module.parent && module.parent.filename.indexOf(root) !== 0) {
                        throw new Error("Don't hotlink internal Babel files.");
                    }
                };module.exports = exports["default"];
            }).call(this, "/lib/babel/tools");
        }, { path: 3 }], 3: [function (require, module, exports) {
            (function (process) {
                function normalizeArray(parts, allowAboveRoot) {
                    var up = 0;for (var i = parts.length - 1; i >= 0; i--) {
                        var last = parts[i];if (last === ".") {
                            parts.splice(i, 1);
                        } else if (last === "..") {
                            parts.splice(i, 1);up++;
                        } else if (up) {
                            parts.splice(i, 1);up--;
                        }
                    }if (allowAboveRoot) {
                        for (; up--; up) {
                            parts.unshift("..");
                        }
                    }return parts;
                }var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;var splitPath = function splitPath(filename) {
                    return splitPathRe.exec(filename).slice(1);
                };exports.resolve = function () {
                    var resolvedPath = "",
                        resolvedAbsolute = false;for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
                        var path = i >= 0 ? arguments[i] : process.cwd();if (typeof path !== "string") {
                            throw new TypeError("Arguments to path.resolve must be strings");
                        } else if (!path) {
                            continue;
                        }resolvedPath = path + "/" + resolvedPath;resolvedAbsolute = path.charAt(0) === "/";
                    }resolvedPath = normalizeArray(filter(resolvedPath.split("/"), function (p) {
                        return !!p;
                    }), !resolvedAbsolute).join("/");return (resolvedAbsolute ? "/" : "") + resolvedPath || ".";
                };exports.normalize = function (path) {
                    var isAbsolute = exports.isAbsolute(path),
                        trailingSlash = substr(path, -1) === "/";path = normalizeArray(filter(path.split("/"), function (p) {
                        return !!p;
                    }), !isAbsolute).join("/");if (!path && !isAbsolute) {
                        path = ".";
                    }if (path && trailingSlash) {
                        path += "/";
                    }return (isAbsolute ? "/" : "") + path;
                };exports.isAbsolute = function (path) {
                    return path.charAt(0) === "/";
                };exports.join = function () {
                    var paths = Array.prototype.slice.call(arguments, 0);return exports.normalize(filter(paths, function (p, index) {
                        if (typeof p !== "string") {
                            throw new TypeError("Arguments to path.join must be strings");
                        }return p;
                    }).join("/"));
                };exports.relative = function (from, to) {
                    from = exports.resolve(from).substr(1);to = exports.resolve(to).substr(1);function trim(arr) {
                        var start = 0;for (; start < arr.length; start++) {
                            if (arr[start] !== "") break;
                        }var end = arr.length - 1;for (; end >= 0; end--) {
                            if (arr[end] !== "") break;
                        }if (start > end) return [];return arr.slice(start, end - start + 1);
                    }var fromParts = trim(from.split("/"));var toParts = trim(to.split("/"));var length = Math.min(fromParts.length, toParts.length);var samePartsLength = length;for (var i = 0; i < length; i++) {
                        if (fromParts[i] !== toParts[i]) {
                            samePartsLength = i;break;
                        }
                    }var outputParts = [];for (var i = samePartsLength; i < fromParts.length; i++) {
                        outputParts.push("..");
                    }outputParts = outputParts.concat(toParts.slice(samePartsLength));return outputParts.join("/");
                };exports.sep = "/";exports.delimiter = ":";exports.dirname = function (path) {
                    var result = splitPath(path),
                        root = result[0],
                        dir = result[1];if (!root && !dir) {
                        return ".";
                    }if (dir) {
                        dir = dir.substr(0, dir.length - 1);
                    }return root + dir;
                };exports.basename = function (path, ext) {
                    var f = splitPath(path)[2];if (ext && f.substr(-1 * ext.length) === ext) {
                        f = f.substr(0, f.length - ext.length);
                    }return f;
                };exports.extname = function (path) {
                    return splitPath(path)[3];
                };function filter(xs, f) {
                    if (xs.filter) return xs.filter(f);var res = [];for (var i = 0; i < xs.length; i++) {
                        if (f(xs[i], i, xs)) res.push(xs[i]);
                    }return res;
                }var substr = "ab".substr(-1) === "b" ? function (str, start, len) {
                    return str.substr(start, len);
                } : function (str, start, len) {
                    if (start < 0) start = str.length + start;return str.substr(start, len);
                };
            }).call(this, require("_process"));
        }, { _process: 4 }], 4: [function (require, module, exports) {
            var process = module.exports = {};var queue = [];var draining = false;function drainQueue() {
                if (draining) {
                    return;
                }draining = true;var currentQueue;var len = queue.length;while (len) {
                    currentQueue = queue;queue = [];var i = -1;while (++i < len) {
                        currentQueue[i]();
                    }len = queue.length;
                }draining = false;
            }process.nextTick = function (fun) {
                queue.push(fun);if (!draining) {
                    setTimeout(drainQueue, 0);
                }
            };process.title = "browser";process.browser = true;process.env = {};process.argv = [];process.version = "";process.versions = {};function noop() {}process.on = noop;process.addListener = noop;process.once = noop;process.off = noop;process.removeListener = noop;process.removeAllListeners = noop;process.emit = noop;process.binding = function (name) {
                throw new Error("process.binding is not supported");
            };process.cwd = function () {
                return "/";
            };process.chdir = function (dir) {
                throw new Error("process.chdir is not supported");
            };process.umask = function () {
                return 0;
            };
        }, {}], 5: [function (require, module, exports) {
            var $ = require("./$");module.exports = function (IS_INCLUDES) {
                return function ($this, el, fromIndex) {
                    var O = $.toObject($this),
                        length = $.toLength(O.length),
                        index = $.toIndex(fromIndex, length),
                        value;if (IS_INCLUDES && el != el) while (length > index) {
                        value = O[index++];if (value != value) return true;
                    } else for (; length > index; index++) {
                        if (IS_INCLUDES || index in O) {
                            if (O[index] === el) return IS_INCLUDES || index;
                        }
                    }return !IS_INCLUDES && -1;
                };
            };
        }, { "./$": 26 }], 6: [function (require, module, exports) {
            var $ = require("./$"),
                ctx = require("./$.ctx");module.exports = function (TYPE) {
                var IS_MAP = TYPE == 1,
                    IS_FILTER = TYPE == 2,
                    IS_SOME = TYPE == 3,
                    IS_EVERY = TYPE == 4,
                    IS_FIND_INDEX = TYPE == 6,
                    NO_HOLES = TYPE == 5 || IS_FIND_INDEX;return function ($this, callbackfn, that) {
                    var O = Object($.assertDefined($this)),
                        self = $.ES5Object(O),
                        f = ctx(callbackfn, that, 3),
                        length = $.toLength(self.length),
                        index = 0,
                        result = IS_MAP ? Array(length) : IS_FILTER ? [] : undefined,
                        val,
                        res;for (; length > index; index++) {
                        if (NO_HOLES || index in self) {
                            val = self[index];res = f(val, index, O);if (TYPE) {
                                if (IS_MAP) result[index] = res;else if (res) switch (TYPE) {case 3:
                                        return true;case 5:
                                        return val;case 6:
                                        return index;case 2:
                                        result.push(val);} else if (IS_EVERY) return false;
                            }
                        }
                    }return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
                };
            };
        }, { "./$": 26, "./$.ctx": 14 }], 7: [function (require, module, exports) {
            var $ = require("./$");function assert(condition, msg1, msg2) {
                if (!condition) throw TypeError(msg2 ? msg1 + msg2 : msg1);
            }assert.def = $.assertDefined;assert.fn = function (it) {
                if (!$.isFunction(it)) throw TypeError(it + " is not a function!");return it;
            };assert.obj = function (it) {
                if (!$.isObject(it)) throw TypeError(it + " is not an object!");return it;
            };assert.inst = function (it, Constructor, name) {
                if (!(it instanceof Constructor)) throw TypeError(name + ": use the 'new' operator!");return it;
            };module.exports = assert;
        }, { "./$": 26 }], 8: [function (require, module, exports) {
            var $ = require("./$"),
                enumKeys = require("./$.enum-keys");module.exports = Object.assign || function assign(target, source) {
                var T = Object($.assertDefined(target)),
                    l = arguments.length,
                    i = 1;while (l > i) {
                    var S = $.ES5Object(arguments[i++]),
                        keys = enumKeys(S),
                        length = keys.length,
                        j = 0,
                        key;while (length > j) {
                        T[key = keys[j++]] = S[key];
                    }
                }return T;
            };
        }, { "./$": 26, "./$.enum-keys": 17 }], 9: [function (require, module, exports) {
            var $ = require("./$"),
                TAG = require("./$.wks")("toStringTag"),
                toString = {}.toString;function cof(it) {
                return toString.call(it).slice(8, -1);
            }cof.classof = function (it) {
                var O, T;return it == undefined ? it === undefined ? "Undefined" : "Null" : typeof (T = (O = Object(it))[TAG]) == "string" ? T : cof(O);
            };cof.set = function (it, tag, stat) {
                if (it && !$.has(it = stat ? it : it.prototype, TAG)) $.hide(it, TAG, tag);
            };module.exports = cof;
        }, { "./$": 26, "./$.wks": 44 }], 10: [function (require, module, exports) {
            "use strict";
            var $ = require("./$"),
                ctx = require("./$.ctx"),
                safe = require("./$.uid").safe,
                assert = require("./$.assert"),
                forOf = require("./$.for-of"),
                step = require("./$.iter").step,
                $has = $.has,
                set = $.set,
                isObject = $.isObject,
                hide = $.hide,
                isExtensible = Object.isExtensible || isObject,
                ID = safe("id"),
                O1 = safe("O1"),
                LAST = safe("last"),
                FIRST = safe("first"),
                ITER = safe("iter"),
                SIZE = $.DESC ? safe("size") : "size",
                id = 0;function fastKey(it, create) {
                if (!isObject(it)) return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) == "symbol" ? it : (typeof it == "string" ? "S" : "P") + it;if (!$has(it, ID)) {
                    if (!isExtensible(it)) return "F";if (!create) return "E";hide(it, ID, ++id);
                }return "O" + it[ID];
            }function getEntry(that, key) {
                var index = fastKey(key),
                    entry;if (index !== "F") return that[O1][index];for (entry = that[FIRST]; entry; entry = entry.n) {
                    if (entry.k == key) return entry;
                }
            }module.exports = { getConstructor: function getConstructor(wrapper, NAME, IS_MAP, ADDER) {
                    var C = wrapper(function (that, iterable) {
                        assert.inst(that, C, NAME);set(that, O1, $.create(null));set(that, SIZE, 0);set(that, LAST, undefined);set(that, FIRST, undefined);if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
                    });require("./$.mix")(C.prototype, { clear: function clear() {
                            for (var that = this, data = that[O1], entry = that[FIRST]; entry; entry = entry.n) {
                                entry.r = true;if (entry.p) entry.p = entry.p.n = undefined;delete data[entry.i];
                            }that[FIRST] = that[LAST] = undefined;that[SIZE] = 0;
                        }, "delete": function _delete(key) {
                            var that = this,
                                entry = getEntry(that, key);if (entry) {
                                var next = entry.n,
                                    prev = entry.p;delete that[O1][entry.i];entry.r = true;if (prev) prev.n = next;if (next) next.p = prev;if (that[FIRST] == entry) that[FIRST] = next;if (that[LAST] == entry) that[LAST] = prev;that[SIZE]--;
                            }return !!entry;
                        }, forEach: function forEach(callbackfn) {
                            var f = ctx(callbackfn, arguments[1], 3),
                                entry;while (entry = entry ? entry.n : this[FIRST]) {
                                f(entry.v, entry.k, this);while (entry && entry.r) {
                                    entry = entry.p;
                                }
                            }
                        }, has: function has(key) {
                            return !!getEntry(this, key);
                        } });if ($.DESC) $.setDesc(C.prototype, "size", { get: function get() {
                            return assert.def(this[SIZE]);
                        } });return C;
                }, def: function def(that, key, value) {
                    var entry = getEntry(that, key),
                        prev,
                        index;if (entry) {
                        entry.v = value;
                    } else {
                        that[LAST] = entry = { i: index = fastKey(key, true), k: key, v: value, p: prev = that[LAST], n: undefined, r: false };if (!that[FIRST]) that[FIRST] = entry;if (prev) prev.n = entry;that[SIZE]++;if (index !== "F") that[O1][index] = entry;
                    }return that;
                }, getEntry: getEntry, setIter: function setIter(C, NAME, IS_MAP) {
                    require("./$.iter-define")(C, NAME, function (iterated, kind) {
                        set(this, ITER, { o: iterated, k: kind });
                    }, function () {
                        var iter = this[ITER],
                            kind = iter.k,
                            entry = iter.l;while (entry && entry.r) {
                            entry = entry.p;
                        }if (!iter.o || !(iter.l = entry = entry ? entry.n : iter.o[FIRST])) {
                            iter.o = undefined;return step(1);
                        }if (kind == "keys") return step(0, entry.k);if (kind == "values") return step(0, entry.v);return step(0, [entry.k, entry.v]);
                    }, IS_MAP ? "entries" : "values", !IS_MAP, true);
                } };
        }, { "./$": 26, "./$.assert": 7, "./$.ctx": 14, "./$.for-of": 18, "./$.iter": 25, "./$.iter-define": 23, "./$.mix": 28, "./$.uid": 42 }], 11: [function (require, module, exports) {
            var $def = require("./$.def"),
                forOf = require("./$.for-of");module.exports = function (NAME) {
                $def($def.P, NAME, { toJSON: function toJSON() {
                        var arr = [];forOf(this, false, arr.push, arr);return arr;
                    } });
            };
        }, { "./$.def": 15, "./$.for-of": 18 }], 12: [function (require, module, exports) {
            "use strict";
            var $ = require("./$"),
                safe = require("./$.uid").safe,
                assert = require("./$.assert"),
                forOf = require("./$.for-of"),
                $has = $.has,
                isObject = $.isObject,
                hide = $.hide,
                isExtensible = Object.isExtensible || isObject,
                id = 0,
                ID = safe("id"),
                WEAK = safe("weak"),
                LEAK = safe("leak"),
                method = require("./$.array-methods"),
                find = method(5),
                findIndex = method(6);function findFrozen(store, key) {
                return find(store.array, function (it) {
                    return it[0] === key;
                });
            }function leakStore(that) {
                return that[LEAK] || hide(that, LEAK, { array: [], get: function get(key) {
                        var entry = findFrozen(this, key);if (entry) return entry[1];
                    }, has: function has(key) {
                        return !!findFrozen(this, key);
                    }, set: function set(key, value) {
                        var entry = findFrozen(this, key);if (entry) entry[1] = value;else this.array.push([key, value]);
                    }, "delete": function _delete(key) {
                        var index = findIndex(this.array, function (it) {
                            return it[0] === key;
                        });if (~index) this.array.splice(index, 1);return !!~index;
                    } })[LEAK];
            }module.exports = { getConstructor: function getConstructor(wrapper, NAME, IS_MAP, ADDER) {
                    var C = wrapper(function (that, iterable) {
                        $.set(assert.inst(that, C, NAME), ID, id++);if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
                    });require("./$.mix")(C.prototype, { "delete": function _delete(key) {
                            if (!isObject(key)) return false;if (!isExtensible(key)) return leakStore(this)["delete"](key);return $has(key, WEAK) && $has(key[WEAK], this[ID]) && delete key[WEAK][this[ID]];
                        }, has: function has(key) {
                            if (!isObject(key)) return false;if (!isExtensible(key)) return leakStore(this).has(key);return $has(key, WEAK) && $has(key[WEAK], this[ID]);
                        } });return C;
                }, def: function def(that, key, value) {
                    if (!isExtensible(assert.obj(key))) {
                        leakStore(that).set(key, value);
                    } else {
                        $has(key, WEAK) || hide(key, WEAK, {});key[WEAK][that[ID]] = value;
                    }return that;
                }, leakStore: leakStore, WEAK: WEAK, ID: ID };
        }, { "./$": 26, "./$.array-methods": 6, "./$.assert": 7, "./$.for-of": 18, "./$.mix": 28, "./$.uid": 42 }], 13: [function (require, module, exports) {
            "use strict";
            var $ = require("./$"),
                $def = require("./$.def"),
                BUGGY = require("./$.iter").BUGGY,
                forOf = require("./$.for-of"),
                species = require("./$.species"),
                assertInstance = require("./$.assert").inst;module.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {
                var Base = $.g[NAME],
                    C = Base,
                    ADDER = IS_MAP ? "set" : "add",
                    proto = C && C.prototype,
                    O = {};function fixMethod(KEY) {
                    var fn = proto[KEY];require("./$.redef")(proto, KEY, KEY == "delete" ? function (a) {
                        return fn.call(this, a === 0 ? 0 : a);
                    } : KEY == "has" ? function has(a) {
                        return fn.call(this, a === 0 ? 0 : a);
                    } : KEY == "get" ? function get(a) {
                        return fn.call(this, a === 0 ? 0 : a);
                    } : KEY == "add" ? function add(a) {
                        fn.call(this, a === 0 ? 0 : a);return this;
                    } : function set(a, b) {
                        fn.call(this, a === 0 ? 0 : a, b);return this;
                    });
                }if (!$.isFunction(C) || !(IS_WEAK || !BUGGY && proto.forEach && proto.entries)) {
                    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);require("./$.mix")(C.prototype, methods);
                } else {
                    var inst = new C(),
                        chain = inst[ADDER](IS_WEAK ? {} : -0, 1),
                        buggyZero;if (!require("./$.iter-detect")(function (iter) {
                        new C(iter);
                    })) {
                        C = wrapper(function (target, iterable) {
                            assertInstance(target, C, NAME);var that = new Base();if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);return that;
                        });C.prototype = proto;proto.constructor = C;
                    }IS_WEAK || inst.forEach(function (val, key) {
                        buggyZero = 1 / key === -Infinity;
                    });if (buggyZero) {
                        fixMethod("delete");fixMethod("has");IS_MAP && fixMethod("get");
                    }if (buggyZero || chain !== inst) fixMethod(ADDER);
                }require("./$.cof").set(C, NAME);O[NAME] = C;$def($def.G + $def.W + $def.F * (C != Base), O);species(C);species($.core[NAME]);if (!IS_WEAK) common.setIter(C, NAME, IS_MAP);return C;
            };
        }, { "./$": 26, "./$.assert": 7, "./$.cof": 9, "./$.def": 15, "./$.for-of": 18, "./$.iter": 25, "./$.iter-detect": 24, "./$.mix": 28, "./$.redef": 31, "./$.species": 36 }], 14: [function (require, module, exports) {
            var assertFunction = require("./$.assert").fn;module.exports = function (fn, that, length) {
                assertFunction(fn);if (~length && that === undefined) return fn;switch (length) {case 1:
                        return function (a) {
                            return fn.call(that, a);
                        };case 2:
                        return function (a, b) {
                            return fn.call(that, a, b);
                        };case 3:
                        return function (a, b, c) {
                            return fn.call(that, a, b, c);
                        };}return function () {
                    return fn.apply(that, arguments);
                };
            };
        }, { "./$.assert": 7 }], 15: [function (require, module, exports) {
            var $ = require("./$"),
                global = $.g,
                core = $.core,
                isFunction = $.isFunction,
                $redef = require("./$.redef");function ctx(fn, that) {
                return function () {
                    return fn.apply(that, arguments);
                };
            }global.core = core;$def.F = 1;$def.G = 2;$def.S = 4;$def.P = 8;$def.B = 16;$def.W = 32;function $def(type, name, source) {
                var key,
                    own,
                    out,
                    exp,
                    isGlobal = type & $def.G,
                    isProto = type & $def.P,
                    target = isGlobal ? global : type & $def.S ? global[name] : (global[name] || {}).prototype,
                    exports = isGlobal ? core : core[name] || (core[name] = {});if (isGlobal) source = name;for (key in source) {
                    own = !(type & $def.F) && target && key in target;out = (own ? target : source)[key];if (type & $def.B && own) exp = ctx(out, global);else exp = isProto && isFunction(out) ? ctx(Function.call, out) : out;if (target && !own) $redef(target, key, out);if (exports[key] != out) $.hide(exports, key, exp);if (isProto) (exports.prototype || (exports.prototype = {}))[key] = out;
                }
            }module.exports = $def;
        }, { "./$": 26, "./$.redef": 31 }], 16: [function (require, module, exports) {
            var $ = require("./$"),
                document = $.g.document,
                isObject = $.isObject,
                is = isObject(document) && isObject(document.createElement);module.exports = function (it) {
                return is ? document.createElement(it) : {};
            };
        }, { "./$": 26 }], 17: [function (require, module, exports) {
            var $ = require("./$");module.exports = function (it) {
                var keys = $.getKeys(it),
                    getDesc = $.getDesc,
                    getSymbols = $.getSymbols;if (getSymbols) $.each.call(getSymbols(it), function (key) {
                    if (getDesc(it, key).enumerable) keys.push(key);
                });return keys;
            };
        }, { "./$": 26 }], 18: [function (require, module, exports) {
            var ctx = require("./$.ctx"),
                get = require("./$.iter").get,
                call = require("./$.iter-call");module.exports = function (iterable, entries, fn, that) {
                var iterator = get(iterable),
                    f = ctx(fn, that, entries ? 2 : 1),
                    step;while (!(step = iterator.next()).done) {
                    if (call(iterator, f, step.value, entries) === false) {
                        return call.close(iterator);
                    }
                }
            };
        }, { "./$.ctx": 14, "./$.iter": 25, "./$.iter-call": 22 }], 19: [function (require, module, exports) {
            module.exports = function ($) {
                $.FW = true;$.path = $.g;return $;
            };
        }, {}], 20: [function (require, module, exports) {
            var $ = require("./$"),
                toString = {}.toString,
                getNames = $.getNames;var windowNames = (typeof window === 'undefined' ? 'undefined' : _typeof(window)) == "object" && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];function getWindowNames(it) {
                try {
                    return getNames(it);
                } catch (e) {
                    return windowNames.slice();
                }
            }module.exports.get = function getOwnPropertyNames(it) {
                if (windowNames && toString.call(it) == "[object Window]") return getWindowNames(it);return getNames($.toObject(it));
            };
        }, { "./$": 26 }], 21: [function (require, module, exports) {
            module.exports = function (fn, args, that) {
                var un = that === undefined;switch (args.length) {case 0:
                        return un ? fn() : fn.call(that);case 1:
                        return un ? fn(args[0]) : fn.call(that, args[0]);case 2:
                        return un ? fn(args[0], args[1]) : fn.call(that, args[0], args[1]);case 3:
                        return un ? fn(args[0], args[1], args[2]) : fn.call(that, args[0], args[1], args[2]);case 4:
                        return un ? fn(args[0], args[1], args[2], args[3]) : fn.call(that, args[0], args[1], args[2], args[3]);case 5:
                        return un ? fn(args[0], args[1], args[2], args[3], args[4]) : fn.call(that, args[0], args[1], args[2], args[3], args[4]);}return fn.apply(that, args);
            };
        }, {}], 22: [function (require, module, exports) {
            var assertObject = require("./$.assert").obj;function close(iterator) {
                var ret = iterator["return"];if (ret !== undefined) assertObject(ret.call(iterator));
            }function call(iterator, fn, value, entries) {
                try {
                    return entries ? fn(assertObject(value)[0], value[1]) : fn(value);
                } catch (e) {
                    close(iterator);throw e;
                }
            }call.close = close;module.exports = call;
        }, { "./$.assert": 7 }], 23: [function (require, module, exports) {
            var $def = require("./$.def"),
                $redef = require("./$.redef"),
                $ = require("./$"),
                cof = require("./$.cof"),
                $iter = require("./$.iter"),
                SYMBOL_ITERATOR = require("./$.wks")("iterator"),
                FF_ITERATOR = "@@iterator",
                KEYS = "keys",
                VALUES = "values",
                Iterators = $iter.Iterators;module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCE) {
                $iter.create(Constructor, NAME, next);function createMethod(kind) {
                    function $$(that) {
                        return new Constructor(that, kind);
                    }switch (kind) {case KEYS:
                            return function keys() {
                                return $$(this);
                            };case VALUES:
                            return function values() {
                                return $$(this);
                            };}return function entries() {
                        return $$(this);
                    };
                }var TAG = NAME + " Iterator",
                    proto = Base.prototype,
                    _native = proto[SYMBOL_ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT],
                    _default = _native || createMethod(DEFAULT),
                    methods,
                    key;if (_native) {
                    var IteratorPrototype = $.getProto(_default.call(new Base()));cof.set(IteratorPrototype, TAG, true);if ($.FW && $.has(proto, FF_ITERATOR)) $iter.set(IteratorPrototype, $.that);
                }if ($.FW || FORCE) $iter.set(proto, _default);Iterators[NAME] = _default;Iterators[TAG] = $.that;if (DEFAULT) {
                    methods = { keys: IS_SET ? _default : createMethod(KEYS), values: DEFAULT == VALUES ? _default : createMethod(VALUES), entries: DEFAULT != VALUES ? _default : createMethod("entries") };if (FORCE) for (key in methods) {
                        if (!(key in proto)) $redef(proto, key, methods[key]);
                    } else $def($def.P + $def.F * $iter.BUGGY, NAME, methods);
                }
            };
        }, { "./$": 26, "./$.cof": 9, "./$.def": 15, "./$.iter": 25, "./$.redef": 31, "./$.wks": 44 }], 24: [function (require, module, exports) {
            var SYMBOL_ITERATOR = require("./$.wks")("iterator"),
                SAFE_CLOSING = false;try {
                var riter = [7][SYMBOL_ITERATOR]();riter["return"] = function () {
                    SAFE_CLOSING = true;
                };Array.from(riter, function () {
                    throw 2;
                });
            } catch (e) {}module.exports = function (exec) {
                if (!SAFE_CLOSING) return false;var safe = false;try {
                    var arr = [7],
                        iter = arr[SYMBOL_ITERATOR]();iter.next = function () {
                        safe = true;
                    };arr[SYMBOL_ITERATOR] = function () {
                        return iter;
                    };exec(arr);
                } catch (e) {}return safe;
            };
        }, { "./$.wks": 44 }], 25: [function (require, module, exports) {
            "use strict";
            var $ = require("./$"),
                cof = require("./$.cof"),
                classof = cof.classof,
                assert = require("./$.assert"),
                assertObject = assert.obj,
                SYMBOL_ITERATOR = require("./$.wks")("iterator"),
                FF_ITERATOR = "@@iterator",
                Iterators = require("./$.shared")("iterators"),
                IteratorPrototype = {};setIterator(IteratorPrototype, $.that);function setIterator(O, value) {
                $.hide(O, SYMBOL_ITERATOR, value);if (FF_ITERATOR in []) $.hide(O, FF_ITERATOR, value);
            }module.exports = { BUGGY: "keys" in [] && !("next" in [].keys()), Iterators: Iterators, step: function step(done, value) {
                    return { value: value, done: !!done };
                }, is: function is(it) {
                    var O = Object(it),
                        _Symbol = $.g.Symbol;return (_Symbol && _Symbol.iterator || FF_ITERATOR) in O || SYMBOL_ITERATOR in O || $.has(Iterators, classof(O));
                }, get: function get(it) {
                    var _Symbol2 = $.g.Symbol,
                        getIter;if (it != undefined) {
                        getIter = it[_Symbol2 && _Symbol2.iterator || FF_ITERATOR] || it[SYMBOL_ITERATOR] || Iterators[classof(it)];
                    }assert($.isFunction(getIter), it, " is not iterable!");return assertObject(getIter.call(it));
                }, set: setIterator, create: function create(Constructor, NAME, next, proto) {
                    Constructor.prototype = $.create(proto || IteratorPrototype, { next: $.desc(1, next) });cof.set(Constructor, NAME + " Iterator");
                } };
        }, { "./$": 26, "./$.assert": 7, "./$.cof": 9, "./$.shared": 35, "./$.wks": 44 }], 26: [function (require, module, exports) {
            "use strict";
            var global = typeof self != "undefined" ? self : Function("return this")(),
                core = {},
                defineProperty = Object.defineProperty,
                hasOwnProperty = {}.hasOwnProperty,
                ceil = Math.ceil,
                floor = Math.floor,
                max = Math.max,
                min = Math.min;var DESC = !!function () {
                try {
                    return defineProperty({}, "a", { get: function get() {
                            return 2;
                        } }).a == 2;
                } catch (e) {}
            }();var hide = createDefiner(1);function toInteger(it) {
                return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
            }function desc(bitmap, value) {
                return { enumerable: !(bitmap & 1), configurable: !(bitmap & 2), writable: !(bitmap & 4), value: value };
            }function simpleSet(object, key, value) {
                object[key] = value;return object;
            }function createDefiner(bitmap) {
                return DESC ? function (object, key, value) {
                    return $.setDesc(object, key, desc(bitmap, value));
                } : simpleSet;
            }function isObject(it) {
                return it !== null && ((typeof it === 'undefined' ? 'undefined' : _typeof(it)) == "object" || typeof it == "function");
            }function isFunction(it) {
                return typeof it == "function";
            }function assertDefined(it) {
                if (it == undefined) throw TypeError("Can't call method on  " + it);return it;
            }var $ = module.exports = require("./$.fw")({ g: global, core: core, html: global.document && document.documentElement, isObject: isObject, isFunction: isFunction, that: function that() {
                    return this;
                }, toInteger: toInteger, toLength: function toLength(it) {
                    return it > 0 ? min(toInteger(it), 9007199254740991) : 0;
                }, toIndex: function toIndex(index, length) {
                    index = toInteger(index);return index < 0 ? max(index + length, 0) : min(index, length);
                }, has: function has(it, key) {
                    return hasOwnProperty.call(it, key);
                }, create: Object.create, getProto: Object.getPrototypeOf, DESC: DESC, desc: desc, getDesc: Object.getOwnPropertyDescriptor, setDesc: defineProperty, setDescs: Object.defineProperties, getKeys: Object.keys, getNames: Object.getOwnPropertyNames, getSymbols: Object.getOwnPropertySymbols, assertDefined: assertDefined, ES5Object: Object, toObject: function toObject(it) {
                    return $.ES5Object(assertDefined(it));
                }, hide: hide, def: createDefiner(0), set: global.Symbol ? simpleSet : hide, each: [].forEach });if (typeof __e != "undefined") __e = core;if (typeof __g != "undefined") __g = global;
        }, { "./$.fw": 19 }], 27: [function (require, module, exports) {
            var $ = require("./$");module.exports = function (object, el) {
                var O = $.toObject(object),
                    keys = $.getKeys(O),
                    length = keys.length,
                    index = 0,
                    key;while (length > index) {
                    if (O[key = keys[index++]] === el) return key;
                }
            };
        }, { "./$": 26 }], 28: [function (require, module, exports) {
            var $redef = require("./$.redef");module.exports = function (target, src) {
                for (var key in src) {
                    $redef(target, key, src[key]);
                }return target;
            };
        }, { "./$.redef": 31 }], 29: [function (require, module, exports) {
            var $ = require("./$"),
                assertObject = require("./$.assert").obj;module.exports = function ownKeys(it) {
                assertObject(it);var keys = $.getNames(it),
                    getSymbols = $.getSymbols;return getSymbols ? keys.concat(getSymbols(it)) : keys;
            };
        }, { "./$": 26, "./$.assert": 7 }], 30: [function (require, module, exports) {
            "use strict";
            var $ = require("./$"),
                invoke = require("./$.invoke"),
                assertFunction = require("./$.assert").fn;module.exports = function () {
                var fn = assertFunction(this),
                    length = arguments.length,
                    pargs = Array(length),
                    i = 0,
                    _ = $.path._,
                    holder = false;while (length > i) {
                    if ((pargs[i] = arguments[i++]) === _) holder = true;
                }return function () {
                    var that = this,
                        _length = arguments.length,
                        j = 0,
                        k = 0,
                        args;if (!holder && !_length) return invoke(fn, pargs, that);args = pargs.slice();if (holder) for (; length > j; j++) {
                        if (args[j] === _) args[j] = arguments[k++];
                    }while (_length > k) {
                        args.push(arguments[k++]);
                    }return invoke(fn, args, that);
                };
            };
        }, { "./$": 26, "./$.assert": 7, "./$.invoke": 21 }], 31: [function (require, module, exports) {
            var $ = require("./$"),
                tpl = String({}.hasOwnProperty),
                SRC = require("./$.uid").safe("src"),
                _toString = Function.toString;function $redef(O, key, val, safe) {
                if ($.isFunction(val)) {
                    var base = O[key];$.hide(val, SRC, base ? String(base) : tpl.replace(/hasOwnProperty/, String(key)));if (!("name" in val)) val.name = key;
                }if (O === $.g) {
                    O[key] = val;
                } else {
                    if (!safe) delete O[key];$.hide(O, key, val);
                }
            }$redef(Function.prototype, "toString", function toString() {
                return $.has(this, SRC) ? this[SRC] : _toString.call(this);
            });$.core.inspectSource = function (it) {
                return _toString.call(it);
            };module.exports = $redef;
        }, { "./$": 26, "./$.uid": 42 }], 32: [function (require, module, exports) {
            "use strict";
            module.exports = function (regExp, replace, isStatic) {
                var replacer = replace === Object(replace) ? function (part) {
                    return replace[part];
                } : replace;return function (it) {
                    return String(isStatic ? it : this).replace(regExp, replacer);
                };
            };
        }, {}], 33: [function (require, module, exports) {
            module.exports = Object.is || function is(x, y) {
                return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
            };
        }, {}], 34: [function (require, module, exports) {
            var $ = require("./$"),
                assert = require("./$.assert");function check(O, proto) {
                assert.obj(O);assert(proto === null || $.isObject(proto), proto, ": can't set as prototype!");
            }module.exports = { set: Object.setPrototypeOf || ("__proto__" in {} ? function (buggy, set) {
                    try {
                        set = require("./$.ctx")(Function.call, $.getDesc(Object.prototype, "__proto__").set, 2);set({}, []);
                    } catch (e) {
                        buggy = true;
                    }return function setPrototypeOf(O, proto) {
                        check(O, proto);if (buggy) O.__proto__ = proto;else set(O, proto);return O;
                    };
                }() : undefined), check: check };
        }, { "./$": 26, "./$.assert": 7, "./$.ctx": 14 }], 35: [function (require, module, exports) {
            var $ = require("./$"),
                SHARED = "__core-js_shared__",
                store = $.g[SHARED] || ($.g[SHARED] = {});module.exports = function (key) {
                return store[key] || (store[key] = {});
            };
        }, { "./$": 26 }], 36: [function (require, module, exports) {
            var $ = require("./$"),
                SPECIES = require("./$.wks")("species");module.exports = function (C) {
                if ($.DESC && !(SPECIES in C)) $.setDesc(C, SPECIES, { configurable: true, get: $.that });
            };
        }, { "./$": 26, "./$.wks": 44 }], 37: [function (require, module, exports) {
            var $ = require("./$");module.exports = function (TO_STRING) {
                return function (that, pos) {
                    var s = String($.assertDefined(that)),
                        i = $.toInteger(pos),
                        l = s.length,
                        a,
                        b;if (i < 0 || i >= l) return TO_STRING ? "" : undefined;a = s.charCodeAt(i);return a < 55296 || a > 56319 || i + 1 === l || (b = s.charCodeAt(i + 1)) < 56320 || b > 57343 ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 55296 << 10) + (b - 56320) + 65536;
                };
            };
        }, { "./$": 26 }], 38: [function (require, module, exports) {
            var $ = require("./$"),
                repeat = require("./$.string-repeat");module.exports = function (that, minLength, fillChar, left) {
                var S = String($.assertDefined(that));if (minLength === undefined) return S;var intMinLength = $.toInteger(minLength);var fillLen = intMinLength - S.length;if (fillLen < 0 || fillLen === Infinity) {
                    throw new RangeError("Cannot satisfy string length " + minLength + " for string: " + S);
                }var sFillStr = fillChar === undefined ? " " : String(fillChar);var sFillVal = repeat.call(sFillStr, Math.ceil(fillLen / sFillStr.length));if (sFillVal.length > fillLen) sFillVal = left ? sFillVal.slice(sFillVal.length - fillLen) : sFillVal.slice(0, fillLen);return left ? sFillVal.concat(S) : S.concat(sFillVal);
            };
        }, { "./$": 26, "./$.string-repeat": 39 }], 39: [function (require, module, exports) {
            "use strict";
            var $ = require("./$");module.exports = function repeat(count) {
                var str = String($.assertDefined(this)),
                    res = "",
                    n = $.toInteger(count);if (n < 0 || n == Infinity) throw RangeError("Count can't be negative");for (; n > 0; (n >>>= 1) && (str += str)) {
                    if (n & 1) res += str;
                }return res;
            };
        }, { "./$": 26 }], 40: [function (require, module, exports) {
            "use strict";
            var $ = require("./$"),
                ctx = require("./$.ctx"),
                cof = require("./$.cof"),
                invoke = require("./$.invoke"),
                cel = require("./$.dom-create"),
                global = $.g,
                isFunction = $.isFunction,
                html = $.html,
                process = global.process,
                setTask = global.setImmediate,
                clearTask = global.clearImmediate,
                MessageChannel = global.MessageChannel,
                counter = 0,
                queue = {},
                ONREADYSTATECHANGE = "onreadystatechange",
                defer,
                channel,
                port;function run() {
                var id = +this;if ($.has(queue, id)) {
                    var fn = queue[id];delete queue[id];fn();
                }
            }function listner(event) {
                run.call(event.data);
            }if (!isFunction(setTask) || !isFunction(clearTask)) {
                setTask = function setTask(fn) {
                    var args = [],
                        i = 1;while (arguments.length > i) {
                        args.push(arguments[i++]);
                    }queue[++counter] = function () {
                        invoke(isFunction(fn) ? fn : Function(fn), args);
                    };defer(counter);return counter;
                };clearTask = function clearTask(id) {
                    delete queue[id];
                };if (cof(process) == "process") {
                    defer = function defer(id) {
                        process.nextTick(ctx(run, id, 1));
                    };
                } else if (global.addEventListener && isFunction(global.postMessage) && !global.importScripts) {
                    defer = function defer(id) {
                        global.postMessage(id, "*");
                    };global.addEventListener("message", listner, false);
                } else if (isFunction(MessageChannel)) {
                    channel = new MessageChannel();port = channel.port2;channel.port1.onmessage = listner;defer = ctx(port.postMessage, port, 1);
                } else if (ONREADYSTATECHANGE in cel("script")) {
                    defer = function defer(id) {
                        html.appendChild(cel("script"))[ONREADYSTATECHANGE] = function () {
                            html.removeChild(this);run.call(id);
                        };
                    };
                } else {
                    defer = function defer(id) {
                        setTimeout(ctx(run, id, 1), 0);
                    };
                }
            }module.exports = { set: setTask, clear: clearTask };
        }, { "./$": 26, "./$.cof": 9, "./$.ctx": 14, "./$.dom-create": 16, "./$.invoke": 21 }], 41: [function (require, module, exports) {
            module.exports = function (exec) {
                try {
                    exec();return false;
                } catch (e) {
                    return true;
                }
            };
        }, {}], 42: [function (require, module, exports) {
            var sid = 0;function uid(key) {
                return "Symbol(".concat(key === undefined ? "" : key, ")_", (++sid + Math.random()).toString(36));
            }uid.safe = require("./$").g.Symbol || uid;module.exports = uid;
        }, { "./$": 26 }], 43: [function (require, module, exports) {
            var UNSCOPABLES = require("./$.wks")("unscopables");if (!(UNSCOPABLES in [])) require("./$").hide(Array.prototype, UNSCOPABLES, {});module.exports = function (key) {
                [][UNSCOPABLES][key] = true;
            };
        }, { "./$": 26, "./$.wks": 44 }], 44: [function (require, module, exports) {
            var global = require("./$").g,
                store = require("./$.shared")("wks");module.exports = function (name) {
                return store[name] || (store[name] = global.Symbol && global.Symbol[name] || require("./$.uid").safe("Symbol." + name));
            };
        }, { "./$": 26, "./$.shared": 35, "./$.uid": 42 }], 45: [function (require, module, exports) {
            var $ = require("./$"),
                cel = require("./$.dom-create"),
                cof = require("./$.cof"),
                $def = require("./$.def"),
                invoke = require("./$.invoke"),
                arrayMethod = require("./$.array-methods"),
                IE_PROTO = require("./$.uid").safe("__proto__"),
                assert = require("./$.assert"),
                assertObject = assert.obj,
                ObjectProto = Object.prototype,
                html = $.html,
                A = [],
                _slice = A.slice,
                _join = A.join,
                classof = cof.classof,
                has = $.has,
                defineProperty = $.setDesc,
                getOwnDescriptor = $.getDesc,
                defineProperties = $.setDescs,
                isFunction = $.isFunction,
                isObject = $.isObject,
                toObject = $.toObject,
                toLength = $.toLength,
                toIndex = $.toIndex,
                IE8_DOM_DEFINE = false,
                $indexOf = require("./$.array-includes")(false),
                $forEach = arrayMethod(0),
                $map = arrayMethod(1),
                $filter = arrayMethod(2),
                $some = arrayMethod(3),
                $every = arrayMethod(4);if (!$.DESC) {
                try {
                    IE8_DOM_DEFINE = defineProperty(cel("div"), "x", {
                        get: function get() {
                            return 8;
                        } }).x == 8;
                } catch (e) {}$.setDesc = function (O, P, Attributes) {
                    if (IE8_DOM_DEFINE) try {
                        return defineProperty(O, P, Attributes);
                    } catch (e) {}if ("get" in Attributes || "set" in Attributes) throw TypeError("Accessors not supported!");if ("value" in Attributes) assertObject(O)[P] = Attributes.value;return O;
                };$.getDesc = function (O, P) {
                    if (IE8_DOM_DEFINE) try {
                        return getOwnDescriptor(O, P);
                    } catch (e) {}if (has(O, P)) return $.desc(!ObjectProto.propertyIsEnumerable.call(O, P), O[P]);
                };$.setDescs = defineProperties = function defineProperties(O, Properties) {
                    assertObject(O);var keys = $.getKeys(Properties),
                        length = keys.length,
                        i = 0,
                        P;while (length > i) {
                        $.setDesc(O, P = keys[i++], Properties[P]);
                    }return O;
                };
            }$def($def.S + $def.F * !$.DESC, "Object", { getOwnPropertyDescriptor: $.getDesc, defineProperty: $.setDesc, defineProperties: defineProperties });var keys1 = ("constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable," + "toLocaleString,toString,valueOf").split(","),
                keys2 = keys1.concat("length", "prototype"),
                keysLen1 = keys1.length;var _createDict = function createDict() {
                var iframe = cel("iframe"),
                    i = keysLen1,
                    gt = ">",
                    iframeDocument;iframe.style.display = "none";html.appendChild(iframe);iframe.src = "javascript:";iframeDocument = iframe.contentWindow.document;iframeDocument.open();iframeDocument.write("<script>document.F=Object</script" + gt);iframeDocument.close();_createDict = iframeDocument.F;while (i--) {
                    delete _createDict.prototype[keys1[i]];
                }return _createDict();
            };function createGetKeys(names, length) {
                return function (object) {
                    var O = toObject(object),
                        i = 0,
                        result = [],
                        key;for (key in O) {
                        if (key != IE_PROTO) has(O, key) && result.push(key);
                    }while (length > i) {
                        if (has(O, key = names[i++])) {
                            ~$indexOf(result, key) || result.push(key);
                        }
                    }return result;
                };
            }function Empty() {}$def($def.S, "Object", { getPrototypeOf: $.getProto = $.getProto || function (O) {
                    O = Object(assert.def(O));if (has(O, IE_PROTO)) return O[IE_PROTO];if (isFunction(O.constructor) && O instanceof O.constructor) {
                        return O.constructor.prototype;
                    }return O instanceof Object ? ObjectProto : null;
                }, getOwnPropertyNames: $.getNames = $.getNames || createGetKeys(keys2, keys2.length, true), create: $.create = $.create || function (O, Properties) {
                    var result;if (O !== null) {
                        Empty.prototype = assertObject(O);result = new Empty();Empty.prototype = null;result[IE_PROTO] = O;
                    } else result = _createDict();return Properties === undefined ? result : defineProperties(result, Properties);
                }, keys: $.getKeys = $.getKeys || createGetKeys(keys1, keysLen1, false), seal: function seal(it) {
                    return it;
                }, freeze: function freeze(it) {
                    return it;
                }, preventExtensions: function preventExtensions(it) {
                    return it;
                }, isSealed: function isSealed(it) {
                    return !isObject(it);
                }, isFrozen: function isFrozen(it) {
                    return !isObject(it);
                }, isExtensible: function isExtensible(it) {
                    return isObject(it);
                } });$def($def.P, "Function", { bind: function bind(that) {
                    var fn = assert.fn(this),
                        partArgs = _slice.call(arguments, 1);function bound() {
                        var args = partArgs.concat(_slice.call(arguments)),
                            constr = this instanceof bound,
                            ctx = constr ? $.create(fn.prototype) : that,
                            result = invoke(fn, args, ctx);return constr ? ctx : result;
                    }if (fn.prototype) bound.prototype = fn.prototype;return bound;
                } });if (!(0 in Object("z") && "z"[0] == "z")) {
                $.ES5Object = function (it) {
                    return cof(it) == "String" ? it.split("") : Object(it);
                };
            }var buggySlice = true;try {
                if (html) _slice.call(html);buggySlice = false;
            } catch (e) {}$def($def.P + $def.F * buggySlice, "Array", { slice: function slice(begin, end) {
                    var len = toLength(this.length),
                        klass = cof(this);end = end === undefined ? len : end;if (klass == "Array") return _slice.call(this, begin, end);var start = toIndex(begin, len),
                        upTo = toIndex(end, len),
                        size = toLength(upTo - start),
                        cloned = Array(size),
                        i = 0;for (; i < size; i++) {
                        cloned[i] = klass == "String" ? this.charAt(start + i) : this[start + i];
                    }return cloned;
                } });$def($def.P + $def.F * ($.ES5Object != Object), "Array", { join: function join() {
                    return _join.apply($.ES5Object(this), arguments);
                } });$def($def.S, "Array", { isArray: function isArray(arg) {
                    return cof(arg) == "Array";
                } });function createArrayReduce(isRight) {
                return function (callbackfn, memo) {
                    assert.fn(callbackfn);var O = toObject(this),
                        length = toLength(O.length),
                        index = isRight ? length - 1 : 0,
                        i = isRight ? -1 : 1;if (arguments.length < 2) for (;;) {
                        if (index in O) {
                            memo = O[index];index += i;break;
                        }index += i;assert(isRight ? index >= 0 : length > index, "Reduce of empty array with no initial value");
                    }for (; isRight ? index >= 0 : length > index; index += i) {
                        if (index in O) {
                            memo = callbackfn(memo, O[index], index, this);
                        }
                    }return memo;
                };
            }$def($def.P, "Array", { forEach: $.each = $.each || function forEach(callbackfn) {
                    return $forEach(this, callbackfn, arguments[1]);
                }, map: function map(callbackfn) {
                    return $map(this, callbackfn, arguments[1]);
                }, filter: function filter(callbackfn) {
                    return $filter(this, callbackfn, arguments[1]);
                }, some: function some(callbackfn) {
                    return $some(this, callbackfn, arguments[1]);
                }, every: function every(callbackfn) {
                    return $every(this, callbackfn, arguments[1]);
                }, reduce: createArrayReduce(false), reduceRight: createArrayReduce(true), indexOf: function indexOf(el) {
                    return $indexOf(this, el, arguments[1]);
                }, lastIndexOf: function lastIndexOf(el, fromIndex) {
                    var O = toObject(this),
                        length = toLength(O.length),
                        index = length - 1;if (arguments.length > 1) index = Math.min(index, $.toInteger(fromIndex));if (index < 0) index = toLength(length + index);for (; index >= 0; index--) {
                        if (index in O) if (O[index] === el) return index;
                    }return -1;
                } });$def($def.P, "String", { trim: require("./$.replacer")(/^\s*([\s\S]*\S)?\s*$/, "$1") });$def($def.S, "Date", { now: function now() {
                    return +new Date();
                } });function lz(num) {
                return num > 9 ? num : "0" + num;
            }var date = new Date(-5e13 - 1),
                brokenDate = !(date.toISOString && date.toISOString() == "0385-07-25T07:06:39.999Z" && require("./$.throws")(function () {
                new Date(NaN).toISOString();
            }));$def($def.P + $def.F * brokenDate, "Date", { toISOString: function toISOString() {
                    if (!isFinite(this)) throw RangeError("Invalid time value");var d = this,
                        y = d.getUTCFullYear(),
                        m = d.getUTCMilliseconds(),
                        s = y < 0 ? "-" : y > 9999 ? "+" : "";return s + ("00000" + Math.abs(y)).slice(s ? -6 : -4) + "-" + lz(d.getUTCMonth() + 1) + "-" + lz(d.getUTCDate()) + "T" + lz(d.getUTCHours()) + ":" + lz(d.getUTCMinutes()) + ":" + lz(d.getUTCSeconds()) + "." + (m > 99 ? m : "0" + lz(m)) + "Z";
                } });if (classof(function () {
                return arguments;
            }()) == "Object") cof.classof = function (it) {
                var tag = classof(it);return tag == "Object" && isFunction(it.callee) ? "Arguments" : tag;
            };
        }, { "./$": 26, "./$.array-includes": 5, "./$.array-methods": 6, "./$.assert": 7, "./$.cof": 9, "./$.def": 15, "./$.dom-create": 16, "./$.invoke": 21, "./$.replacer": 32, "./$.throws": 41, "./$.uid": 42 }], 46: [function (require, module, exports) {
            "use strict";
            var $ = require("./$"),
                $def = require("./$.def"),
                toIndex = $.toIndex;$def($def.P, "Array", { copyWithin: function copyWithin(target, start) {
                    var O = Object($.assertDefined(this)),
                        len = $.toLength(O.length),
                        to = toIndex(target, len),
                        from = toIndex(start, len),
                        end = arguments[2],
                        fin = end === undefined ? len : toIndex(end, len),
                        count = Math.min(fin - from, len - to),
                        inc = 1;if (from < to && to < from + count) {
                        inc = -1;from = from + count - 1;to = to + count - 1;
                    }while (count-- > 0) {
                        if (from in O) O[to] = O[from];else delete O[to];to += inc;from += inc;
                    }return O;
                } });require("./$.unscope")("copyWithin");
        }, { "./$": 26, "./$.def": 15, "./$.unscope": 43 }], 47: [function (require, module, exports) {
            "use strict";
            var $ = require("./$"),
                $def = require("./$.def"),
                toIndex = $.toIndex;$def($def.P, "Array", { fill: function fill(value) {
                    var O = Object($.assertDefined(this)),
                        length = $.toLength(O.length),
                        index = toIndex(arguments[1], length),
                        end = arguments[2],
                        endPos = end === undefined ? length : toIndex(end, length);while (endPos > index) {
                        O[index++] = value;
                    }return O;
                } });require("./$.unscope")("fill");
        }, { "./$": 26, "./$.def": 15, "./$.unscope": 43 }], 48: [function (require, module, exports) {
            "use strict";
            var KEY = "findIndex",
                $def = require("./$.def"),
                forced = true,
                $find = require("./$.array-methods")(6);if (KEY in []) Array(1)[KEY](function () {
                forced = false;
            });$def($def.P + $def.F * forced, "Array", { findIndex: function findIndex(callbackfn) {
                    return $find(this, callbackfn, arguments[1]);
                } });require("./$.unscope")(KEY);
        }, { "./$.array-methods": 6, "./$.def": 15, "./$.unscope": 43 }], 49: [function (require, module, exports) {
            "use strict";
            var KEY = "find",
                $def = require("./$.def"),
                forced = true,
                $find = require("./$.array-methods")(5);if (KEY in []) Array(1)[KEY](function () {
                forced = false;
            });$def($def.P + $def.F * forced, "Array", { find: function find(callbackfn) {
                    return $find(this, callbackfn, arguments[1]);
                } });require("./$.unscope")(KEY);
        }, { "./$.array-methods": 6, "./$.def": 15, "./$.unscope": 43 }], 50: [function (require, module, exports) {
            var $ = require("./$"),
                ctx = require("./$.ctx"),
                $def = require("./$.def"),
                $iter = require("./$.iter"),
                call = require("./$.iter-call");$def($def.S + $def.F * !require("./$.iter-detect")(function (iter) {
                Array.from(iter);
            }), "Array", { from: function from(arrayLike) {
                    var O = Object($.assertDefined(arrayLike)),
                        mapfn = arguments[1],
                        mapping = mapfn !== undefined,
                        f = mapping ? ctx(mapfn, arguments[2], 2) : undefined,
                        index = 0,
                        length,
                        result,
                        step,
                        iterator;if ($iter.is(O)) {
                        iterator = $iter.get(O);result = new (typeof this == "function" ? this : Array)();for (; !(step = iterator.next()).done; index++) {
                            result[index] = mapping ? call(iterator, f, [step.value, index], true) : step.value;
                        }
                    } else {
                        result = new (typeof this == "function" ? this : Array)(length = $.toLength(O.length));for (; length > index; index++) {
                            result[index] = mapping ? f(O[index], index) : O[index];
                        }
                    }result.length = index;return result;
                } });
        }, { "./$": 26, "./$.ctx": 14, "./$.def": 15, "./$.iter": 25, "./$.iter-call": 22, "./$.iter-detect": 24 }], 51: [function (require, module, exports) {
            var $ = require("./$"),
                setUnscope = require("./$.unscope"),
                ITER = require("./$.uid").safe("iter"),
                $iter = require("./$.iter"),
                step = $iter.step,
                Iterators = $iter.Iterators;require("./$.iter-define")(Array, "Array", function (iterated, kind) {
                $.set(this, ITER, { o: $.toObject(iterated), i: 0, k: kind });
            }, function () {
                var iter = this[ITER],
                    O = iter.o,
                    kind = iter.k,
                    index = iter.i++;if (!O || index >= O.length) {
                    iter.o = undefined;return step(1);
                }if (kind == "keys") return step(0, index);if (kind == "values") return step(0, O[index]);return step(0, [index, O[index]]);
            }, "values");Iterators.Arguments = Iterators.Array;setUnscope("keys");setUnscope("values");setUnscope("entries");
        }, { "./$": 26, "./$.iter": 25, "./$.iter-define": 23, "./$.uid": 42, "./$.unscope": 43 }], 52: [function (require, module, exports) {
            var $def = require("./$.def");$def($def.S, "Array", { of: function of() {
                    var index = 0,
                        length = arguments.length,
                        result = new (typeof this == "function" ? this : Array)(length);while (length > index) {
                        result[index] = arguments[index++];
                    }result.length = length;return result;
                } });
        }, { "./$.def": 15 }], 53: [function (require, module, exports) {
            require("./$.species")(Array);
        }, { "./$.species": 36 }], 54: [function (require, module, exports) {
            var $ = require("./$"),
                HAS_INSTANCE = require("./$.wks")("hasInstance"),
                FunctionProto = Function.prototype;if (!(HAS_INSTANCE in FunctionProto)) $.setDesc(FunctionProto, HAS_INSTANCE, { value: function value(O) {
                    if (!$.isFunction(this) || !$.isObject(O)) return false;if (!$.isObject(this.prototype)) return O instanceof this;while (O = $.getProto(O)) {
                        if (this.prototype === O) return true;
                    }return false;
                } });
        }, { "./$": 26, "./$.wks": 44 }], 55: [function (require, module, exports) {
            "use strict";
            var $ = require("./$"),
                NAME = "name",
                setDesc = $.setDesc,
                FunctionProto = Function.prototype;NAME in FunctionProto || $.FW && $.DESC && setDesc(FunctionProto, NAME, { configurable: true, get: function get() {
                    var match = String(this).match(/^\s*function ([^ (]*)/),
                        name = match ? match[1] : "";$.has(this, NAME) || setDesc(this, NAME, $.desc(5, name));return name;
                }, set: function set(value) {
                    $.has(this, NAME) || setDesc(this, NAME, $.desc(0, value));
                } });
        }, { "./$": 26 }], 56: [function (require, module, exports) {
            "use strict";
            var strong = require("./$.collection-strong");require("./$.collection")("Map", function (get) {
                return function Map() {
                    return get(this, arguments[0]);
                };
            }, { get: function get(key) {
                    var entry = strong.getEntry(this, key);return entry && entry.v;
                }, set: function set(key, value) {
                    return strong.def(this, key === 0 ? 0 : key, value);
                } }, strong, true);
        }, { "./$.collection": 13, "./$.collection-strong": 10 }], 57: [function (require, module, exports) {
            var Infinity = 1 / 0,
                $def = require("./$.def"),
                E = Math.E,
                pow = Math.pow,
                abs = Math.abs,
                exp = Math.exp,
                log = Math.log,
                sqrt = Math.sqrt,
                ceil = Math.ceil,
                floor = Math.floor,
                EPSILON = pow(2, -52),
                EPSILON32 = pow(2, -23),
                MAX32 = pow(2, 127) * (2 - EPSILON32),
                MIN32 = pow(2, -126);function roundTiesToEven(n) {
                return n + 1 / EPSILON - 1 / EPSILON;
            }function sign(x) {
                return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
            }function asinh(x) {
                return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : log(x + sqrt(x * x + 1));
            }function expm1(x) {
                return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : exp(x) - 1;
            }$def($def.S, "Math", { acosh: function acosh(x) {
                    return (x = +x) < 1 ? NaN : isFinite(x) ? log(x / E + sqrt(x + 1) * sqrt(x - 1) / E) + 1 : x;
                }, asinh: asinh, atanh: function atanh(x) {
                    return (x = +x) == 0 ? x : log((1 + x) / (1 - x)) / 2;
                }, cbrt: function cbrt(x) {
                    return sign(x = +x) * pow(abs(x), 1 / 3);
                }, clz32: function clz32(x) {
                    return (x >>>= 0) ? 31 - floor(log(x + .5) * Math.LOG2E) : 32;
                }, cosh: function cosh(x) {
                    return (exp(x = +x) + exp(-x)) / 2;
                }, expm1: expm1, fround: function fround(x) {
                    var $abs = abs(x),
                        $sign = sign(x),
                        a,
                        result;if ($abs < MIN32) return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;a = (1 + EPSILON32 / EPSILON) * $abs;result = a - (a - $abs);if (result > MAX32 || result != result) return $sign * Infinity;return $sign * result;
                }, hypot: function hypot(value1, value2) {
                    var sum = 0,
                        i = 0,
                        len = arguments.length,
                        larg = 0,
                        arg,
                        div;while (i < len) {
                        arg = abs(arguments[i++]);if (larg < arg) {
                            div = larg / arg;sum = sum * div * div + 1;larg = arg;
                        } else if (arg > 0) {
                            div = arg / larg;sum += div * div;
                        } else sum += arg;
                    }return larg === Infinity ? Infinity : larg * sqrt(sum);
                }, imul: function imul(x, y) {
                    var UInt16 = 65535,
                        xn = +x,
                        yn = +y,
                        xl = UInt16 & xn,
                        yl = UInt16 & yn;return 0 | xl * yl + ((UInt16 & xn >>> 16) * yl + xl * (UInt16 & yn >>> 16) << 16 >>> 0);
                }, log1p: function log1p(x) {
                    return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : log(1 + x);
                }, log10: function log10(x) {
                    return log(x) / Math.LN10;
                }, log2: function log2(x) {
                    return log(x) / Math.LN2;
                }, sign: sign, sinh: function sinh(x) {
                    return abs(x = +x) < 1 ? (expm1(x) - expm1(-x)) / 2 : (exp(x - 1) - exp(-x - 1)) * (E / 2);
                }, tanh: function tanh(x) {
                    var a = expm1(x = +x),
                        b = expm1(-x);return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));
                }, trunc: function trunc(it) {
                    return (it > 0 ? floor : ceil)(it);
                } });
        }, { "./$.def": 15 }], 58: [function (require, module, exports) {
            "use strict";
            var $ = require("./$"),
                isObject = $.isObject,
                isFunction = $.isFunction,
                NUMBER = "Number",
                $Number = $.g[NUMBER],
                Base = $Number,
                proto = $Number.prototype;function toPrimitive(it) {
                var fn, val;if (isFunction(fn = it.valueOf) && !isObject(val = fn.call(it))) return val;if (isFunction(fn = it.toString) && !isObject(val = fn.call(it))) return val;throw TypeError("Can't convert object to number");
            }function toNumber(it) {
                if (isObject(it)) it = toPrimitive(it);if (typeof it == "string" && it.length > 2 && it.charCodeAt(0) == 48) {
                    var binary = false;switch (it.charCodeAt(1)) {case 66:case 98:
                            binary = true;case 79:case 111:
                            return parseInt(it.slice(2), binary ? 2 : 8);}
                }return +it;
            }if ($.FW && !($Number("0o1") && $Number("0b1"))) {
                $Number = function Number(it) {
                    return this instanceof $Number ? new Base(toNumber(it)) : toNumber(it);
                };$.each.call($.DESC ? $.getNames(Base) : ("MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY," + "EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER," + "MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger").split(","), function (key) {
                    if ($.has(Base, key) && !$.has($Number, key)) {
                        $.setDesc($Number, key, $.getDesc(Base, key));
                    }
                });$Number.prototype = proto;proto.constructor = $Number;require("./$.redef")($.g, NUMBER, $Number);
            }
        }, { "./$": 26, "./$.redef": 31 }], 59: [function (require, module, exports) {
            var $ = require("./$"),
                $def = require("./$.def"),
                abs = Math.abs,
                floor = Math.floor,
                _isFinite = $.g.isFinite,
                MAX_SAFE_INTEGER = 9007199254740991;function isInteger(it) {
                return !$.isObject(it) && _isFinite(it) && floor(it) === it;
            }$def($def.S, "Number", { EPSILON: Math.pow(2, -52), isFinite: function isFinite(it) {
                    return typeof it == "number" && _isFinite(it);
                }, isInteger: isInteger, isNaN: function isNaN(number) {
                    return number != number;
                }, isSafeInteger: function isSafeInteger(number) {
                    return isInteger(number) && abs(number) <= MAX_SAFE_INTEGER;
                }, MAX_SAFE_INTEGER: MAX_SAFE_INTEGER, MIN_SAFE_INTEGER: -MAX_SAFE_INTEGER, parseFloat: parseFloat, parseInt: parseInt });
        }, { "./$": 26, "./$.def": 15 }], 60: [function (require, module, exports) {
            var $def = require("./$.def");$def($def.S, "Object", { assign: require("./$.assign") });
        }, { "./$.assign": 8, "./$.def": 15 }], 61: [function (require, module, exports) {
            var $def = require("./$.def");$def($def.S, "Object", { is: require("./$.same") });
        }, { "./$.def": 15, "./$.same": 33 }], 62: [function (require, module, exports) {
            var $def = require("./$.def");$def($def.S, "Object", { setPrototypeOf: require("./$.set-proto").set });
        }, { "./$.def": 15, "./$.set-proto": 34 }], 63: [function (require, module, exports) {
            var $ = require("./$"),
                $def = require("./$.def"),
                isObject = $.isObject,
                toObject = $.toObject;$.each.call(("freeze,seal,preventExtensions,isFrozen,isSealed,isExtensible," + "getOwnPropertyDescriptor,getPrototypeOf,keys,getOwnPropertyNames").split(","), function (KEY, ID) {
                var fn = ($.core.Object || {})[KEY] || Object[KEY],
                    forced = 0,
                    method = {};method[KEY] = ID == 0 ? function freeze(it) {
                    return isObject(it) ? fn(it) : it;
                } : ID == 1 ? function seal(it) {
                    return isObject(it) ? fn(it) : it;
                } : ID == 2 ? function preventExtensions(it) {
                    return isObject(it) ? fn(it) : it;
                } : ID == 3 ? function isFrozen(it) {
                    return isObject(it) ? fn(it) : true;
                } : ID == 4 ? function isSealed(it) {
                    return isObject(it) ? fn(it) : true;
                } : ID == 5 ? function isExtensible(it) {
                    return isObject(it) ? fn(it) : false;
                } : ID == 6 ? function getOwnPropertyDescriptor(it, key) {
                    return fn(toObject(it), key);
                } : ID == 7 ? function getPrototypeOf(it) {
                    return fn(Object($.assertDefined(it)));
                } : ID == 8 ? function keys(it) {
                    return fn(toObject(it));
                } : require("./$.get-names").get;try {
                    fn("z");
                } catch (e) {
                    forced = 1;
                }$def($def.S + $def.F * forced, "Object", method);
            });
        }, { "./$": 26, "./$.def": 15, "./$.get-names": 20 }], 64: [function (require, module, exports) {
            "use strict";
            var cof = require("./$.cof"),
                tmp = {};tmp[require("./$.wks")("toStringTag")] = "z";if (require("./$").FW && cof(tmp) != "z") {
                require("./$.redef")(Object.prototype, "toString", function toString() {
                    return "[object " + cof.classof(this) + "]";
                }, true);
            }
        }, { "./$": 26, "./$.cof": 9, "./$.redef": 31, "./$.wks": 44 }], 65: [function (require, module, exports) {
            "use strict";
            var $ = require("./$"),
                ctx = require("./$.ctx"),
                cof = require("./$.cof"),
                $def = require("./$.def"),
                assert = require("./$.assert"),
                forOf = require("./$.for-of"),
                setProto = require("./$.set-proto").set,
                same = require("./$.same"),
                species = require("./$.species"),
                SPECIES = require("./$.wks")("species"),
                RECORD = require("./$.uid").safe("record"),
                PROMISE = "Promise",
                global = $.g,
                process = global.process,
                isNode = cof(process) == "process",
                asap = process && process.nextTick || require("./$.task").set,
                P = global[PROMISE],
                isFunction = $.isFunction,
                isObject = $.isObject,
                assertFunction = assert.fn,
                assertObject = assert.obj,
                Wrapper;function testResolve(sub) {
                var test = new P(function () {});if (sub) test.constructor = Object;return P.resolve(test) === test;
            }var useNative = function () {
                var works = false;function P2(x) {
                    var self = new P(x);setProto(self, P2.prototype);return self;
                }try {
                    works = isFunction(P) && isFunction(P.resolve) && testResolve();setProto(P2, P);P2.prototype = $.create(P.prototype, { constructor: { value: P2 } });if (!(P2.resolve(5).then(function () {}) instanceof P2)) {
                        works = false;
                    }if (works && $.DESC) {
                        var thenableThenGotten = false;P.resolve($.setDesc({}, "then", { get: function get() {
                                thenableThenGotten = true;
                            } }));works = thenableThenGotten;
                    }
                } catch (e) {
                    works = false;
                }return works;
            }();function isPromise(it) {
                return isObject(it) && (useNative ? cof.classof(it) == "Promise" : RECORD in it);
            }function sameConstructor(a, b) {
                if (!$.FW && a === P && b === Wrapper) return true;return same(a, b);
            }function getConstructor(C) {
                var S = assertObject(C)[SPECIES];return S != undefined ? S : C;
            }function isThenable(it) {
                var then;if (isObject(it)) then = it.then;return isFunction(then) ? then : false;
            }function notify(record) {
                var chain = record.c;if (chain.length) asap.call(global, function () {
                    var value = record.v,
                        ok = record.s == 1,
                        i = 0;function run(react) {
                        var cb = ok ? react.ok : react.fail,
                            ret,
                            then;try {
                            if (cb) {
                                if (!ok) record.h = true;ret = cb === true ? value : cb(value);if (ret === react.P) {
                                    react.rej(TypeError("Promise-chain cycle"));
                                } else if (then = isThenable(ret)) {
                                    then.call(ret, react.res, react.rej);
                                } else react.res(ret);
                            } else react.rej(value);
                        } catch (err) {
                            react.rej(err);
                        }
                    }while (chain.length > i) {
                        run(chain[i++]);
                    }chain.length = 0;
                });
            }function isUnhandled(promise) {
                var record = promise[RECORD],
                    chain = record.a || record.c,
                    i = 0,
                    react;if (record.h) return false;while (chain.length > i) {
                    react = chain[i++];if (react.fail || !isUnhandled(react.P)) return false;
                }return true;
            }function $reject(value) {
                var record = this,
                    promise;if (record.d) return;record.d = true;record = record.r || record;record.v = value;record.s = 2;record.a = record.c.slice();setTimeout(function () {
                    asap.call(global, function () {
                        if (isUnhandled(promise = record.p)) {
                            if (isNode) {
                                process.emit("unhandledRejection", value, promise);
                            } else if (global.console && console.error) {
                                console.error("Unhandled promise rejection", value);
                            }
                        }record.a = undefined;
                    });
                }, 1);notify(record);
            }function $resolve(value) {
                var record = this,
                    then;if (record.d) return;record.d = true;record = record.r || record;try {
                    if (then = isThenable(value)) {
                        asap.call(global, function () {
                            var wrapper = { r: record, d: false };try {
                                then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
                            } catch (e) {
                                $reject.call(wrapper, e);
                            }
                        });
                    } else {
                        record.v = value;record.s = 1;notify(record);
                    }
                } catch (e) {
                    $reject.call({ r: record, d: false }, e);
                }
            }if (!useNative) {
                P = function Promise(executor) {
                    assertFunction(executor);var record = { p: assert.inst(this, P, PROMISE), c: [], a: undefined, s: 0, d: false, v: undefined, h: false };$.hide(this, RECORD, record);try {
                        executor(ctx($resolve, record, 1), ctx($reject, record, 1));
                    } catch (err) {
                        $reject.call(record, err);
                    }
                };require("./$.mix")(P.prototype, { then: function then(onFulfilled, onRejected) {
                        var S = assertObject(assertObject(this).constructor)[SPECIES];var react = { ok: isFunction(onFulfilled) ? onFulfilled : true, fail: isFunction(onRejected) ? onRejected : false };var promise = react.P = new (S != undefined ? S : P)(function (res, rej) {
                            react.res = assertFunction(res);react.rej = assertFunction(rej);
                        });var record = this[RECORD];record.c.push(react);if (record.a) record.a.push(react);if (record.s) notify(record);return promise;
                    }, "catch": function _catch(onRejected) {
                        return this.then(undefined, onRejected);
                    } });
            }$def($def.G + $def.W + $def.F * !useNative, { Promise: P });cof.set(P, PROMISE);species(P);species(Wrapper = $.core[PROMISE]);$def($def.S + $def.F * !useNative, PROMISE, { reject: function reject(r) {
                    return new (getConstructor(this))(function (res, rej) {
                        rej(r);
                    });
                } });$def($def.S + $def.F * (!useNative || testResolve(true)), PROMISE, { resolve: function resolve(x) {
                    return isPromise(x) && sameConstructor(x.constructor, this) ? x : new this(function (res) {
                        res(x);
                    });
                } });$def($def.S + $def.F * !(useNative && require("./$.iter-detect")(function (iter) {
                P.all(iter)["catch"](function () {});
            })), PROMISE, { all: function all(iterable) {
                    var C = getConstructor(this),
                        values = [];return new C(function (res, rej) {
                        forOf(iterable, false, values.push, values);var remaining = values.length,
                            results = Array(remaining);if (remaining) $.each.call(values, function (promise, index) {
                            C.resolve(promise).then(function (value) {
                                results[index] = value;--remaining || res(results);
                            }, rej);
                        });else res(results);
                    });
                }, race: function race(iterable) {
                    var C = getConstructor(this);return new C(function (res, rej) {
                        forOf(iterable, false, function (promise) {
                            C.resolve(promise).then(res, rej);
                        });
                    });
                } });
        }, { "./$": 26, "./$.assert": 7, "./$.cof": 9, "./$.ctx": 14, "./$.def": 15, "./$.for-of": 18, "./$.iter-detect": 24, "./$.mix": 28, "./$.same": 33, "./$.set-proto": 34, "./$.species": 36, "./$.task": 40, "./$.uid": 42, "./$.wks": 44 }], 66: [function (require, module, exports) {
            var $ = require("./$"),
                $def = require("./$.def"),
                setProto = require("./$.set-proto"),
                $iter = require("./$.iter"),
                ITERATOR = require("./$.wks")("iterator"),
                ITER = require("./$.uid").safe("iter"),
                step = $iter.step,
                assert = require("./$.assert"),
                isObject = $.isObject,
                getProto = $.getProto,
                $Reflect = $.g.Reflect,
                _apply = Function.apply,
                assertObject = assert.obj,
                _isExtensible = Object.isExtensible || isObject,
                _preventExtensions = Object.preventExtensions,
                buggyEnumerate = !($Reflect && $Reflect.enumerate && ITERATOR in $Reflect.enumerate({}));function Enumerate(iterated) {
                $.set(this, ITER, { o: iterated, k: undefined, i: 0 });
            }$iter.create(Enumerate, "Object", function () {
                var iter = this[ITER],
                    keys = iter.k,
                    key;if (keys == undefined) {
                    iter.k = keys = [];for (key in iter.o) {
                        keys.push(key);
                    }
                }do {
                    if (iter.i >= keys.length) return step(1);
                } while (!((key = keys[iter.i++]) in iter.o));return step(0, key);
            });var reflect = { apply: function apply(target, thisArgument, argumentsList) {
                    return _apply.call(target, thisArgument, argumentsList);
                }, construct: function construct(target, argumentsList) {
                    var proto = assert.fn(arguments.length < 3 ? target : arguments[2]).prototype,
                        instance = $.create(isObject(proto) ? proto : Object.prototype),
                        result = _apply.call(target, instance, argumentsList);return isObject(result) ? result : instance;
                }, defineProperty: function defineProperty(target, propertyKey, attributes) {
                    assertObject(target);try {
                        $.setDesc(target, propertyKey, attributes);return true;
                    } catch (e) {
                        return false;
                    }
                }, deleteProperty: function deleteProperty(target, propertyKey) {
                    var desc = $.getDesc(assertObject(target), propertyKey);return desc && !desc.configurable ? false : delete target[propertyKey];
                }, get: function get(target, propertyKey) {
                    var receiver = arguments.length < 3 ? target : arguments[2],
                        desc = $.getDesc(assertObject(target), propertyKey),
                        proto;if (desc) return $.has(desc, "value") ? desc.value : desc.get === undefined ? undefined : desc.get.call(receiver);return isObject(proto = getProto(target)) ? get(proto, propertyKey, receiver) : undefined;
                }, getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {
                    return $.getDesc(assertObject(target), propertyKey);
                }, getPrototypeOf: function getPrototypeOf(target) {
                    return getProto(assertObject(target));
                }, has: function has(target, propertyKey) {
                    return propertyKey in target;
                }, isExtensible: function isExtensible(target) {
                    return _isExtensible(assertObject(target));
                }, ownKeys: require("./$.own-keys"), preventExtensions: function preventExtensions(target) {
                    assertObject(target);try {
                        if (_preventExtensions) _preventExtensions(target);return true;
                    } catch (e) {
                        return false;
                    }
                }, set: function set(target, propertyKey, V) {
                    var receiver = arguments.length < 4 ? target : arguments[3],
                        ownDesc = $.getDesc(assertObject(target), propertyKey),
                        existingDescriptor,
                        proto;if (!ownDesc) {
                        if (isObject(proto = getProto(target))) {
                            return set(proto, propertyKey, V, receiver);
                        }ownDesc = $.desc(0);
                    }if ($.has(ownDesc, "value")) {
                        if (ownDesc.writable === false || !isObject(receiver)) return false;existingDescriptor = $.getDesc(receiver, propertyKey) || $.desc(0);existingDescriptor.value = V;$.setDesc(receiver, propertyKey, existingDescriptor);return true;
                    }return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);
                } };if (setProto) reflect.setPrototypeOf = function setPrototypeOf(target, proto) {
                setProto.check(target, proto);try {
                    setProto.set(target, proto);return true;
                } catch (e) {
                    return false;
                }
            };$def($def.G, { Reflect: {} });$def($def.S + $def.F * buggyEnumerate, "Reflect", { enumerate: function enumerate(target) {
                    return new Enumerate(assertObject(target));
                } });$def($def.S, "Reflect", reflect);
        }, { "./$": 26, "./$.assert": 7, "./$.def": 15, "./$.iter": 25, "./$.own-keys": 29, "./$.set-proto": 34, "./$.uid": 42, "./$.wks": 44 }], 67: [function (require, module, exports) {
            var $ = require("./$"),
                cof = require("./$.cof"),
                $RegExp = $.g.RegExp,
                Base = $RegExp,
                proto = $RegExp.prototype,
                re = /a/g,
                CORRECT_NEW = new $RegExp(re) !== re,
                ALLOWS_RE_WITH_FLAGS = function () {
                try {
                    return $RegExp(re, "i") == "/a/i";
                } catch (e) {}
            }();if ($.FW && $.DESC) {
                if (!CORRECT_NEW || !ALLOWS_RE_WITH_FLAGS) {
                    $RegExp = function RegExp(pattern, flags) {
                        var patternIsRegExp = cof(pattern) == "RegExp",
                            flagsIsUndefined = flags === undefined;if (!(this instanceof $RegExp) && patternIsRegExp && flagsIsUndefined) return pattern;return CORRECT_NEW ? new Base(patternIsRegExp && !flagsIsUndefined ? pattern.source : pattern, flags) : new Base(patternIsRegExp ? pattern.source : pattern, patternIsRegExp && flagsIsUndefined ? pattern.flags : flags);
                    };$.each.call($.getNames(Base), function (key) {
                        key in $RegExp || $.setDesc($RegExp, key, { configurable: true, get: function get() {
                                return Base[key];
                            }, set: function set(it) {
                                Base[key] = it;
                            } });
                    });proto.constructor = $RegExp;$RegExp.prototype = proto;require("./$.redef")($.g, "RegExp", $RegExp);
                }if (/./g.flags != "g") $.setDesc(proto, "flags", { configurable: true, get: require("./$.replacer")(/^.*\/(\w*)$/, "$1") });
            }require("./$.species")($RegExp);
        }, { "./$": 26, "./$.cof": 9, "./$.redef": 31, "./$.replacer": 32, "./$.species": 36 }], 68: [function (require, module, exports) {
            "use strict";
            var strong = require("./$.collection-strong");require("./$.collection")("Set", function (get) {
                return function Set() {
                    return get(this, arguments[0]);
                };
            }, { add: function add(value) {
                    return strong.def(this, value = value === 0 ? 0 : value, value);
                } }, strong);
        }, { "./$.collection": 13, "./$.collection-strong": 10 }], 69: [function (require, module, exports) {
            "use strict";
            var $def = require("./$.def"),
                $at = require("./$.string-at")(false);$def($def.P, "String", { codePointAt: function codePointAt(pos) {
                    return $at(this, pos);
                } });
        }, { "./$.def": 15, "./$.string-at": 37 }], 70: [function (require, module, exports) {
            "use strict";
            var $ = require("./$"),
                cof = require("./$.cof"),
                $def = require("./$.def"),
                toLength = $.toLength;$def($def.P + $def.F * !require("./$.throws")(function () {
                "q".endsWith(/./);
            }), "String", { endsWith: function endsWith(searchString) {
                    if (cof(searchString) == "RegExp") throw TypeError();var that = String($.assertDefined(this)),
                        endPosition = arguments[1],
                        len = toLength(that.length),
                        end = endPosition === undefined ? len : Math.min(toLength(endPosition), len);searchString += "";return that.slice(end - searchString.length, end) === searchString;
                } });
        }, { "./$": 26, "./$.cof": 9, "./$.def": 15, "./$.throws": 41 }], 71: [function (require, module, exports) {
            var $def = require("./$.def"),
                toIndex = require("./$").toIndex,
                fromCharCode = String.fromCharCode,
                $fromCodePoint = String.fromCodePoint;$def($def.S + $def.F * (!!$fromCodePoint && $fromCodePoint.length != 1), "String", { fromCodePoint: function fromCodePoint(x) {
                    var res = [],
                        len = arguments.length,
                        i = 0,
                        code;while (len > i) {
                        code = +arguments[i++];if (toIndex(code, 1114111) !== code) throw RangeError(code + " is not a valid code point");res.push(code < 65536 ? fromCharCode(code) : fromCharCode(((code -= 65536) >> 10) + 55296, code % 1024 + 56320));
                    }return res.join("");
                } });
        }, { "./$": 26, "./$.def": 15 }], 72: [function (require, module, exports) {
            "use strict";
            var $ = require("./$"),
                cof = require("./$.cof"),
                $def = require("./$.def");$def($def.P, "String", { includes: function includes(searchString) {
                    if (cof(searchString) == "RegExp") throw TypeError();return !!~String($.assertDefined(this)).indexOf(searchString, arguments[1]);
                } });
        }, { "./$": 26, "./$.cof": 9, "./$.def": 15 }], 73: [function (require, module, exports) {
            var set = require("./$").set,
                $at = require("./$.string-at")(true),
                ITER = require("./$.uid").safe("iter"),
                $iter = require("./$.iter"),
                step = $iter.step;require("./$.iter-define")(String, "String", function (iterated) {
                set(this, ITER, { o: String(iterated), i: 0 });
            }, function () {
                var iter = this[ITER],
                    O = iter.o,
                    index = iter.i,
                    point;if (index >= O.length) return step(1);point = $at(O, index);iter.i += point.length;return step(0, point);
            });
        }, { "./$": 26, "./$.iter": 25, "./$.iter-define": 23, "./$.string-at": 37, "./$.uid": 42 }], 74: [function (require, module, exports) {
            var $ = require("./$"),
                $def = require("./$.def");$def($def.S, "String", { raw: function raw(callSite) {
                    var tpl = $.toObject(callSite.raw),
                        len = $.toLength(tpl.length),
                        sln = arguments.length,
                        res = [],
                        i = 0;while (len > i) {
                        res.push(String(tpl[i++]));if (i < sln) res.push(String(arguments[i]));
                    }return res.join("");
                } });
        }, { "./$": 26, "./$.def": 15 }], 75: [function (require, module, exports) {
            var $def = require("./$.def");$def($def.P, "String", { repeat: require("./$.string-repeat") });
        }, { "./$.def": 15, "./$.string-repeat": 39 }], 76: [function (require, module, exports) {
            "use strict";
            var $ = require("./$"),
                cof = require("./$.cof"),
                $def = require("./$.def");$def($def.P + $def.F * !require("./$.throws")(function () {
                "q".startsWith(/./);
            }), "String", { startsWith: function startsWith(searchString) {
                    if (cof(searchString) == "RegExp") throw TypeError();var that = String($.assertDefined(this)),
                        index = $.toLength(Math.min(arguments[1], that.length));searchString += "";return that.slice(index, index + searchString.length) === searchString;
                } });
        }, { "./$": 26, "./$.cof": 9, "./$.def": 15, "./$.throws": 41 }], 77: [function (require, module, exports) {
            "use strict";
            var $ = require("./$"),
                setTag = require("./$.cof").set,
                uid = require("./$.uid"),
                shared = require("./$.shared"),
                $def = require("./$.def"),
                $redef = require("./$.redef"),
                keyOf = require("./$.keyof"),
                enumKeys = require("./$.enum-keys"),
                assertObject = require("./$.assert").obj,
                ObjectProto = Object.prototype,
                DESC = $.DESC,
                has = $.has,
                $create = $.create,
                getDesc = $.getDesc,
                setDesc = $.setDesc,
                desc = $.desc,
                $names = require("./$.get-names"),
                getNames = $names.get,
                toObject = $.toObject,
                $Symbol = $.g.Symbol,
                setter = false,
                TAG = uid("tag"),
                HIDDEN = uid("hidden"),
                _propertyIsEnumerable = {}.propertyIsEnumerable,
                SymbolRegistry = shared("symbol-registry"),
                AllSymbols = shared("symbols"),
                useNative = $.isFunction($Symbol);var setSymbolDesc = DESC ? function () {
                try {
                    return $create(setDesc({}, HIDDEN, { get: function get() {
                            return setDesc(this, HIDDEN, { value: false })[HIDDEN];
                        } }))[HIDDEN] || setDesc;
                } catch (e) {
                    return function (it, key, D) {
                        var protoDesc = getDesc(ObjectProto, key);if (protoDesc) delete ObjectProto[key];setDesc(it, key, D);if (protoDesc && it !== ObjectProto) setDesc(ObjectProto, key, protoDesc);
                    };
                }
            }() : setDesc;function wrap(tag) {
                var sym = AllSymbols[tag] = $.set($create($Symbol.prototype), TAG, tag);DESC && setter && setSymbolDesc(ObjectProto, tag, { configurable: true, set: function set(value) {
                        if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;setSymbolDesc(this, tag, desc(1, value));
                    } });return sym;
            }function defineProperty(it, key, D) {
                if (D && has(AllSymbols, key)) {
                    if (!D.enumerable) {
                        if (!has(it, HIDDEN)) setDesc(it, HIDDEN, desc(1, {}));it[HIDDEN][key] = true;
                    } else {
                        if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;D = $create(D, { enumerable: desc(0, false) });
                    }return setSymbolDesc(it, key, D);
                }return setDesc(it, key, D);
            }function defineProperties(it, P) {
                assertObject(it);var keys = enumKeys(P = toObject(P)),
                    i = 0,
                    l = keys.length,
                    key;while (l > i) {
                    defineProperty(it, key = keys[i++], P[key]);
                }return it;
            }function create(it, P) {
                return P === undefined ? $create(it) : defineProperties($create(it), P);
            }function propertyIsEnumerable(key) {
                var E = _propertyIsEnumerable.call(this, key);return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
            }function getOwnPropertyDescriptor(it, key) {
                var D = getDesc(it = toObject(it), key);if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;return D;
            }function getOwnPropertyNames(it) {
                var names = getNames(toObject(it)),
                    result = [],
                    i = 0,
                    key;while (names.length > i) {
                    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN) result.push(key);
                }return result;
            }function getOwnPropertySymbols(it) {
                var names = getNames(toObject(it)),
                    result = [],
                    i = 0,
                    key;while (names.length > i) {
                    if (has(AllSymbols, key = names[i++])) result.push(AllSymbols[key]);
                }return result;
            }if (!useNative) {
                $Symbol = function _Symbol3() {
                    if (this instanceof $Symbol) throw TypeError("Symbol is not a constructor");return wrap(uid(arguments[0]));
                };$redef($Symbol.prototype, "toString", function () {
                    return this[TAG];
                });$.create = create;$.setDesc = defineProperty;$.getDesc = getOwnPropertyDescriptor;$.setDescs = defineProperties;$.getNames = $names.get = getOwnPropertyNames;$.getSymbols = getOwnPropertySymbols;if ($.DESC && $.FW) $redef(ObjectProto, "propertyIsEnumerable", propertyIsEnumerable, true);
            }var symbolStatics = { "for": function _for(key) {
                    return has(SymbolRegistry, key += "") ? SymbolRegistry[key] : SymbolRegistry[key] = $Symbol(key);
                }, keyFor: function keyFor(key) {
                    return keyOf(SymbolRegistry, key);
                }, useSetter: function useSetter() {
                    setter = true;
                }, useSimple: function useSimple() {
                    setter = false;
                } };$.each.call(("hasInstance,isConcatSpreadable,iterator,match,replace,search," + "species,split,toPrimitive,toStringTag,unscopables").split(","), function (it) {
                var sym = require("./$.wks")(it);symbolStatics[it] = useNative ? sym : wrap(sym);
            });setter = true;$def($def.G + $def.W, { Symbol: $Symbol });$def($def.S, "Symbol", symbolStatics);$def($def.S + $def.F * !useNative, "Object", { create: create, defineProperty: defineProperty, defineProperties: defineProperties, getOwnPropertyDescriptor: getOwnPropertyDescriptor, getOwnPropertyNames: getOwnPropertyNames, getOwnPropertySymbols: getOwnPropertySymbols });setTag($Symbol, "Symbol");setTag(Math, "Math", true);setTag($.g.JSON, "JSON", true);
        }, { "./$": 26, "./$.assert": 7, "./$.cof": 9, "./$.def": 15, "./$.enum-keys": 17, "./$.get-names": 20, "./$.keyof": 27, "./$.redef": 31, "./$.shared": 35, "./$.uid": 42, "./$.wks": 44 }], 78: [function (require, module, exports) {
            "use strict";
            var $ = require("./$"),
                weak = require("./$.collection-weak"),
                leakStore = weak.leakStore,
                ID = weak.ID,
                WEAK = weak.WEAK,
                has = $.has,
                isObject = $.isObject,
                isExtensible = Object.isExtensible || isObject,
                tmp = {};var $WeakMap = require("./$.collection")("WeakMap", function (get) {
                return function WeakMap() {
                    return get(this, arguments[0]);
                };
            }, { get: function get(key) {
                    if (isObject(key)) {
                        if (!isExtensible(key)) return leakStore(this).get(key);if (has(key, WEAK)) return key[WEAK][this[ID]];
                    }
                }, set: function set(key, value) {
                    return weak.def(this, key, value);
                } }, weak, true, true);if (new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7) {
                $.each.call(["delete", "has", "get", "set"], function (key) {
                    var proto = $WeakMap.prototype,
                        method = proto[key];require("./$.redef")(proto, key, function (a, b) {
                        if (isObject(a) && !isExtensible(a)) {
                            var result = leakStore(this)[key](a, b);return key == "set" ? this : result;
                        }return method.call(this, a, b);
                    });
                });
            }
        }, { "./$": 26, "./$.collection": 13, "./$.collection-weak": 12, "./$.redef": 31 }], 79: [function (require, module, exports) {
            "use strict";
            var weak = require("./$.collection-weak");require("./$.collection")("WeakSet", function (get) {
                return function WeakSet() {
                    return get(this, arguments[0]);
                };
            }, { add: function add(value) {
                    return weak.def(this, value, true);
                } }, weak, false, true);
        }, { "./$.collection": 13, "./$.collection-weak": 12 }], 80: [function (require, module, exports) {
            "use strict";
            var $def = require("./$.def"),
                $includes = require("./$.array-includes")(true);$def($def.P, "Array", { includes: function includes(el) {
                    return $includes(this, el, arguments[1]);
                } });require("./$.unscope")("includes");
        }, { "./$.array-includes": 5, "./$.def": 15, "./$.unscope": 43 }], 81: [function (require, module, exports) {
            require("./$.collection-to-json")("Map");
        }, { "./$.collection-to-json": 11 }], 82: [function (require, module, exports) {
            var $ = require("./$"),
                $def = require("./$.def"),
                ownKeys = require("./$.own-keys");$def($def.S, "Object", { getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
                    var O = $.toObject(object),
                        result = {};$.each.call(ownKeys(O), function (key) {
                        $.setDesc(result, key, $.desc(0, $.getDesc(O, key)));
                    });return result;
                } });
        }, { "./$": 26, "./$.def": 15, "./$.own-keys": 29 }], 83: [function (require, module, exports) {
            var $ = require("./$"),
                $def = require("./$.def");function createObjectToArray(isEntries) {
                return function (object) {
                    var O = $.toObject(object),
                        keys = $.getKeys(O),
                        length = keys.length,
                        i = 0,
                        result = Array(length),
                        key;if (isEntries) while (length > i) {
                        result[i] = [key = keys[i++], O[key]];
                    } else while (length > i) {
                        result[i] = O[keys[i++]];
                    }return result;
                };
            }$def($def.S, "Object", { values: createObjectToArray(false), entries: createObjectToArray(true) });
        }, { "./$": 26, "./$.def": 15 }], 84: [function (require, module, exports) {
            var $def = require("./$.def");$def($def.S, "RegExp", { escape: require("./$.replacer")(/[\\^$*+?.()|[\]{}]/g, "\\$&", true) });
        }, { "./$.def": 15, "./$.replacer": 32 }], 85: [function (require, module, exports) {
            require("./$.collection-to-json")("Set");
        }, { "./$.collection-to-json": 11 }], 86: [function (require, module, exports) {
            "use strict";
            var $def = require("./$.def"),
                $at = require("./$.string-at")(true);$def($def.P, "String", { at: function at(pos) {
                    return $at(this, pos);
                } });
        }, { "./$.def": 15, "./$.string-at": 37 }], 87: [function (require, module, exports) {
            "use strict";
            var $def = require("./$.def"),
                $pad = require("./$.string-pad");$def($def.P, "String", { lpad: function lpad(n) {
                    return $pad(this, n, arguments[1], true);
                } });
        }, { "./$.def": 15, "./$.string-pad": 38 }], 88: [function (require, module, exports) {
            "use strict";
            var $def = require("./$.def"),
                $pad = require("./$.string-pad");$def($def.P, "String", { rpad: function rpad(n) {
                    return $pad(this, n, arguments[1], false);
                } });
        }, { "./$.def": 15, "./$.string-pad": 38 }], 89: [function (require, module, exports) {
            var $ = require("./$"),
                $def = require("./$.def"),
                $Array = $.core.Array || Array,
                statics = {};function setStatics(keys, length) {
                $.each.call(keys.split(","), function (key) {
                    if (length == undefined && key in $Array) statics[key] = $Array[key];else if (key in []) statics[key] = require("./$.ctx")(Function.call, [][key], length);
                });
            }setStatics("pop,reverse,shift,keys,values,entries", 1);setStatics("indexOf,every,some,forEach,map,filter,find,findIndex,includes", 3);setStatics("join,slice,concat,push,splice,unshift,sort,lastIndexOf," + "reduce,reduceRight,copyWithin,fill,turn");$def($def.S, "Array", statics);
        }, { "./$": 26, "./$.ctx": 14, "./$.def": 15 }], 90: [function (require, module, exports) {
            require("./es6.array.iterator");var $ = require("./$"),
                Iterators = require("./$.iter").Iterators,
                ITERATOR = require("./$.wks")("iterator"),
                ArrayValues = Iterators.Array,
                NL = $.g.NodeList,
                HTC = $.g.HTMLCollection,
                NLProto = NL && NL.prototype,
                HTCProto = HTC && HTC.prototype;if ($.FW) {
                if (NL && !(ITERATOR in NLProto)) $.hide(NLProto, ITERATOR, ArrayValues);if (HTC && !(ITERATOR in HTCProto)) $.hide(HTCProto, ITERATOR, ArrayValues);
            }Iterators.NodeList = Iterators.HTMLCollection = ArrayValues;
        }, { "./$": 26, "./$.iter": 25, "./$.wks": 44, "./es6.array.iterator": 51 }], 91: [function (require, module, exports) {
            var $def = require("./$.def"),
                $task = require("./$.task");$def($def.G + $def.B, { setImmediate: $task.set, clearImmediate: $task.clear });
        }, { "./$.def": 15, "./$.task": 40 }], 92: [function (require, module, exports) {
            var $ = require("./$"),
                $def = require("./$.def"),
                invoke = require("./$.invoke"),
                partial = require("./$.partial"),
                navigator = $.g.navigator,
                MSIE = !!navigator && /MSIE .\./.test(navigator.userAgent);function wrap(set) {
                return MSIE ? function (fn, time) {
                    return set(invoke(partial, [].slice.call(arguments, 2), $.isFunction(fn) ? fn : Function(fn)), time);
                } : set;
            }$def($def.G + $def.B + $def.F * MSIE, { setTimeout: wrap($.g.setTimeout), setInterval: wrap($.g.setInterval) });
        }, { "./$": 26, "./$.def": 15, "./$.invoke": 21, "./$.partial": 30 }], 93: [function (require, module, exports) {
            require("./modules/es5");require("./modules/es6.symbol");require("./modules/es6.object.assign");require("./modules/es6.object.is");require("./modules/es6.object.set-prototype-of");require("./modules/es6.object.to-string");require("./modules/es6.object.statics-accept-primitives");require("./modules/es6.function.name");require("./modules/es6.function.has-instance");require("./modules/es6.number.constructor");require("./modules/es6.number.statics");require("./modules/es6.math");require("./modules/es6.string.from-code-point");require("./modules/es6.string.raw");require("./modules/es6.string.iterator");require("./modules/es6.string.code-point-at");require("./modules/es6.string.ends-with");require("./modules/es6.string.includes");require("./modules/es6.string.repeat");require("./modules/es6.string.starts-with");require("./modules/es6.array.from");require("./modules/es6.array.of");require("./modules/es6.array.iterator");require("./modules/es6.array.species");require("./modules/es6.array.copy-within");require("./modules/es6.array.fill");require("./modules/es6.array.find");require("./modules/es6.array.find-index");require("./modules/es6.regexp");require("./modules/es6.promise");require("./modules/es6.map");require("./modules/es6.set");require("./modules/es6.weak-map");require("./modules/es6.weak-set");require("./modules/es6.reflect");require("./modules/es7.array.includes");require("./modules/es7.string.at");require("./modules/es7.string.lpad");require("./modules/es7.string.rpad");require("./modules/es7.regexp.escape");require("./modules/es7.object.get-own-property-descriptors");require("./modules/es7.object.to-array");require("./modules/es7.map.to-json");require("./modules/es7.set.to-json");require("./modules/js.array.statics");require("./modules/web.timers");require("./modules/web.immediate");require("./modules/web.dom.iterable");module.exports = require("./modules/$").core;
        }, { "./modules/$": 26, "./modules/es5": 45, "./modules/es6.array.copy-within": 46, "./modules/es6.array.fill": 47, "./modules/es6.array.find": 49, "./modules/es6.array.find-index": 48, "./modules/es6.array.from": 50, "./modules/es6.array.iterator": 51, "./modules/es6.array.of": 52, "./modules/es6.array.species": 53, "./modules/es6.function.has-instance": 54, "./modules/es6.function.name": 55, "./modules/es6.map": 56, "./modules/es6.math": 57, "./modules/es6.number.constructor": 58, "./modules/es6.number.statics": 59, "./modules/es6.object.assign": 60, "./modules/es6.object.is": 61, "./modules/es6.object.set-prototype-of": 62, "./modules/es6.object.statics-accept-primitives": 63, "./modules/es6.object.to-string": 64, "./modules/es6.promise": 65, "./modules/es6.reflect": 66, "./modules/es6.regexp": 67, "./modules/es6.set": 68, "./modules/es6.string.code-point-at": 69, "./modules/es6.string.ends-with": 70, "./modules/es6.string.from-code-point": 71, "./modules/es6.string.includes": 72, "./modules/es6.string.iterator": 73, "./modules/es6.string.raw": 74, "./modules/es6.string.repeat": 75, "./modules/es6.string.starts-with": 76, "./modules/es6.symbol": 77, "./modules/es6.weak-map": 78, "./modules/es6.weak-set": 79, "./modules/es7.array.includes": 80, "./modules/es7.map.to-json": 81, "./modules/es7.object.get-own-property-descriptors": 82, "./modules/es7.object.to-array": 83, "./modules/es7.regexp.escape": 84, "./modules/es7.set.to-json": 85, "./modules/es7.string.at": 86, "./modules/es7.string.lpad": 87, "./modules/es7.string.rpad": 88, "./modules/js.array.statics": 89, "./modules/web.dom.iterable": 90, "./modules/web.immediate": 91, "./modules/web.timers": 92 }], 94: [function (require, module, exports) {
            (function (process, global) {
                !function (global) {
                    "use strict";
                    var hasOwn = Object.prototype.hasOwnProperty;var undefined;var iteratorSymbol = typeof Symbol === "function" && Symbol.iterator || "@@iterator";var inModule = (typeof module === 'undefined' ? 'undefined' : _typeof(module)) === "object";var runtime = global.regeneratorRuntime;if (runtime) {
                        if (inModule) {
                            module.exports = runtime;
                        }return;
                    }runtime = global.regeneratorRuntime = inModule ? module.exports : {};function wrap(innerFn, outerFn, self, tryLocsList) {
                        var generator = Object.create((outerFn || Generator).prototype);generator._invoke = makeInvokeMethod(innerFn, self || null, new Context(tryLocsList || []));return generator;
                    }runtime.wrap = wrap;function tryCatch(fn, obj, arg) {
                        try {
                            return { type: "normal", arg: fn.call(obj, arg) };
                        } catch (err) {
                            return { type: "throw", arg: err };
                        }
                    }var GenStateSuspendedStart = "suspendedStart";var GenStateSuspendedYield = "suspendedYield";var GenStateExecuting = "executing";var GenStateCompleted = "completed";var ContinueSentinel = {};function Generator() {}function GeneratorFunction() {}function GeneratorFunctionPrototype() {}var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype;GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;GeneratorFunctionPrototype.constructor = GeneratorFunction;GeneratorFunction.displayName = "GeneratorFunction";function defineIteratorMethods(prototype) {
                        ["next", "throw", "return"].forEach(function (method) {
                            prototype[method] = function (arg) {
                                return this._invoke(method, arg);
                            };
                        });
                    }runtime.isGeneratorFunction = function (genFun) {
                        var ctor = typeof genFun === "function" && genFun.constructor;return ctor ? ctor === GeneratorFunction || (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
                    };runtime.mark = function (genFun) {
                        genFun.__proto__ = GeneratorFunctionPrototype;genFun.prototype = Object.create(Gp);return genFun;
                    };runtime.awrap = function (arg) {
                        return new AwaitArgument(arg);
                    };function AwaitArgument(arg) {
                        this.arg = arg;
                    }function AsyncIterator(generator) {
                        function invoke(method, arg) {
                            var result = generator[method](arg);var value = result.value;return value instanceof AwaitArgument ? Promise.resolve(value.arg).then(invokeNext, invokeThrow) : Promise.resolve(value).then(function (unwrapped) {
                                result.value = unwrapped;return result;
                            }, invokeThrow);
                        }if ((typeof process === 'undefined' ? 'undefined' : _typeof(process)) === "object" && process.domain) {
                            invoke = process.domain.bind(invoke);
                        }var invokeNext = invoke.bind(generator, "next");var invokeThrow = invoke.bind(generator, "throw");var invokeReturn = invoke.bind(generator, "return");var previousPromise;function enqueue(method, arg) {
                            var enqueueResult = previousPromise ? previousPromise.then(function () {
                                return invoke(method, arg);
                            }) : new Promise(function (resolve) {
                                resolve(invoke(method, arg));
                            });previousPromise = enqueueResult["catch"](invokeReturn);return enqueueResult;
                        }this._invoke = enqueue;
                    }defineIteratorMethods(AsyncIterator.prototype);runtime.async = function (innerFn, outerFn, self, tryLocsList) {
                        var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));return runtime.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {
                            return result.done ? result.value : iter.next();
                        });
                    };function makeInvokeMethod(innerFn, self, context) {
                        var state = GenStateSuspendedStart;return function invoke(method, arg) {
                            if (state === GenStateExecuting) {
                                throw new Error("Generator is already running");
                            }if (state === GenStateCompleted) {
                                return doneResult();
                            }while (true) {
                                var delegate = context.delegate;if (delegate) {
                                    if (method === "return" || method === "throw" && delegate.iterator[method] === undefined) {
                                        context.delegate = null;var returnMethod = delegate.iterator["return"];if (returnMethod) {
                                            var record = tryCatch(returnMethod, delegate.iterator, arg);if (record.type === "throw") {
                                                method = "throw";arg = record.arg;continue;
                                            }
                                        }if (method === "return") {
                                            continue;
                                        }
                                    }var record = tryCatch(delegate.iterator[method], delegate.iterator, arg);if (record.type === "throw") {
                                        context.delegate = null;method = "throw";arg = record.arg;continue;
                                    }method = "next";arg = undefined;var info = record.arg;if (info.done) {
                                        context[delegate.resultName] = info.value;context.next = delegate.nextLoc;
                                    } else {
                                        state = GenStateSuspendedYield;return info;
                                    }context.delegate = null;
                                }if (method === "next") {
                                    if (state === GenStateSuspendedYield) {
                                        context.sent = arg;
                                    } else {
                                        delete context.sent;
                                    }
                                } else if (method === "throw") {
                                    if (state === GenStateSuspendedStart) {
                                        state = GenStateCompleted;throw arg;
                                    }if (context.dispatchException(arg)) {
                                        method = "next";arg = undefined;
                                    }
                                } else if (method === "return") {
                                    context.abrupt("return", arg);
                                }state = GenStateExecuting;var record = tryCatch(innerFn, self, context);if (record.type === "normal") {
                                    state = context.done ? GenStateCompleted : GenStateSuspendedYield;var info = { value: record.arg, done: context.done };if (record.arg === ContinueSentinel) {
                                        if (context.delegate && method === "next") {
                                            arg = undefined;
                                        }
                                    } else {
                                        return info;
                                    }
                                } else if (record.type === "throw") {
                                    state = GenStateCompleted;method = "throw";arg = record.arg;
                                }
                            }
                        };
                    }defineIteratorMethods(Gp);Gp[iteratorSymbol] = function () {
                        return this;
                    };Gp.toString = function () {
                        return "[object Generator]";
                    };function pushTryEntry(locs) {
                        var entry = { tryLoc: locs[0] };if (1 in locs) {
                            entry.catchLoc = locs[1];
                        }if (2 in locs) {
                            entry.finallyLoc = locs[2];entry.afterLoc = locs[3];
                        }this.tryEntries.push(entry);
                    }function resetTryEntry(entry) {
                        var record = entry.completion || {};record.type = "normal";delete record.arg;entry.completion = record;
                    }function Context(tryLocsList) {
                        this.tryEntries = [{ tryLoc: "root" }];tryLocsList.forEach(pushTryEntry, this);this.reset();
                    }runtime.keys = function (object) {
                        var keys = [];for (var key in object) {
                            keys.push(key);
                        }keys.reverse();return function next() {
                            while (keys.length) {
                                var key = keys.pop();if (key in object) {
                                    next.value = key;next.done = false;return next;
                                }
                            }next.done = true;return next;
                        };
                    };function values(iterable) {
                        if (iterable) {
                            var iteratorMethod = iterable[iteratorSymbol];if (iteratorMethod) {
                                return iteratorMethod.call(iterable);
                            }if (typeof iterable.next === "function") {
                                return iterable;
                            }if (!isNaN(iterable.length)) {
                                var i = -1,
                                    next = function next() {
                                    while (++i < iterable.length) {
                                        if (hasOwn.call(iterable, i)) {
                                            next.value = iterable[i];next.done = false;return next;
                                        }
                                    }next.value = undefined;next.done = true;return next;
                                };return next.next = next;
                            }
                        }return { next: doneResult };
                    }runtime.values = values;function doneResult() {
                        return { value: undefined, done: true };
                    }Context.prototype = { constructor: Context, reset: function reset() {
                            this.prev = 0;this.next = 0;this.sent = undefined;this.done = false;this.delegate = null;this.tryEntries.forEach(resetTryEntry);for (var tempIndex = 0, tempName; hasOwn.call(this, tempName = "t" + tempIndex) || tempIndex < 20; ++tempIndex) {
                                this[tempName] = null;
                            }
                        }, stop: function stop() {
                            this.done = true;var rootEntry = this.tryEntries[0];var rootRecord = rootEntry.completion;if (rootRecord.type === "throw") {
                                throw rootRecord.arg;
                            }return this.rval;
                        }, dispatchException: function dispatchException(exception) {
                            if (this.done) {
                                throw exception;
                            }var context = this;function handle(loc, caught) {
                                record.type = "throw";record.arg = exception;context.next = loc;return !!caught;
                            }for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                                var entry = this.tryEntries[i];var record = entry.completion;if (entry.tryLoc === "root") {
                                    return handle("end");
                                }if (entry.tryLoc <= this.prev) {
                                    var hasCatch = hasOwn.call(entry, "catchLoc");var hasFinally = hasOwn.call(entry, "finallyLoc");if (hasCatch && hasFinally) {
                                        if (this.prev < entry.catchLoc) {
                                            return handle(entry.catchLoc, true);
                                        } else if (this.prev < entry.finallyLoc) {
                                            return handle(entry.finallyLoc);
                                        }
                                    } else if (hasCatch) {
                                        if (this.prev < entry.catchLoc) {
                                            return handle(entry.catchLoc, true);
                                        }
                                    } else if (hasFinally) {
                                        if (this.prev < entry.finallyLoc) {
                                            return handle(entry.finallyLoc);
                                        }
                                    } else {
                                        throw new Error("try statement without catch or finally");
                                    }
                                }
                            }
                        }, abrupt: function abrupt(type, arg) {
                            for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                                var entry = this.tryEntries[i];if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
                                    var finallyEntry = entry;break;
                                }
                            }if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
                                finallyEntry = null;
                            }var record = finallyEntry ? finallyEntry.completion : {};record.type = type;record.arg = arg;if (finallyEntry) {
                                this.next = finallyEntry.finallyLoc;
                            } else {
                                this.complete(record);
                            }return ContinueSentinel;
                        }, complete: function complete(record, afterLoc) {
                            if (record.type === "throw") {
                                throw record.arg;
                            }if (record.type === "break" || record.type === "continue") {
                                this.next = record.arg;
                            } else if (record.type === "return") {
                                this.rval = record.arg;this.next = "end";
                            } else if (record.type === "normal" && afterLoc) {
                                this.next = afterLoc;
                            }
                        }, finish: function finish(finallyLoc) {
                            for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                                var entry = this.tryEntries[i];if (entry.finallyLoc === finallyLoc) {
                                    this.complete(entry.completion, entry.afterLoc);resetTryEntry(entry);return ContinueSentinel;
                                }
                            }
                        }, "catch": function _catch(tryLoc) {
                            for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                                var entry = this.tryEntries[i];if (entry.tryLoc === tryLoc) {
                                    var record = entry.completion;if (record.type === "throw") {
                                        var thrown = record.arg;resetTryEntry(entry);
                                    }return thrown;
                                }
                            }throw new Error("illegal catch attempt");
                        }, delegateYield: function delegateYield(iterable, resultName, nextLoc) {
                            this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc };return ContinueSentinel;
                        } };
                }((typeof global === 'undefined' ? 'undefined' : _typeof(global)) === "object" ? global : (typeof window === 'undefined' ? 'undefined' : _typeof(window)) === "object" ? window : (typeof self === 'undefined' ? 'undefined' : _typeof(self)) === "object" ? self : this);
            }).call(this, require("_process"), typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {});
        }, { _process: 4 }] }, {}, [1]);
}

function initExtraPlugins() {
    /*! jQuery UI - v1.10.3 - 2013-12-20
    * http://jqueryui.com
    * Includes: jquery.ui.widget.js
    * Copyright 2013 jQuery Foundation and other contributors; Licensed MIT */
    (function (e, t) {
        var i = 0,
            s = Array.prototype.slice,
            a = e.cleanData;e.cleanData = function (t) {
            for (var i, s = 0; null != (i = t[s]); s++) {
                try {
                    e(i).triggerHandler("remove");
                } catch (n) {}
            }a(t);
        }, e.widget = function (i, s, a) {
            var n,
                r,
                o,
                h,
                l = {},
                u = i.split(".")[0];i = i.split(".")[1], n = u + "-" + i, a || (a = s, s = e.Widget), e.expr[":"][n.toLowerCase()] = function (t) {
                return !!e.data(t, n);
            }, e[u] = e[u] || {}, r = e[u][i], o = e[u][i] = function (e, i) {
                return this._createWidget ? (arguments.length && this._createWidget(e, i), t) : new o(e, i);
            }, e.extend(o, r, { version: a.version, _proto: e.extend({}, a), _childConstructors: [] }), h = new s(), h.options = e.widget.extend({}, h.options), e.each(a, function (i, a) {
                return e.isFunction(a) ? (l[i] = function () {
                    var e = function e() {
                        return s.prototype[i].apply(this, arguments);
                    },
                        t = function t(e) {
                        return s.prototype[i].apply(this, e);
                    };return function () {
                        var i,
                            s = this._super,
                            n = this._superApply;return this._super = e, this._superApply = t, i = a.apply(this, arguments), this._super = s, this._superApply = n, i;
                    };
                }(), t) : (l[i] = a, t);
            }), o.prototype = e.widget.extend(h, { widgetEventPrefix: r ? h.widgetEventPrefix : i }, l, { constructor: o, namespace: u, widgetName: i, widgetFullName: n }), r ? (e.each(r._childConstructors, function (t, i) {
                var s = i.prototype;e.widget(s.namespace + "." + s.widgetName, o, i._proto);
            }), delete r._childConstructors) : s._childConstructors.push(o), e.widget.bridge(i, o);
        }, e.widget.extend = function (i) {
            for (var a, n, r = s.call(arguments, 1), o = 0, h = r.length; h > o; o++) {
                for (a in r[o]) {
                    n = r[o][a], r[o].hasOwnProperty(a) && n !== t && (i[a] = e.isPlainObject(n) ? e.isPlainObject(i[a]) ? e.widget.extend({}, i[a], n) : e.widget.extend({}, n) : n);
                }
            }return i;
        }, e.widget.bridge = function (i, a) {
            var n = a.prototype.widgetFullName || i;e.fn[i] = function (r) {
                var o = "string" == typeof r,
                    h = s.call(arguments, 1),
                    l = this;return r = !o && h.length ? e.widget.extend.apply(null, [r].concat(h)) : r, o ? this.each(function () {
                    var s,
                        a = e.data(this, n);return a ? e.isFunction(a[r]) && "_" !== r.charAt(0) ? (s = a[r].apply(a, h), s !== a && s !== t ? (l = s && s.jquery ? l.pushStack(s.get()) : s, !1) : t) : e.error("no such method '" + r + "' for " + i + " widget instance") : e.error("cannot call methods on " + i + " prior to initialization; " + "attempted to call method '" + r + "'");
                }) : this.each(function () {
                    var t = e.data(this, n);t ? t.option(r || {})._init() : e.data(this, n, new a(r, this));
                }), l;
            };
        }, e.Widget = function () {}, e.Widget._childConstructors = [], e.Widget.prototype = { widgetName: "widget", widgetEventPrefix: "", defaultElement: "<div>", options: { disabled: !1, create: null }, _createWidget: function _createWidget(t, s) {
                s = e(s || this.defaultElement || this)[0], this.element = e(s), this.uuid = i++, this.eventNamespace = "." + this.widgetName + this.uuid, this.options = e.widget.extend({}, this.options, this._getCreateOptions(), t), this.bindings = e(), this.hoverable = e(), this.focusable = e(), s !== this && (e.data(s, this.widgetFullName, this), this._on(!0, this.element, { remove: function remove(e) {
                        e.target === s && this.destroy();
                    } }), this.document = e(s.style ? s.ownerDocument : s.document || s), this.window = e(this.document[0].defaultView || this.document[0].parentWindow)), this._create(), this._trigger("create", null, this._getCreateEventData()), this._init();
            }, _getCreateOptions: e.noop, _getCreateEventData: e.noop, _create: e.noop, _init: e.noop, destroy: function destroy() {
                this._destroy(), this.element.unbind(this.eventNamespace).removeData(this.widgetName).removeData(this.widgetFullName).removeData(e.camelCase(this.widgetFullName)), this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName + "-disabled " + "ui-state-disabled"), this.bindings.unbind(this.eventNamespace), this.hoverable.removeClass("ui-state-hover"), this.focusable.removeClass("ui-state-focus");
            }, _destroy: e.noop, widget: function widget() {
                return this.element;
            }, option: function option(i, s) {
                var a,
                    n,
                    r,
                    o = i;if (0 === arguments.length) return e.widget.extend({}, this.options);if ("string" == typeof i) if (o = {}, a = i.split("."), i = a.shift(), a.length) {
                    for (n = o[i] = e.widget.extend({}, this.options[i]), r = 0; a.length - 1 > r; r++) {
                        n[a[r]] = n[a[r]] || {}, n = n[a[r]];
                    }if (i = a.pop(), s === t) return n[i] === t ? null : n[i];n[i] = s;
                } else {
                    if (s === t) return this.options[i] === t ? null : this.options[i];o[i] = s;
                }return this._setOptions(o), this;
            }, _setOptions: function _setOptions(e) {
                var t;for (t in e) {
                    this._setOption(t, e[t]);
                }return this;
            }, _setOption: function _setOption(e, t) {
                return this.options[e] = t, "disabled" === e && (this.widget().toggleClass(this.widgetFullName + "-disabled ui-state-disabled", !!t).attr("aria-disabled", t), this.hoverable.removeClass("ui-state-hover"), this.focusable.removeClass("ui-state-focus")), this;
            }, enable: function enable() {
                return this._setOption("disabled", !1);
            }, disable: function disable() {
                return this._setOption("disabled", !0);
            }, _on: function _on(i, s, a) {
                var n,
                    r = this;"boolean" != typeof i && (a = s, s = i, i = !1), a ? (s = n = e(s), this.bindings = this.bindings.add(s)) : (a = s, s = this.element, n = this.widget()), e.each(a, function (a, o) {
                    function h() {
                        return i || r.options.disabled !== !0 && !e(this).hasClass("ui-state-disabled") ? ("string" == typeof o ? r[o] : o).apply(r, arguments) : t;
                    }"string" != typeof o && (h.guid = o.guid = o.guid || h.guid || e.guid++);var l = a.match(/^(\w+)\s*(.*)$/),
                        u = l[1] + r.eventNamespace,
                        c = l[2];c ? n.delegate(c, u, h) : s.bind(u, h);
                });
            }, _off: function _off(e, t) {
                t = (t || "").split(" ").join(this.eventNamespace + " ") + this.eventNamespace, e.unbind(t).undelegate(t);
            }, _delay: function _delay(e, t) {
                function i() {
                    return ("string" == typeof e ? s[e] : e).apply(s, arguments);
                }var s = this;return setTimeout(i, t || 0);
            }, _hoverable: function _hoverable(t) {
                this.hoverable = this.hoverable.add(t), this._on(t, { mouseenter: function mouseenter(t) {
                        e(t.currentTarget).addClass("ui-state-hover");
                    }, mouseleave: function mouseleave(t) {
                        e(t.currentTarget).removeClass("ui-state-hover");
                    } });
            }, _focusable: function _focusable(t) {
                this.focusable = this.focusable.add(t), this._on(t, { focusin: function focusin(t) {
                        e(t.currentTarget).addClass("ui-state-focus");
                    }, focusout: function focusout(t) {
                        e(t.currentTarget).removeClass("ui-state-focus");
                    } });
            }, _trigger: function _trigger(t, i, s) {
                var a,
                    n,
                    r = this.options[t];if (s = s || {}, i = e.Event(i), i.type = (t === this.widgetEventPrefix ? t : this.widgetEventPrefix + t).toLowerCase(), i.target = this.element[0], n = i.originalEvent) for (a in n) {
                    a in i || (i[a] = n[a]);
                }return this.element.trigger(i, s), !(e.isFunction(r) && r.apply(this.element[0], [i].concat(s)) === !1 || i.isDefaultPrevented());
            } }, e.each({ show: "fadeIn", hide: "fadeOut" }, function (t, i) {
            e.Widget.prototype["_" + t] = function (s, a, n) {
                "string" == typeof a && (a = { effect: a });var r,
                    o = a ? a === !0 || "number" == typeof a ? i : a.effect || i : t;a = a || {}, "number" == typeof a && (a = { duration: a }), r = !e.isEmptyObject(a), a.complete = n, a.delay && s.delay(a.delay), r && e.effects && e.effects.effect[o] ? s[t](a) : o !== t && s[o] ? s[o](a.duration, a.easing, n) : s.queue(function (i) {
                    e(this)[t](), n && n.call(s[0]), i();
                });
            };
        });
    })(jQuery);
    /*! jquery.kinetic - v1.8.3 - 2013-12-08 http://the-taylors.org/jquery.kinetic
     * Copyright (c) 2013 Dave Taylor; Licensed MIT */
    (function (t) {
        "use strict";
        var e = { cursor: "move", decelerate: !0, triggerHardware: !1, y: !0, x: !0, slowdown: .9, maxvelocity: 40, throttleFPS: 60, movingClass: { up: "kinetic-moving-up", down: "kinetic-moving-down", left: "kinetic-moving-left", right: "kinetic-moving-right" }, deceleratingClass: { up: "kinetic-decelerating-up", down: "kinetic-decelerating-down", left: "kinetic-decelerating-left", right: "kinetic-decelerating-right" } },
            n = "kinetic-settings",
            i = "kinetic-active";window.requestAnimationFrame || (window.requestAnimationFrame = function () {
            return window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (t) {
                window.setTimeout(t, 1e3 / 60);
            };
        }()), t.support = t.support || {}, t.extend(t.support, { touch: "ontouchend" in document });var o = function o() {
            return !1;
        },
            c = function c(t, e) {
            return 0 === Math.floor(Math.abs(t)) ? 0 : t * e;
        },
            l = function l(t, e) {
            var n = t;return t > 0 ? t > e && (n = e) : 0 - e > t && (n = 0 - e), n;
        },
            s = function s(t, e) {
            this.removeClass(t.movingClass.up).removeClass(t.movingClass.down).removeClass(t.movingClass.left).removeClass(t.movingClass.right).removeClass(t.deceleratingClass.up).removeClass(t.deceleratingClass.down).removeClass(t.deceleratingClass.left).removeClass(t.deceleratingClass.right), t.velocity > 0 && this.addClass(e.right), 0 > t.velocity && this.addClass(e.left), t.velocityY > 0 && this.addClass(e.down), 0 > t.velocityY && this.addClass(e.up);
        },
            a = function a(t, e) {
            e.velocity = 0, e.velocityY = 0, e.decelerate = !0, "function" == typeof e.stopped && e.stopped.call(t, e);
        },
            r = function r(t, e) {
            var n = t[0];e.x && n.scrollWidth > 0 ? (n.scrollLeft = e.scrollLeft = n.scrollLeft + e.velocity, Math.abs(e.velocity) > 0 && (e.velocity = e.decelerate ? c(e.velocity, e.slowdown) : e.velocity)) : e.velocity = 0, e.y && n.scrollHeight > 0 ? (n.scrollTop = e.scrollTop = n.scrollTop + e.velocityY, Math.abs(e.velocityY) > 0 && (e.velocityY = e.decelerate ? c(e.velocityY, e.slowdown) : e.velocityY)) : e.velocityY = 0, s.call(t, e, e.deceleratingClass), "function" == typeof e.moved && e.moved.call(t, e), Math.abs(e.velocity) > 0 || Math.abs(e.velocityY) > 0 ? window.requestAnimationFrame(function () {
                r(t, e);
            }) : a(t, e);
        },
            u = function u(e) {
            var i = t.kinetic.callMethods[e],
                o = Array.prototype.slice.call(arguments);i && this.each(function () {
                var e = o.slice(1),
                    c = t(this).data(n);e.unshift(c), i.apply(this, e);
            });
        },
            v = function v(e, n) {
            e[0], t.support.touch ? e.bind("touchstart", n.events.touchStart).bind("touchend", n.events.inputEnd).bind("touchmove", n.events.touchMove) : e.mousedown(n.events.inputDown).mouseup(n.events.inputEnd).mousemove(n.events.inputMove), e.click(n.events.inputClick).scroll(n.events.scroll).bind("selectstart", o).bind("dragstart", n.events.dragStart);
        },
            d = function d(e, n) {
            e[0], t.support.touch ? e.unbind("touchstart", n.events.touchStart).unbind("touchend", n.events.inputEnd).unbind("touchmove", n.events.touchMove) : e.unbind("mousedown", n.events.inputDown).unbind("mouseup", n.events.inputEnd).unbind("mousemove", n.events.inputMove).unbind("scroll", n.events.scroll), e.unbind("click", n.events.inputClick).unbind("selectstart", o), e.unbind("dragstart", n.events.dragStart);
        },
            f = function f(o) {
            this.addClass(i).each(function () {
                var i = this,
                    c = t(this);if (!c.data(n)) {
                    var a,
                        u,
                        d,
                        f,
                        p = t.extend({}, e, o),
                        h = !1,
                        m = !1,
                        g = !1,
                        w = 1e3 / p.throttleFPS;p.velocity = 0, p.velocityY = 0;var y = function y() {
                        a = !1, u = !1, g = !1;
                    };t(document).mouseup(y).click(y);var C = function C() {
                        p.velocity = l(h - a, p.maxvelocity), p.velocityY = l(m - u, p.maxvelocity);
                    },
                        b = function b(e, n) {
                        return t.isFunction(p.filterTarget) ? p.filterTarget.call(i, e, n) !== !1 : n.which && n.which > 1 ? !1 : !0;
                    },
                        k = function k(t, e) {
                        g = !0, p.velocity = h = 0, p.velocityY = m = 0, a = t, u = e;
                    },
                        Y = function Y() {
                        a && h && p.decelerate === !1 && (p.decelerate = !0, C(), a = h = g = !1, r(c, p));
                    },
                        D = function D(e, n) {
                        (!d || new Date() > new Date(d.getTime() + w)) && (d = new Date(), g && (a || u) && (f && (t(f).blur(), f = null, c.focus()), p.decelerate = !1, p.velocity = p.velocityY = 0, c[0].scrollLeft = p.scrollLeft = p.x ? c[0].scrollLeft - (e - a) : c[0].scrollLeft, c[0].scrollTop = p.scrollTop = p.y ? c[0].scrollTop - (n - u) : c[0].scrollTop, h = a, m = u, a = e, u = n, C(), s.call(c, p, p.movingClass), "function" == typeof p.moved && p.moved.call(c, p)));
                    };p.events = { touchStart: function touchStart(t) {
                            var e;b(t.target, t) && (e = t.originalEvent.touches[0], k(e.clientX, e.clientY), t.stopPropagation());
                        }, touchMove: function touchMove(t) {
                            var e;g && (e = t.originalEvent.touches[0], D(e.clientX, e.clientY), t.preventDefault && t.preventDefault());
                        }, inputDown: function inputDown(t) {
                            b(t.target, t) && (k(t.clientX, t.clientY), f = t.target, "IMG" === t.target.nodeName && t.preventDefault(), t.stopPropagation());
                        }, inputEnd: function inputEnd(t) {
                            Y(), f = null, t.preventDefault && t.preventDefault();
                        }, inputMove: function inputMove(t) {
                            g && (D(t.clientX, t.clientY), t.preventDefault && t.preventDefault());
                        }, scroll: function scroll(t) {
                            "function" == typeof p.moved && p.moved.call(c, p), t.preventDefault && t.preventDefault();
                        }, inputClick: function inputClick(t) {
                            return Math.abs(p.velocity) > 0 ? (t.preventDefault(), !1) : void 0;
                        }, dragStart: function dragStart() {
                            return f ? !1 : void 0;
                        } }, v(c, p), c.data(n, p).css("cursor", p.cursor), p.triggerHardware && c.css({ "-webkit-transform": "translate3d(0,0,0)", "-webkit-perspective": "1000", "-webkit-backface-visibility": "hidden" });
                }
            });
        };t.kinetic = { settingsKey: n, callMethods: { start: function start(e, n) {
                    var i = t(this);e = t.extend(e, n), e && (e.decelerate = !1, r(i, e));
                }, end: function end(e) {
                    t(this), e && (e.decelerate = !0);
                }, stop: function stop(e) {
                    var n = t(this);a(n, e);
                }, detach: function detach(e) {
                    var n = t(this);d(n, e), n.removeClass(i).css("cursor", "");
                }, attach: function attach(e) {
                    var n = t(this);v(n, e), n.addClass(i).css("cursor", "move");
                } } }, t.fn.kinetic = function (t) {
            return "string" == typeof t ? u.apply(this, arguments) : f.call(this, t), this;
        };
    })(window.jQuery || window.Zepto);
    ;
    !function (a, b, c, d) {
        a.widget("thomaskahn.smoothTouchScroll", { options: { scrollableAreaClass: "scrollableArea", scrollWrapperClass: "scrollWrapper", continuousScrolling: !1, startAtElement: "", onScroll: function onScroll(a, b) {}, onScrollStop: function onScrollStop(a, b) {} }, _create: function _create() {
                var c = this,
                    d = this.options,
                    e = this.element;e.data("scrollWrapper", e.find("." + d.scrollWrapperClass)), e.data("scrollableArea", e.find("." + d.scrollableAreaClass)), 0 === e.data("scrollableArea").length && 0 === e.data("scrollWrapper").length ? (e.wrapInner("<div class='" + d.scrollableAreaClass + "'>").wrapInner("<div class='" + d.scrollWrapperClass + "'>"), e.data("scrollWrapper", e.find("." + d.scrollWrapperClass)), e.data("scrollableArea", e.find("." + d.scrollableAreaClass))) : 0 === e.data("scrollWrapper").length ? (e.wrapInner("<div class='" + d.scrollWrapperClass + "'>"), e.data("scrollWrapper", e.find("." + d.scrollWrapperClass))) : 0 === e.data("scrollableArea").length && (e.data("scrollWrapper").wrapInner("<div class='" + d.scrollableAreaClass + "'>"), e.data("scrollableArea", e.find("." + d.scrollableAreaClass))), e.data("scrollXPos", 0), e.data("scrollableAreaWidth", 0), e.data("startingPosition", 0), e.data("rightScrollingInterval", null), e.data("leftScrollingInterval", null), e.data("previousScrollLeft", 0), e.data("getNextElementWidth", !0), e.data("swapAt", null), e.data("startAtElementHasNotPassed", !0), e.data("swappedElement", null), e.data("originalElements", e.data("scrollableArea").children()), e.data("visible", !0), e.data("enabled", !0), e.data("scrollableAreaHeight", e.data("scrollableArea").height()), e.data("enabled") && e.data("scrollWrapper").kinetic({ cursor: "move", decelerate: !0, triggerHardware: !1, y: !1, x: !0, axisTolerance: 7, slowdown: .9, maxvelocity: 80, throttleFPS: 60, moved: function moved(a) {
                        d.onScroll(e.data("scrollWrapper"), e.data("scrollableArea")), d.continuousScrolling && (e.data("scrollWrapper").scrollLeft() <= 0 ? c._checkContinuousSwapLeft() : c._checkContinuousSwapRight()), c._trigger("touchMoved");
                    }, stopped: function stopped(a) {
                        d.onScrollStop(e.data("scrollWrapper"), e.data("scrollableArea")), c._trigger("touchStopped");
                    } }), a(b).bind("resize", function () {
                    c._trigger("windowResized");
                });
            }, _init: function _init() {
                var a = this;this.element;a.recalculateScrollableArea(), a._trigger("initializationComplete");
            }, recalculateScrollableArea: function recalculateScrollableArea() {
                var b = 0,
                    c = !1,
                    d = this.options,
                    e = this.element;e.data("scrollableArea").children().each(function () {
                    d.startAtElement.length > 0 && a(this).attr("id") === d.startAtElement && (e.data("startingPosition", b), c = !0), b += a(this).outerWidth(!0);
                }), c || e.data("startAtElement", ""), e.data("scrollableAreaWidth", b), e.data("scrollableArea").width(e.data("scrollableAreaWidth")), e.data("scrollWrapper").scrollLeft(e.data("startingPosition")), e.data("scrollXPos", e.data("startingPosition"));
            }, _checkContinuousSwapRight: function _checkContinuousSwapRight() {
                var b = this.element,
                    c = this.options;if (b.data("getNextElementWidth") && (c.startAtElement.length > 0 && b.data("startAtElementHasNotPassed") ? (b.data("swapAt", a(c.startAtElement).outerWidth(!0)), b.data("startAtElementHasNotPassed", !1)) : b.data("swapAt", b.data("scrollableArea").children(":first").outerWidth(!0)), b.data("getNextElementWidth", !1)), b.data("swapAt") <= b.data("scrollWrapper").scrollLeft()) {
                    b.data("swappedElement", b.data("scrollableArea").children(":first").detach()), b.data("scrollableArea").append(b.data("swappedElement"));var d = b.data("scrollWrapper").scrollLeft();b.data("scrollWrapper").scrollLeft(d - b.data("swappedElement").outerWidth(!0)), b.data("getNextElementWidth", !0);
                }
            }, _checkContinuousSwapLeft: function _checkContinuousSwapLeft() {
                var b = this.element,
                    c = this.options;b.data("getNextElementWidth") && (c.startAtElement.length > 0 && b.data("startAtElementHasNotPassed") ? (b.data("swapAt", a(c.startAtElement).outerWidth(!0)), b.data("startAtElementHasNotPassed", !1)) : b.data("swapAt", b.data("scrollableArea").children(":first").outerWidth(!0)), b.data("getNextElementWidth", !1)), 0 === b.data("scrollWrapper").scrollLeft() && (b.data("swappedElement", b.data("scrollableArea").children(":last").detach()), b.data("scrollableArea").prepend(b.data("swappedElement")), b.data("scrollWrapper").scrollLeft(b.data("scrollWrapper").scrollLeft() + b.data("swappedElement").outerWidth(!0)), b.data("getNextElementWidth", !0));
            }, restoreOriginalElements: function restoreOriginalElements() {
                var a = this,
                    b = this.element;b.data("scrollableArea").html(b.data("originalElements")), a.recalculateScrollableArea(), a.jumpToElement("first");
            }, show: function show() {
                var a = this.element;a.data("visible", !0), a.show();
            }, hide: function hide() {
                var a = this.element;a.data("visible", !1), a.hide();
            }, enable: function enable() {
                var a = this.element;a.data("scrollWrapper").kinetic("attach"), a.data("enabled", !0);
            }, disable: function disable() {
                var b = this.element;b.data("scrollWrapper").kinetic("detach"), b.data("enabled", !1);
            }, destroy: function destroy() {
                var c = this.element;c.data("scrollableArea").remove(), c.data("scrollWrapper").remove(), c.html(c.data("originalElements")), a.Widget.prototype.destroy.call(this);
            } });
    }(jQuery, window, document);
}

function hideDups(arr) {
    return arr.map(function (el) {
        if (el.extra !== 'hidden') {
            var duplicatesArr = arr.filter(function (element) {
                return el.val === element.val && el !== element;
            });
            duplicatesArr.forEach(function (dup) {
                arr.find(function (element) {
                    return dup === element;
                }).extra = 'hidden';
            });
        }
        return el;
    });
}

function attributeSetter(selector, attrName, value) {
    document.querySelector(selector).setAttribute(attrName, value);
}

var cardNumbersBuilder = {
    settings: {
        cardClass: '.timeline__slider-item',
        cardClassIgnore: 'slick-cloned',
        dataAttr: 'data-year',
        countPlaceholder: 'timeline-card__number'
    },
    init: function init() {
        var _this = cardNumbersBuilder;
        _this.buildCounts(_this.getCards());
    },
    buildCounts: function buildCounts(arrCards) {
        var _this = cardNumbersBuilder;
        // Iterate over the cards
        arrCards.forEach(function (card, index) {
            // Placeholder for the card number/total info
            var countPh = document.createElement('DIV');
            countPh.classList.add(_this.settings.countPlaceholder);
            card.appendChild(countPh);
            // Array of the cards from the same year
            var arrCardsSameYear = _this.getCardsYear(arrCards, card.getAttribute(_this.settings.dataAttr));
            // Total number of cards from the same year
            var noCardsSameYear = arrCardsSameYear.length.toString().length === 1 ? '0' + arrCardsSameYear.length : '' + arrCardsSameYear.length;
            // Variable to store the card number
            var cardNo = void 0;
            // Iterate over the cards of the same year and set the card number
            arrCardsSameYear.forEach(function (el, i) {
                cardNo = el === card ? (i + 1).toString().length === 1 ? '0' + (i + 1) : '' + (i + 1) : cardNo;
            });
            // Set the HTML with the card number and total
            _this.setHTML(countPh, cardNo + '/' + noCardsSameYear);
        });
    },
    getCards: function getCards() {
        return Array.from(document.querySelectorAll(cardNumbersBuilder.settings.cardClass)).filter(function (el) {
            return !el.classList.contains(cardNumbersBuilder.settings.cardClassIgnore);
        });
    },
    getCardsYear: function getCardsYear(arrCards, year) {
        return arrCards.filter(function (card) {
            return card.getAttribute(cardNumbersBuilder.settings.dataAttr) === year;
        });
    },
    setHTML: function setHTML(selector, html) {
        selector.innerHTML = html;
    }

};

var silhouettesManager = {
    settings: {
        sliderItem: '.timeline__slider-item',
        arrowNext: '.slick-next',
        arrowPrev: '.slick-prev',
        hideClass: 'timeline-hide',
        sliderWrapper: $('.js-timeline-slick')
    },
    setVisibility: function setVisibility(currentSlide, initFlag) {
        var _this = silhouettesManager;
        _this.checkFirstlast(currentSlide, _this, initFlag);
    },
    checkFirstlast: function checkFirstlast(currentSlide, _this, initFlag) {
        var currSlide = initFlag ? 0 : typeof currentSlide.currentSlide === "undefined" ? currentSlide : currentSlide.currentSlide;
        var lastSlide = slick.isLastSlide(currSlide);
        var sliderWrapper = _this.settings.sliderWrapper;
        var arrow = void 0;
        var element = void 0;
        var currentSlideEl = void 0;

        // Is last slide?
        if (lastSlide) {
            currentSlideEl = sliderWrapper.find(_this.settings.sliderItem + '.slick-current');
            arrow = sliderWrapper.find(_this.settings.arrowNext);
            element = currentSlideEl.next();
            _this.showT(sliderWrapper.find(_this.settings.sliderItem + '.slick-current'), sliderWrapper.find(_this.settings.arrowPrev));
            _this.showT(currentSlideEl.prev(), null);
            // Is first slide?
        } else if (currSlide === 0) {
            currentSlideEl = sliderWrapper.find(_this.settings.sliderItem + '.slick-current');
            arrow = sliderWrapper.find(_this.settings.arrowPrev);
            element = currentSlideEl.prev();
            _this.showT(sliderWrapper.find(_this.settings.sliderItem + '.slick-current'), sliderWrapper.find(_this.settings.arrowNext));
            _this.showT(currentSlideEl.next(), null);
            // Regular slide clase
        } else {
            _this.showT(null);
            return false;
        }
        _this.hideT(element, arrow);
        return true;
    },
    hideT: function hideT(el, arrow) {
        var _this = silhouettesManager;
        el.addClass(_this.settings.hideClass);
        arrow.addClass(_this.settings.hideClass);
    },
    showT: function showT(slides, arrows) {
        var _this = silhouettesManager;
        var sliderWrapper = _this.settings.sliderWrapper;
        var s = slides ? slides : sliderWrapper.find(_this.settings.sliderItem);
        var a = arrows ? arrows : sliderWrapper.find(_this.settings.arrowNext + ', ' + _this.settings.arrowPrev);
        s.removeClass(_this.settings.hideClass);
        a.removeClass(_this.settings.hideClass);
    },
    enableClicks: function enableClicks(slider, ev) {
        var clickTarget = $(ev.currentTarget);
        var targetIndex = parseInt(clickTarget.attr('data-slick-index'), 10);
        var currentCardindex = parseInt(document.querySelector('.slick-track .slick-current').getAttribute('data-slick-index'), 10);
        if (targetIndex < currentCardindex) {
            slider.slick('slickPrev');
        } else {
            slider.slick('slickNext');
        }
    }
};

var yearNavBuilder = {
    settings: {
        locked: false // will avoid the beforeChange events of the 2 sliders to conflict
    },
    init: function init($trigger) {
        var _this = yearNavBuilder;

        // run ES6 pollyfills - run only once
        if (!runPolyfillsFlag) {
            runPolyfillsFlag = true;
            runPolyfills();
        }

        // Build an Array with all the slider cards
        var sliderItemsArr = Array.from(document.querySelectorAll('.js-timeline-slick .timeline__slider-item'));

        // build the year navigation
        //_this.buildYearsNav(_this.getUniqueYears(sliderItemsArr), sliderItemsArr);
        _this.buildYearsNav(yearsArray, sliderItemsArr);

        // build the interaction between the main slider and the year nav one
        _this.handleSlidersInteraction($trigger);

        // Turn into a linear slider:
        // - No future years displayed at the LHS of the active one.
        // - No past years displayed at the RHS of the active one.
        _this.forceLinearity();
    },
    getUniqueYears: function getUniqueYears(slidersArr) {
        var uniqueYearsSet = new Set(); // ensures no duplications
        slidersArr.forEach(function (el) {
            uniqueYearsSet.add(el.getAttribute('data-year'));
        });
        return [].concat(_toConsumableArray(uniqueYearsSet)).sort();
    },
    buildYearsNav: function buildYearsNav(uniqueYearsArr, slidersArr) {
        $('.timeline__slider-wrapper').after('<ul class="timeline-year-nav js-timeline-nav-slick"></ul>');
        uniqueYearsArr.forEach(function (year) {
            // Append each year to the already created ul
            $('.js-timeline-nav-slick').append('<li class="timeline-year-nav__item" data-year="' + year + '"><a href="#" class="timeline-year-nav__item-link">' + year + '</a></li>');

            // Iterate over the unique years set and modify the 1st cards found for a particular year
            // and set them as links for the year navigation
            // slidersArr.find(el =>
            //     el.getAttribute('data-year') === year).setAttribute('data-timeline-nav-linked', true);
        });
    },
    fireSiblingSlider: function fireSiblingSlider(sourceEl, currSlideIndex, targetEl, navToMainFlag) {
        var _this = yearNavBuilder;

        // Building a concurrency mechanism to avoid both 'beforeChange' events to access this method simultaneously
        if (_this.settings.locked) {
            // this method is currently locked. Lets get outta here
            return;
        }
        // If this line was reached, the method hasn't been locked yet. Let's lock it for our protection
        _this.settings.locked = true;

        var $navTrigger = $('.js-timeline-nav-slick');
        var currentYear = _this.getSlideYear(sourceEl, currSlideIndex);
        var targetSlideIndex = void 0;
        targetEl.find('.slick-slide').not('.slick-cloned').each(function (i, el) {
            if (el.getAttribute('data-year') === currentYear) {
                if (navToMainFlag) {
                    if (el.getAttribute('data-timeline-nav-linked') === 'true') {
                        targetSlideIndex = i;
                    }
                } else {
                    targetSlideIndex = i;
                }
            }
        });
        targetEl.slick('slickGoTo', targetSlideIndex);

        // Release the locks. We've done our work here.
        _this.settings.locked = false;
    },
    handleSlidersInteraction: function handleSlidersInteraction($trigger) {
        var _this = yearNavBuilder;

        // Listener to fire the year nav slider after the main slider is changed
        $trigger.on('beforeChange', function (event, slick, currentSlide, nextSlide) {
            _this.fireSiblingSlider($trigger, nextSlide, $('.js-timeline-nav-slick'), false);
        });

        // Listener to fire the main slider after the year nav slider is changed
        $('.js-timeline-nav-slick').on('beforeChange', function (event, slick, currentSlide, nextSlide) {
            _this.fireSiblingSlider($('.js-timeline-nav-slick'), nextSlide, $trigger, true);
        });

        // Enable the clicks over the nav years
        $('.js-timeline-nav-slick').on('init', function (slick) {
            var $navTrigger = $('.js-timeline-nav-slick');

            $('.timeline-year-nav__item-link').on('click', function (e) {
                e.preventDefault();

                var year = $(e.currentTarget).closest('.slick-slide').data('year');

                // Check is year loaded
                if (yearsLoaded.indexOf(year) >= 0) {
                    goToYear(year);

                    // Check is preloaded
                } else if (year >= yearPreloaded.years[0] && year <= yearPreloaded.years[1]) {
                    var id = undefined;
                    yearPreloaded.takeFromPreloaded(year, id);

                    // ... or just load
                } else {
                    var prevYear = yearsArray[yearsArray.indexOf(year) - 1] !== undefined ? yearsArray[yearsArray.indexOf(year) - 1] : year,
                        nextYear = yearsArray[yearsArray.indexOf(year) + 1] !== undefined ? yearsArray[yearsArray.indexOf(year) + 1] : year;

                    regetCards(prevYear, nextYear, year);
                }
            });

            // Workaround for click event not being fired on mobile due to passive event listeners conflict
            Array.from(document.querySelectorAll('.timeline-year-nav__item-link')).forEach(function (el) {
                el.addEventListener("touchend", function () {
                    el.click();
                }, false);
            });
        });
    },
    forceLinearity: function forceLinearity() {
        function turnLinear() {
            var arrYearsNav = Array.from(document.querySelectorAll('.js-timeline-nav-slick .timeline-year-nav__item'));
            arrYearsNav.forEach(function (el) {
                if (el.classList.contains('slick-cloned')) {
                    el.classList.add('timeline-hide');
                }
            });
        }

        // Call the linearity function both on after change and on init
        $('.js-timeline-nav-slick').on('afterChange', function (slick, currentSlide) {
            turnLinear();
        });

        $('.js-timeline-nav-slick').on('init', function (slick) {
            turnLinear();
        });
    },
    getSlideYear: function getSlideYear(trigger, index) {
        return trigger.find('.slick-slide').not('.slick-cloned').eq(index).attr('data-year');
    }

};

var onBeforeChange = function onBeforeChange() {
    slick.settings.trigger.on('beforeChange', function (event, slick, currentSlide, nextSlide) {

        // Handle preloading
        yearPreloaded.checkPreloadingStatus(currentSlide, nextSlide);

        // Handle hash changes
        var year = parseInt($('.timeline__slider-item[data-slick-index="' + nextSlide + '"]').attr('data-year'), 10),
            id = parseInt($('.timeline__slider-item[data-slick-index="' + nextSlide + '"]').attr('data-id'), 10);
        hashHandler.set(year, id);
    });
};

var slickReinit = function slickReinit() {

    // Fire slick
    slick.settings.trigger.slick({
        centerMode: $('.js-timeline-slick .timeline__slider-item').length > 1,
        centerPadding: '28px',
        slidesToShow: 1,
        speed: 500,
        dots: false,
        swipe: true,
        useTransform: true,
        cssEase: 'cubic-bezier(0.075, 0.82, 0.165, 1)',
        lazyLoad: 'ondemand',
        responsive: [{
            breakpoint: 960,
            settings: {
                speed: 500,
                swipe: true,
                dots: false,
                arrows: false,
                cssEase: 'cubic-bezier(0.075, 0.82, 0.165, 1)',
                lazyLoad: 'ondemand',
                touchThreshold: 10,
                edgeFriction: 0.1
            }
        }, {
            breakpoint: 600,
            settings: {
                speed: 500,
                centerPadding: '24px',
                arrows: false,
                swipe: true,
                dots: false,
                cssEase: 'cubic-bezier(0.075, 0.82, 0.165, 1)',
                lazyLoad: 'ondemand',
                touchThreshold: 10,
                edgeFriction: 0.1
            }
        }]
    });
};

var slick = {
    settings: {
        trigger: '',
        sliderClass: '.timeline__slider',
        loadingDelay: 2000,
        coloursSrc: 'data-colours',
        cardsClass: 'timeline-card',
        ctaColourQSParamName: 'colour',
        fancyboxTrigger: '.js-timeline-popup',
        fancyboxEnabler: '.js-timeline-popup-active',
        iframeLoading: 'timeline--loading-iframe'
    },
    init: function init(trigger) {
        var _this = slick;
        // Set settings
        _this.settings.trigger = trigger;
        // Build card numbers
        _this.buildCardNumbers();
        // Init desktop silhouettes handler
        _this.silhouettesHandler();
        // Init Year navigation
        _this.yearNavHandler();
        // Set the colours to the slides
        _this.setColours();
        // Init slick slider
        _this.initSlick();
        // Init FancyBox
        _this.initFancy();
    },
    buildCardNumbers: function buildCardNumbers() {
        var _this = slick;
        _this.settings.trigger.on('init', function (slick) {
            // Calculate card numbers
            cardNumbersBuilder.init();
        });
    },
    silhouettesHandler: function silhouettesHandler() {
        var _this = slick;
        var $trigger = _this.settings.trigger;
        var sliderClass = _this.settings.sliderClass;

        function setSilhouetteVisibility() {
            // Set silhouettes visibility as the slider changes
            silhouettesManager.setVisibility.apply(silhouettesManager, arguments);
        }

        function initEvents() {
            // Call off the events to don't cause conflict on resize
            $trigger.off('init.silhouettes');
            $trigger.off('afterChange.silhouettes');
            $('.slick-track .timeline__slider-item').off('click.silhouettes');

            $trigger.on('init.silhouettes', function (slick) {
                var startCard = _this.getStartCard().card;
                var cardID = void 0,
                    initFlag = void 0;
                if (startCard === 0) {
                    cardID = null;
                    initFlag = true;
                } else {
                    cardID = startCard;
                    initFlag = false;
                }

                setSilhouetteVisibility(cardID, initFlag);

                // Enable silhuettes click handler
                $('.slick-track .timeline__slider-item').not('.slick-current').on('click.silhouettes', function (ev) {
                    if (!ev.target.classList.contains('js-timeline-stopProp')) {
                        silhouettesManager.enableClicks($trigger, ev);
                    }
                });
            });

            $trigger.on('afterChange.silhouettes', function (slick, currentSlide) {
                setSilhouetteVisibility(currentSlide, false);

                $('.slick-current').off('click');
                // Ensure the videos still load the default functionality despite of having disabled the clicks above.
                boxVideosInit();

                // Enable silhuettes click handler
                $('.slick-track .timeline__slider-item').not('.slick-current').on('click.silhouettes', function (ev) {
                    if (!ev.target.classList.contains('js-timeline-stopProp')) {
                        silhouettesManager.enableClicks($trigger, ev);
                    }
                });
            });
        }

        initEvents();
    },
    getLength: function getLength() {
        return slick.settings.trigger.find('.timeline__slider-item').not('.slick-cloned').length;
    },
    isLastSlide: function isLastSlide(i) {
        return slick.getLength() === i + 1;
    },
    yearNavHandler: function yearNavHandler() {
        var _this = slick;
        yearNavBuilder.init(_this.settings.trigger);
    },
    showSliders: function showSliders() {
        document.querySelector('.timeline.timeline--loading').classList.remove('timeline--loading');
    },
    checkLoading: function checkLoading() {
        var _this = slick;
        var initFlag = 0;

        function runInit(selector) {
            selector.on('init', function (slick) {
                initFlag += 1;
                // Ensure both sliders are already initialised
                if (initFlag === 2) {
                    // Show the sliders
                    _this.showSliders();
                }
            });
        }

        runInit(slick.settings.trigger);
        runInit($('.js-timeline-nav-slick'));
    },
    getColoursArr: function getColoursArr() {
        return document.querySelector('[' + slick.settings.coloursSrc + ']').getAttribute(slick.settings.coloursSrc).split(',');
    },
    getCards: function getCards() {
        return Array.from(document.querySelectorAll('.' + slick.settings.cardsClass));
    },
    appendQSParam: function appendQSParam(element, paramName, paramValue) {
        if (element) {
            var currentHref = element.getAttribute('href');
            var newHref = '';
            if (currentHref.indexOf('?') === -1) {
                newHref = currentHref + '?' + paramName + '=' + paramValue;
            } else {
                newHref = currentHref + '&' + paramName + '=' + paramValue;
            }
            element.setAttribute('href', newHref);
        }
    },
    setColours: function setColours() {
        var _this = slick;
        var arrColours = _this.getColoursArr();
        var arrCards = _this.getCards();
        var nColours = arrColours.length;
        var acc = 0; // when the array of colours is smaller than the array of cards, the same colour
        // has to be applied to multiple elements. This variable will be used to control the indexes
        // of the cards that will share the same colour.

        // Iterate over the array of colours
        arrColours.forEach(function (colour, i) {
            acc = i;
            // For each colour, iterate over the array of cards and set the appropriate modifiers
            arrCards.forEach(function (el, j) {
                if (j === acc) {
                    // Apply the modifier class to the card
                    el.classList.add(_this.settings.cardsClass + '--' + colour);
                    // Look for the CTA buttons in order to modify their href attribute so it passes
                    // the colour name as query string parameter
                    _this.appendQSParam(el.querySelector('.btn'), _this.settings.ctaColourQSParamName, colour);
                    // Set the acc for the index of the next card to have the same colour
                    acc += nColours;
                }
            });
        });
    },
    getStartCard: function getStartCard() {
        var _this = slick;
        var mainSliderEl = document.querySelector(_this.settings.sliderClass);
        var cardsArr = Array.from(mainSliderEl.querySelectorAll('.timeline__slider-item:not(.slick-cloned)'));
        var yearNavSliderEl = document.querySelector('.js-timeline-nav-slick');
        var yearsArr = Array.from(yearNavSliderEl.querySelectorAll('li:not(.slick-cloned)'));
        var startID = mainSliderEl.getAttribute('data-start-id');
        var startObj = {
            card: 0,
            year: 0
        };
        if (startID) {
            var startCard = cardsArr.find(function (el) {
                return el.getAttribute('data-id') === startID;
            });
            if (typeof startCard !== 'undefined') {
                var _startYear = yearsArr.find(function (el) {
                    return el.getAttribute('data-year') === startCard.getAttribute('data-year');
                });
                startObj.card = cardsArr.indexOf(startCard);
                startObj.year = yearsArr.indexOf(_startYear);
            }
        }
        return startObj;
    },
    setIframeState: function setIframeState(element, classToApply) {
        element.classList.toggle(classToApply);
    },
    initSlick: function initSlick() {
        var _this = slick;

        // Check if the loading spinner can already be removed
        _this.checkLoading();

        slick.settings.trigger.slick({
            centerMode: $('.js-timeline-slick .timeline__slider-item').length > 1,
            centerPadding: '28px',
            slidesToShow: 1,
            speed: 500,
            dots: false,
            swipe: true,
            initialSlide: _this.getStartCard().card,
            useTransform: true,
            cssEase: 'cubic-bezier(0.075, 0.82, 0.165, 1)',
            lazyLoad: 'ondemand',
            responsive: [{
                breakpoint: 960,
                settings: {
                    speed: 500,
                    swipe: true,
                    dots: false,
                    arrows: false,
                    cssEase: 'cubic-bezier(0.075, 0.82, 0.165, 1)',
                    lazyLoad: 'ondemand',
                    touchThreshold: 10,
                    edgeFriction: 0.1
                }
            }, {
                breakpoint: 600,
                settings: {
                    speed: 500,
                    centerPadding: '24px',
                    arrows: false,
                    swipe: true,
                    dots: false,
                    cssEase: 'cubic-bezier(0.075, 0.82, 0.165, 1)',
                    lazyLoad: 'ondemand',
                    touchThreshold: 10,
                    edgeFriction: 0.1
                }
            }]
        });
        onBeforeChange();

        var uniqueYearsArr = yearNavBuilder.getUniqueYears(Array.from(document.querySelectorAll('.js-timeline-slick .timeline__slider-item')));
        var nSlidesShow = uniqueYearsArr.length === 1 ? 1 : uniqueYearsArr.length > 11 ? 11 : uniqueYearsArr.length - 1;

        var smoothTouchScrollLock = false;

        $('.js-timeline-nav-slick').on("beforeChange", function () {
            smoothTouchScrollLock = true;
            var scrollWrapper = $(".js-timeline-nav-slick .slick-list"),
                scrollableArea = $(".js-timeline-nav-slick .slick-track"),
                scrollLeftAmount = scrollWrapper.scrollLeft();
            if (scrollableArea[0].style.transform === "translate3d(0px, 0px, 0px)") {
                scrollableArea[0].style.transform = "translate3d(-" + scrollLeftAmount + "px, 0px, 0px)";
                scrollWrapper.scrollLeft(0);
            }
        });

        $('.js-timeline-nav-slick').on("afterChange", function () {
            smoothTouchScrollLock = false;
        });

        $('.js-timeline-nav-slick').slick({
            slidesToShow: nSlidesShow,
            centerPadding: '0px',
            dots: false,
            centerMode: true,
            arrows: false,
            variableWidth: true,
            speed: 500,
            swipe: false,
            swipeToSlide: false,
            slidesToScroll: 0,
            infinite: false,
            initialSlide: _this.getStartCard().year
        });

        var scrollableAreaWidth = null;

        $('.js-timeline-nav-slick').smoothTouchScroll({
            scrollWrapperClass: "slick-list",
            scrollableAreaClass: "slick-track",
            continuousScrolling: false,
            startAtElement: ".timeline-year-nav .slick-current",
            onScroll: function onScroll(scrollWrapper, scrollableArea) {
                if (scrollableArea[0].style.transform !== "translate3d(0px, 0px, 0px)" && !smoothTouchScrollLock) {
                    var scrollLeftAmount = Number(scrollableArea[0].style.transform.replace("translate3d(", "").replace("px, 0px, 0px)", "")) * -1;
                    if (!scrollableAreaWidth) {
                        scrollableAreaWidth = Array.from(document.querySelectorAll('.timeline-year-nav__item')).reduce(function (acc, el) {
                            return acc + el.offsetWidth + 1;
                        }, 0);
                    }
                    scrollableArea.width(scrollableAreaWidth + 'px');
                    scrollableArea[0].style.transform = "translate3d(0px, 0px, 0px)";
                    scrollWrapper.scrollLeft(scrollLeftAmount);
                }
            }
        });
    },
    initFancy: function initFancy() {
        var _this = slick;

        window.onload = function () {
            if (document.querySelector(_this.settings.fancyboxEnabler)) {
                $(_this.settings.fancyboxTrigger).fancybox({
                    type: 'iframe',
                    openEffect: 'elastic',
                    closeEffect: 'elastic',
                    openspeed: 300,
                    closeSpeed: 250,
                    autoSize: true,
                    maxWidth: '95%',
                    maxHeight: '100%',
                    autoWidth: true,
                    autoHeight: true,
                    padding: 0,
                    margin: 0,
                    helpers: {
                        overlay: {
                            css: {
                                'overflow-x': 'hidden'
                            }
                        }
                    },
                    tpl: {
                        closeBtn: '<a title="Close" class="btn timeline-iframe-close" href="javascript:;">' + '<i class="fa fa-times" aria-hidden="true"></i></a>'
                    },
                    beforeLoad: function beforeLoad() {
                        // Display loading animation
                        _this.setIframeState(document.querySelector('.timeline'), _this.settings.iframeLoading);
                    },
                    afterShow: function afterShow() {
                        // Hide loading animation
                        _this.setIframeState(document.querySelector('.timeline'), _this.settings.iframeLoading);
                    }
                });

                Array.from(document.querySelectorAll(_this.settings.fancyboxTrigger)).forEach(function (el) {
                    _this.appendQSParam(el, 'ifrload', 'true');
                });
            }
        };
    }
};

(function () {
    // Adds a class to a top wrapper that makes the header, footer and lHS nav to be hidden.
    // Used when the Timeline content page is loaded through an iframe in the popup.
    if (document.querySelector('.js-timeline-content-iframe-loaded')) {
        document.getElementById('page-wrapper').classList.add('timeline-content--iframed');
    }
})();

$(function () {
    // Wrap YouTube iframes and Vimeo iframes with video container to maintain aspect
    // ratio at all screen sizes.
    // This is handled in JS because it's too hard for content editors to add manually.
    // $('iframe[src*="youtube.com"], iframe[src*="vimeo.com"]').filter(function() {
    //     // Make sure video container does not already exist
    //     return (!$(this).parents('.video-container').length);
    // }).wrap('<div class="video-container"></div>');
});

// events-only - event_period=<dropdown val>
$(document).ready(function () {
    'use strict';

    var $this = $(this),
        $eventDropdown = $('#event-period'),
        $browseButton = $('.search-box--news-events-browse-lhs'),
        $label = $('.selectric-search-box--news-events__select span.label');

    $browseButton.on('click', function (event) {
        event.preventDefault();

        var $form = $(this).parents('.search-box--news__form');
        var eventVal = $eventDropdown.val();
        var eventSelectedText = $eventDropdown.find('option:selected').text();

        //handles onclick url change
        //location.href = '?&event_period=' + eventVal;
        //console.log($form.html());
        $form.submit();
    });
}(jQuery));
//# sourceMappingURL=global.js.map
